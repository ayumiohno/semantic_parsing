( having * having | select creation , name , budget_in_billions from department <n>
( having * having ) having | select creation from department where head > value <n>
( having * having ) having | select name from head where born_state ! = value <n>
( having * having ) having ! ( having * having ) having | select count ( * ) from head where age > value intersect select creation from department where born_state < value <n>
( having * having | select count ( * ) from farm <n>
( having * having name born_state having | select theme from farm_competition order by year asc <n>
( having * having name born_state having | select theme from farm_competition order by year asc <n>
( having * having | select hosts from farm_competition <n>
( having * having | select count ( * ) from farm <n>
( having * having name born_state having value by having | select official_name , status from city order by population desc limit value <n>
( having * having , born_state having order having | select status from city group by status having count ( * ) > value <n>
( having * having , born_state having name born_state having value by having | select status from city group by status order by count ( * ) desc limit value <n>
( having * having , born_state having | select status , avg ( population ) from city group by status <n>
( having * having , born_state having name born_state having value by having | select status from city group by status order by count ( * ) desc limit value <n>
( having * having ) having ( having * having | select official_name from city where city_id not in ( select host_city_id from farm_competition ) <n>
( having * having ) having head having | select official_name from city where population > value or population < value <n>
( having * having , born_state having name born_state having value by having | select t2 . student_details from student_course_registrations as t1 join students as t2 on t1 . student_id = t2 . student_id group by t1 . student_id order by count ( * ) desc limit value <n>
( having * having ) having | select t2 . candidate_id from people as t1 join candidates as t2 on t1 . person_id = t2 . person_id where t1 . email_address = value <n>
( having * having = ( having * having | select student_id from students except select student_id from students <n>
( having * having | select t2 . first_name , t2 . last_name from candidates as t1 join people as t2 on t1 . person_id = t2 . person_id <n>
( having * having | select count ( * ) from students <n>
( having * having ) having | select t2 . candidate_id from people as t1 join candidates as t2 on t1 . person_id = t2 . person_id where t1 . email_address = value <n>
( having * having name born_state having value by having | select t2 . student_details from student_course_registrations as t1 join students as t2 on t1 . student_id = t2 . student_id order by t1 . registration_date desc limit value <n>
( having * having | select count ( * ) from students <n>
( having * having ) having | select student_id from student_course_attendance where course_id = value <n>
( having * having ) having | select t2 . candidate_id from people as t1 join candidates as t2 on t1 . person_id = t2 . person_id where t1 . email_address = value <n>
( having * having name born_state having value by having | select t2 . student_details from student_course_registrations as t1 join students as t2 on t1 . student_id = t2 . student_id order by t1 . registration_date desc limit value <n>
( having * having | select student_id from student_course_attendance <n>
( having * having name born_state having | select first_name from people order by first_name asc <n>
( having * having ) having head having | select t2 . student_id from courses as t1 join student_course_attendance as t2 on t1 . course_id = t2 . course_id where t1 . course_name = value or t1 . course_name = value <n>
( having * having = ( having * having | select student_id from students except select student_id from students <n>
( having * having name born_state having | select first_name from people order by first_name asc <n>
( having * having ) having | select date from weather where zip_code = value <n>
( having * having , born_state having | select zip_code , count ( * ) from weather group by zip_code <n>
( having * having name born_state having value by having | select id , duration from trip order by duration desc limit value <n>
( having * having name born_state having value by having | select id , duration from trip order by duration desc limit value <n>
( having * having , born_state having | select zip_code , avg ( mean_humidity ) from weather group by zip_code <n>
( having group having * having | select count ( distinct bike_id ) from trip <n>
( having * having ) having | select count ( * ) from trip as t1 join station as t2 on t1 . end_station_id = t2 . id where t2 . installation_date = value <n>
( having * having ) having , born_state having name born_state having value by having | select t1 . id from trip as t1 join station as t2 on t1 . id = t2 . station_id where t2 . zip_code = value group by t1 . id order by count ( * ) desc limit value <n>
( having * having ) having , born_state having name born_state having value by having | select bike_id from trip where zip_code = value group by bike_id order by count ( * ) desc limit value <n>
( having * having name born_state having value by having | select id , duration from trip order by duration desc limit value <n>
( having * having ) having , born_state having order having | select zip_code from weather where zip_code = value group by zip_code having count ( * ) > = value <n>
( having * having name born_state having value by having | select id , duration from trip order by duration desc limit value <n>
( having * having ) having | select avg ( lat ) , avg ( long ) from station where city = value <n>
( having * having | select count ( * ) from trip <n>
( having * having ) having ( having * having ) having | select id from trip where duration > = ( select avg ( duration ) from trip where zip_code = value ) <n>
( having * having ) having ( having * having ) having | select id from trip where duration > = ( select avg ( duration ) from trip where zip_code = value ) <n>
( having * having name born_state having value by having | select id , duration from trip order by duration desc limit value <n>
( having * having ) having | select count ( * ) from trip as t1 join station as t2 on t1 . end_station_id = t2 . id where t2 . installation_date = value <n>
( having * having ) having from having | select count ( * ) from weather where mean_humidity > value and mean_visibility_miles > value <n>
( having * having name born_state having value by having | select id , duration from trip order by duration desc limit value <n>
( having * having name born_state having value by having | select id , duration from trip order by duration desc limit value <n>
( having * having , born_state having order having | select city from station group by city having count ( * ) > = value <n>
( having * having name born_state having value by having | select id , duration from trip order by duration desc limit value <n>
( having * having name born_state having value by having | select id , duration from trip order by duration desc limit value <n>
( having * having ) having | select avg ( lat ) , avg ( long ) from station where city = value <n>
( having * having ) having | select date from weather where zip_code = value <n>
( having * having ) having from having | select count ( * ) from weather where mean_humidity > value and mean_visibility_miles > value <n>
( having * having ) having from having | select count ( * ) from weather where mean_humidity > value and mean_visibility_miles > value <n>
( having * having , born_state having order having | select city from station group by city having count ( * ) > = value <n>
( having * having , born_state having order having | select start_station_id , start_station_name from trip group by start_station_name having count ( * ) > = value <n>
( having * having ) having from having | select count ( * ) from weather where mean_humidity > value and mean_visibility_miles > value <n>
( having * having | select count ( * ) from publication <n>
( having * having ) having | select t2 . writer from book as t1 join publication as t2 on t1 . book_id = t2 . book_id where t1 . writer = value <n>
( having * having ) having | select writer from book where writer = value <n>
( having * having ) having | select writer from book where writer = value <n>
( having * having , born_state having | select writer , count ( * ) from book group by writer <n>
( having * having = ( having * having | select writer from book except select t2 . title from book as t1 join publication as t2 on t1 . book_id = t2 . book_id <n>
( having * having ) having head having | select writer from book where writer = value or writer = value <n>
( having * having name born_state having | select name from actor order by name asc <n>
( having * having , born_state having | select nominee , count ( * ) from musical group by nominee <n>
( having * having name born_state having value | select t1 . name from actor as t1 join musical as t2 on t1 . musical_id = t2 . musical_id order by t2 . year desc <n>
( having * having ) having | select name from actor where age ! = value <n>
( having * having ) having ( having * having | select name from musical where musical_id not in ( select musical_id from actor ) <n>
( having * having ) having | select t2 . name from actor as t1 join musical as t2 on t1 . musical_id = t2 . musical_id where t1 . name = value <n>
( having * having ) having | select t2 . name from actor as t1 join musical as t2 on t1 . musical_id = t2 . musical_id where t1 . name = value <n>
( having * having , born_state having order having | select nominee from musical group by nominee having count ( * ) > = value <n>
( having * having name born_state having value by having | select t1 . name from actor as t1 join musical as t2 on t1 . musical_id = t2 . musical_id order by t2 . name desc limit value <n>
( having * having , born_state having order having | select nominee from musical group by nominee having count ( * ) > = value <n>
( having * having = ( having * having | select name from musical except select t2 . name from actor as t1 join musical as t2 on t1 . musical_id = t2 . musical_id <n>
( having * having ) having head having | select nominee from musical where award = value or award = value <n>
( having * having | select count ( * ) from follows <n>
( having * having | select count ( * ) from follows <n>
( having * having ) having | select partitionid from user_profiles where name = value <n>
( having * having , born_state having order having | select t1 . name from user_profiles as t1 join follows as t2 on t1 . uid = t2 . uid group by t2 . uid having count ( * ) > = value <n>
( having * having ) having head having | select partitionid from user_profiles where email like value or email like value <n>
( having * having name born_state having value | select name from user_profiles order by followers desc <n>
( having * having ) having | select partitionid from user_profiles where name = value <n>
( having * having | select avg ( followers ) from user_profiles <n>
( having * having , born_state having order having | select date_of_latest_revision from catalogs group by date_of_latest_revision having count ( * ) > = value <n>
( having * having ) having | select attribute_data_type from attribute_definitions where attribute_name = value <n>
( having * having ) having | select attribute_data_type from attribute_definitions where attribute_name = value <n>
( having * having , born_state having order having | select date_of_latest_revision from catalogs group by date_of_latest_revision having count ( * ) > = value <n>
( having * having name born_state having value by having | select catalog_entry_name from catalog_contents order by price_in_dollars desc limit value <n>
( having * having name born_state having by having | select catalog_entry_name from catalog_contents order by price_in_dollars asc limit value <n>
( having * having name born_state having value by having | select catalog_entry_name from catalog_contents order by price_in_dollars desc limit value <n>
( having * having name born_state having | select attribute_data_type from attribute_definitions order by attribute_data_type asc <n>
( having * having ) having | select t1 . attribute_name , t1 . attribute_id from attribute_definitions as t1 join catalog_contents_additional_attributes as t2 on t1 . attribute_id = t2 . attribute_id where t2 . attribute_value = value <n>
( having * having ) having | select t1 . attribute_name , t1 . attribute_id from attribute_definitions as t1 join catalog_contents_additional_attributes as t2 on t1 . attribute_id = t2 . attribute_id where t2 . attribute_value = value <n>
( having * having | select t1 . attribute_name , t1 . attribute_id from attribute_definitions as t1 join catalog_contents_additional_attributes as t2 on t1 . attribute_id = t2 . attribute_id <n>
( having * having | select count ( * ) from catalog_contents <n>
( having * having | select count ( * ) from flight <n>
( having * having ) having | select t2 . name from flight as t1 join aircraft as t2 on t1 . aid = t2 . aid where t1 . flno = value <n>
( having * having ) having from having | select count ( * ) from employee where salary between value and value <n>
( having * having | select avg ( salary ) , avg ( salary ) from employee <n>
( having * having name born_state having by having | select name from employee order by salary asc limit value <n>
( having * having ) having ( having * having | select name from employee where salary > ( select avg ( salary ) from employee ) <n>
( having * having name born_state having | select flno from flight order by distance asc <n>
( having * having , born_state having order having | select t2 . name from flight as t1 join aircraft as t2 on t1 . aid = t2 . aid group by t1 . aid having count ( * ) > = value <n>
( having * having ) having | select t2 . name from flight as t1 join aircraft as t2 on t1 . aid = t2 . aid where t1 . flno = value <n>
( having * having name born_state having by having | select name from employee order by salary asc limit value <n>
( having * having name born_state having value by having | select eid , name from employee order by salary desc limit value <n>
( having * having ) having | select aid from aircraft where distance > value <n>
( having * having name born_state having | select flno from flight order by distance asc <n>
( having * having ) having | select t2 . name from flight as t1 join aircraft as t2 on t1 . aid = t2 . aid where t1 . flno = value <n>
( having * having ) having | select aid from aircraft where distance > value <n>
( having * having ) having | select avg ( distance ) from flight where origin = value <n>
( having * having ) having | select aid from aircraft where distance > value <n>
( having * having name born_state having by having | select flno from flight order by distance asc limit value <n>
( having * having , born_state having | select destination , count ( * ) from flight group by destination <n>
( having * having , born_state having | select destination , count ( * ) from flight group by destination <n>
( having * having , born_state having name born_state having by having | select destination from flight group by destination order by count ( * ) asc limit value <n>
( having * having ) having | select aid from aircraft where distance > value <n>
( having * having , born_state having | select destination , count ( * ) from flight group by destination <n>
( having * having | select count ( * ) from flight <n>
( having * having ) having | select t2 . name from flight as t1 join aircraft as t2 on t1 . aid = t2 . aid where t1 . flno = value <n>
( having * having ) having | select t2 . name from flight as t1 join aircraft as t2 on t1 . aid = t2 . aid where t1 . flno = value <n>
( having * having = ( having * having ) having | select name from employee except select t1 . name from employee as t1 join certificate as t2 on t1 . eid = t2 . eid join aircraft as t3 on t3 . aid = t2 . aid where t3 . name = value <n>
( having * having ) having ! ( having * having ) having | select t1 . name from employee as t1 join certificate as t2 on t1 . eid = t2 . eid join aircraft as t3 on t3 . aid = t2 . aid where t3 . name = value intersect select t1 . name from employee as t1 join certificate as t2 on t1 . eid = t2 . eid join aircraft as t3 on t3 . aid = t2 . aid where t3 . name = value <n>
( having * having ) having , born_state having name born_state having value by having | select t1 . name from employee as t1 join certificate as t2 on t1 . eid = t2 . eid join aircraft as t3 on t3 . aid = t2 . aid where t3 . distance > value group by t1 . eid order by count ( * ) desc limit value <n>
( having * having | select count ( * ) from student <n>
( having * having | select count ( * ) from student <n>
( having * having | select stuid from student <n>
( having * having ) having | select stuid from student where sex = value <n>
( having * having , born_state having | select allergytype , count ( * ) from allergy_type group by allergytype <n>
( having * having , born_state having name born_state having value by having | select allergytype from allergy_type group by allergytype order by count ( * ) desc limit value <n>
( having * having | select count ( * ) from student <n>
( having group having * having | select count ( distinct advisor ) from student <n>
( having * having | select advisor , advisor from student <n>
( having * having ) having ( having * having ) having | select fname , lname from student where stuid not in ( select t1 . stuid from has_allergy as t1 join allergy_type as t2 on t1 . allergy = t2 . allergy where t2 . allergytype = value ) <n>
( having * having | select count ( * ) from student <n>
( having * having ) having | select stuid from student where sex = value <n>
( having * having ) having | select stuid from student where sex = value <n>
( having * having | select avg ( age ) from student <n>
( having * having name born_state having value by having | select advisor from student order by city_code desc limit value <n>
( having * having | select count ( * ) from student <n>
( having * having | select count ( * ) from student <n>
( having * having ) having | select avg ( age ) from student where sex = value <n>
( having * having | select count ( * ) from student <n>
( having * having ) having | select count ( * ) from allergy_type where allergytype = value <n>
( having * having , born_state having order having | select advisor from student group by advisor having count ( * ) > = value <n>
( having * having ) having head having | select count ( * ) from student where city_code = value or city_code = value <n>
( having * having , born_state having name born_state having value by having | select allergytype from allergy_type group by allergytype order by count ( * ) desc limit value <n>
( having * having , born_state having | select advisor , count ( * ) from student group by advisor <n>
( having * having ) having ! ( having * having ) having | select lname from student where sex = value intersect select stuid from has_allergy where allergy = value <n>
( having * having ) having ( having * having ) having | select fname , lname from student where stuid not in ( select t1 . stuid from has_allergy as t1 join allergy_type as t2 on t1 . allergy = t2 . allergy where t2 . allergytype = value ) <n>
( having * having ) having ( having * having ) having ! ( having * having ) having | select lname , sex from student where stuid in ( select t1 . stuid from has_allergy as t1 join allergy_type as t2 on t1 . allergy = t2 . allergy where t2 . allergytype = value intersect select t1 . stuid from has_allergy as t1 join allergy_type as t2 on t1 . allergy = t2 . allergy where t2 . allergytype = value intersect select t1 . stuid from has_allergy as t1 join allergy_type as t2 on t1 . allergy = t2 . allergy where t2 . allergytype = value intersect select t1 . stuid from has_allergy as t1 join allergy_type as t2 on t1 . allergy
( having * having ) having | select count ( * ) from allergy_type where allergytype = value <n>
( having * having ) having head having | select count ( * ) from student where city_code = value or city_code = value <n>
( having * having ) having | select fname , lname , age from student where sex = value <n>
( having * having ) having | select t2 . name from genres as t1 join tracks as t2 on t1 . id = t2 . genre_id where t1 . name = value <n>
( having * having name born_state having value by having | select first_name , last_name from employees order by hire_date desc limit value <n>
( having * having | select first_name , last_name from employees <n>
( having * having , born_state having | select t2 . name , count ( * ) from playlist_tracks as t1 join playlists as t2 on t2 . id = t1 . playlist_id group by t1 . name <n>
( having * having name born_state having | select first_name , last_name from employees order by hire_date asc <n>
( having * having name born_state having by having | select first_name , last_name from employees order by hire_date asc limit value <n>
( having * having ) having | select composer from tracks where name = value <n>
( having * having name born_state having by having | select first_name , last_name from employees order by hire_date asc limit value <n>
( having * having , born_state having name born_state having value by having | select billing_country , count ( * ) from invoices group by billing_country order by count ( * ) desc limit value <n>
( having * having | select count ( * ) from customers <n>
( having * having ) having | select composer from tracks where name = value <n>
( having * having ) having | select composer from tracks where name = value <n>
( having * having ) having | select count ( * ) from customers as t1 join invoices as t2 on t1 . id = t2 . genre_id where t1 . name = value <n>
( having * having ) having | select t2 . name from genres as t1 join tracks as t2 on t1 . id = t2 . genre_id where t1 . name = value <n>
( having * having ) having | select composer from tracks where name = value <n>
( having * having ) having | select first_name , last_name , salary from employees where first_name like value <n>
( having * having , born_state having name born_state having value by having | select t1 . first_name , t1 . last_name , count ( * ) from customers as t1 join invoices as t2 on t2 . customer_id = t1 . id group by t1 . id order by count ( * ) desc limit value <n>
( having * having ) having | select count ( * ) from customers as t1 join invoices as t2 on t1 . id = t2 . genre_id where t1 . name = value <n>
( having * having ) having from having | select first_name , last_name from employees where first_name like value and last_name = value <n>
( having * having ) having , born_state having | select billing_state , count ( * ) from invoices where billing_country = value group by billing_state <n>
( having * having | select first_name , last_name from employees <n>
( having * having ) having from having | select count ( * ) from invoices where billing_city = value and billing_state = value <n>
( having * having | select count ( * ) from customers <n>
( having * having | select name from media_types <n>
( having * having ) having from having | select count ( * ) from invoices where billing_city = value and billing_state = value <n>
( having * having name born_state having by having | select first_name , last_name from employees order by hire_date asc limit value <n>
( having * having ) having | select t2 . name from genres as t1 join tracks as t2 on t1 . id = t2 . genre_id where t1 . name = value <n>
( having * having ) having from having | select first_name , last_name from employees where first_name like value and last_name = value <n>
( having * having ) having head having | select t2 . name from genres as t1 join tracks as t2 on t1 . id = t2 . genre_id where t1 . name = value or t1 . name = value <n>
( having * having ) having | select t2 . name from genres as t1 join tracks as t2 on t1 . id = t2 . genre_id where t1 . name = value <n>
( having * having ) having | select composer from tracks where name = value <n>
( having * having ) having = ( having * having ) having | select t1 . name from tracks as t1 join playlist_tracks as t2 on t1 . id = t2 . track_id join playlists as t3 on t2 . playlist_id = t3 . id where t3 . name = value except select t1 . name from tracks as t1 join playlist_tracks as t2 on t1 . id = t2 . track_id join playlists as t3 on t2 . playlist_id = t3 . id where t3 . name = value except select t1 . name from tracks as t1 join playlist_tracks as t2 on t1 . id = t2 . track_id join playlists as t3 on t2 . playlist_id = t3 . id where t3 .
( having * having ) having ! ( having * having ) having | select t1 . name from tracks as t1 join playlist_tracks as t2 on t1 . id = t2 . track_id join playlists as t3 on t2 . playlist_id = t3 . id where t3 . name = value intersect select t1 . name from tracks as t1 join playlist_tracks as t2 on t1 . id = t2 . track_id join playlists as t3 on t2 . playlist_id = t3 . id where t3 . name = value <n>
( having * having | select count ( * ) from editor <n>
( having * having ) having head having | select t2 . name from journal_committee as t1 join editor as t2 on t1 . editor_id = t2 . editor_id join journal as t3 on t1 . journal_id = t3 . journal_id where t3 . theme = value or t3 . theme = value <n>
( having * having , born_state having name born_state having value by having | select editor_id from editor group by age order by count ( * ) desc limit value <n>
( having * having , born_state having | select t2 . editor_id , t2 . name , count ( * ) from journal_committee as t1 join editor as t2 on t1 . editor_id = t2 . editor_id group by t1 . editor_id <n>
( having * having , born_state having order having | select t2 . name from journal_committee as t1 join editor as t2 on t1 . editor_id = t2 . editor_id group by t2 . editor_id having count ( * ) > = value <n>
( having * having ) having | select avg ( age ) from editor where age > value <n>
( having * having | select account_id , customer_id , account_name from accounts <n>
( having * having ) having | select t2 . customer_first_name , t2 . customer_last_name , t2 . customer_phone from customers_cards as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t1 . card_number = value <n>
( having * having ) having | select date_valid_from , date_valid_to from customers_cards where card_number = value <n>
( having * having , born_state having name born_state having value by having | select transaction_type from financial_transactions group by transaction_type order by sum ( transaction_amount ) desc limit value <n>
( having * having | select count ( * ) from customers_cards <n>
( having * having = ( having * having | select customer_id from customers except select customer_id from accounts <n>
( having * having | select count ( * ) from customers_cards <n>
( having * having | select account_id , customer_id , account_name from accounts <n>
( having * having ) having | select t2 . customer_first_name , t2 . customer_last_name , t2 . customer_phone from customers_cards as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t1 . card_number = value <n>
( having * having | select account_id , customer_id , account_name from accounts <n>
( having * having ) having | select t2 . customer_first_name , t2 . customer_last_name , t2 . customer_phone from customers_cards as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t1 . card_number = value <n>
( having * having ) having | select count ( * ) from customers_cards where customer_id like value <n>
( having * having ) having | select count ( * ) from customers_cards where customer_id like value <n>
( having * having , born_state having name born_state having value by having | select transaction_type from financial_transactions group by transaction_type order by sum ( transaction_amount ) desc limit value <n>
( having * having , born_state having order having | select t1 . customer_id , t2 . customer_first_name , t2 . customer_last_name from customers_cards as t1 join customers as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id having count ( * ) > = value <n>
( having * having , born_state having | select transaction_type , count ( * ) from financial_transactions group by transaction_type <n>
( having * having , born_state having order having | select customer_id from customers_cards group by customer_id having count ( * ) > = value <n>
( having * having , born_state having | select transaction_type , count ( * ) from financial_transactions group by transaction_type <n>
( having * having | select account_id , customer_id , account_name from accounts <n>
( having * having | select account_id , customer_id , account_name from accounts <n>
( having group having * having | select count ( distinct customer_id ) from customers_cards <n>
( having * having | select count ( * ) from customers_cards <n>
( having * having , born_state having name born_state having value by having | select transaction_type from financial_transactions group by transaction_type order by sum ( transaction_amount ) desc limit value <n>
( having * having ) having | select date_valid_from , date_valid_to from customers_cards where card_number = value <n>
( having * having | select name , location from track <n>
( having * having name born_state having value by having | select name , location , seating from track order by year_opened desc limit value <n>
( having * having | select min ( seating ) , max ( seating ) , avg ( seating ) from track <n>
( having * having | select count ( * ) from race <n>
( having * having | select count ( * ) from race <n>
( having * having | select name , location from track <n>
( having * having , born_state having name born_state having value by having | select class from race group by class order by count ( * ) desc limit value <n>
( having * having ) having | select name from track where name like value <n>
( having * having = ( having * having | select name from track except select t2 . name from race as t1 join track as t2 on t1 . track_id = t2 . track_id <n>
( having * having , born_state having | select class , count ( * ) from race group by class <n>
( having * having | select name , location from track <n>
( having * having , born_state having order having | select class from race group by class having count ( * ) > = value <n>
( having * having | select count ( * ) from member <n>
( having * having name born_state having | select name from member order by lat asc <n>
( having * having ) having ! ( having * having ) having | select shop_id from shop where score > value intersect select shop_id from shop where open_year < value <n>
( having * having name born_state having | select shop_id , num_of_staff from shop order by shop_id asc <n>
( having * having ) having | select shop_id from member where membership_card = value <n>
( having * having , born_state having order having | select membership_card from member group by membership_card having count ( * ) > = value <n>
( having * having | select t2 . name from album as t1 join artist as t2 on t1 . artistid = t2 . artistid <n>
( having * having ) having | select t2 . name from album as t1 join artist as t2 on t1 . artistid = t2 . artistid where t1 . title = value <n>
( having * having | select count ( * ) from album <n>
( having * having ) having | select t2 . name from album as t1 join artist as t2 on t1 . artistid = t2 . artistid where t1 . title = value <n>
( having * having ) having | select t2 . name from album as t1 join artist as t2 on t1 . artistid = t2 . artistid where t1 . title = value <n>
( having * having , born_state having name born_state having value by having | select t1 . name from genre as t1 join track as t2 on t1 . genreid = t2 . genreid group by t2 . genreid order by count ( * ) desc limit value <n>
( having * having | select avg ( age ) from artist <n>
( having * having , born_state having | select t2 . name , count ( * ) from album as t1 join track as t2 on t1 . albumid = t2 . albumid group by t2 . title <n>
( having * having , born_state having name born_state having value by having | select t1 . name from genre as t1 join track as t2 on t1 . genreid = t2 . genreid group by t2 . genreid order by count ( * ) desc limit value <n>
( having * having ) having | select t2 . name from album as t1 join artist as t2 on t1 . artistid = t2 . artistid where t1 . title = value <n>
( having * having ) having | select avg ( t1 . total ) from genre as t1 join track as t2 on t1 . genreid = t2 . genreid where t1 . name = value <n>
( having * having ) having | select t2 . name from album as t1 join artist as t2 on t1 . artistid = t2 . artistid where t1 . title = value <n>
( having * having ) having | select t2 . name from album as t1 join artist as t2 on t1 . artistid = t2 . artistid where t1 . title = value <n>
( having * having | select count ( * ) from album <n>
( having * having ) having | select t2 . name from album as t1 join artist as t2 on t1 . artistid = t2 . artistid where t1 . title = value <n>
( having * having ) having | select t2 . name from album as t1 join artist as t2 on t1 . artistid = t2 . artistid where t1 . title = value <n>
( having * having | select max ( milliseconds ) , min ( milliseconds ) from track <n>
( having * having ) having | select count ( * ) from customer where email like value <n>
( having * having , born_state having order having | select t1 . lastname from customer as t1 join employee as t2 on t1 . supportrepid = t2 . employeeid group by t1 . supportrepid having count ( * ) > = value <n>
( having * having name born_state having | select * from customer order by name asc <n>
( having * having name born_state having | select name from track order by name asc <n>
( having * having ) having | select avg ( t1 . total ) from genre as t1 join track as t2 on t1 . genreid = t2 . genreid where t1 . name = value <n>
( having * having ) having | select t2 . name from album as t1 join artist as t2 on t1 . artistid = t2 . artistid where t1 . title = value <n>
( having * having | select count ( * ) from album <n>
( having * having ) having ! ( having * having ) having | select t1 . title from album as t1 join track as t2 on t1 . albumid = t2 . albumid join genre as t3 on t2 . genreid = t3 . genreid where t3 . name = value intersect select t1 . title from album as t1 join track as t2 on t1 . albumid = t2 . albumid join genre as t3 on t2 . genreid = t3 . genreid where t3 . name = value <n>
( having * having ) having | select customer_phone from available_policies where policy_type_code = value <n>
( having * having , born_state having name born_state having value by having | select policy_type_code from available_policies group by policy_type_code order by count ( * ) desc limit value <n>
( having * having , born_state having order having | select policy_type_code from available_policies group by policy_type_code having count ( * ) > = value <n>
( having * having , born_state having order having | select policy_type_code from available_policies group by policy_type_code having count ( * ) > = value <n>
( having * having name born_state having value by having | select customer_phone from available_policies order by customer_phone desc limit value <n>
( having * having name born_state having value by having | select product_name from products order by product_price desc limit value <n>
( having * having , born_state having name born_state having value by having | select policy_type_code from available_policies group by policy_type_code order by count ( * ) desc limit value <n>
( having * having name born_state having | select service_name from services order by service_name asc <n>
( having * having = ( having * having | select customer_name from customers except select t1 . customer_name from customers as t1 join first_notification_of_loss as t2 on t1 . customer_id = t2 . customer_id <n>
( having * having ) having ! ( having * having ) having | select t1 . customer_id from customers as t1 join first_notification_of_loss as t2 on t1 . customer_id = t2 . customer_id where t2 . order_status = value intersect select t1 . customer_id from customers as t1 join first_notification_of_loss as t2 on t1 . customer_id = t2 . customer_id where t2 . order_status = value <n>
( having * having ) having | select t3 . policy_type_code from customers as t1 join customers_policies as t2 on t1 . customer_id = t2 . customer_id join available_policies as t3 on t2 . policy_id = t3 . policy_id where t1 . customer_name = value <n>
( having * having name born_state having | select service_name from services order by service_name asc <n>
( having group having * having | select count ( distinct fda_approved ) from medicine <n>
( having * having name born_state having value | select name from enzyme order by name desc <n>
( having * having ) having | select product , chromosome , porphyria from enzyme where location = value <n>
( having * having ) having ( having * having | select name from enzyme where id not in ( select enzyme_id from medicine_enzyme_interaction ) <n>
( having * having ) having | select name from enzyme where name like value <n>
( having * having , born_state having order having | select t1 . id , t1 . trade_name from medicine as t1 join medicine_enzyme_interaction as t2 on t2 . medicine_id = t1 . id group by t1 . id having count ( * ) > = value <n>
( having * having ) having , born_state having name born_state having value by having | select t1 . id , t1 . name from enzyme as t1 join medicine_enzyme_interaction as t2 on t1 . id = t2 . enzyme_id where t2 . interaction_type = value group by t1 . id order by count ( * ) desc limit value <n>
( having * having ) having from having | select t1 . interaction_type from medicine_enzyme_interaction as t1 join medicine as t2 on t1 . medicine_id = t2 . id join enzyme as t3 on t1 . enzyme_id = t3 . id where t3 . name = value and t2 . name = value <n>
( having * having ) having | select count ( * ) from medicine where fda_approved = value <n>
( having * having , born_state having order having | select t1 . id , t1 . trade_name from medicine as t1 join medicine_enzyme_interaction as t2 on t2 . medicine_id = t1 . id group by t1 . id having count ( * ) > = value <n>
( having * having ) having | select t1 . name from enzyme as t1 join medicine_enzyme_interaction as t2 on t2 . enzyme_id = t1 . id where t2 . interaction_type = value <n>
( having * having = ( having * having ) having | select name , trade_name from medicine except select t1 . name , t1 . trade_name from medicine as t1 join medicine_enzyme_interaction as t2 on t2 . medicine_id = t1 . id join enzyme as t3 on t3 . id = t2 . enzyme_id where t3 . name = value <n>
( having * having ) having | select name , trade_name from medicine where fda_approved = value <n>
( having * having , born_state having | select trade_name , count ( * ) from medicine group by trade_name <n>
( having * having | select count ( * ) from university <n>
( having * having ) having | select t2 . all_games , t1 . location from university as t1 join basketball_match as t2 on t1 . school_id = t2 . school_id where location = value <n>
( having * having | select count ( * ) from university <n>
( having * having name born_state having value by having | select acc_percent from basketball_match order by acc_percent desc limit value <n>
( having * having ) having | select t2 . all_games , t1 . location from university as t1 join basketball_match as t2 on t1 . school_id = t2 . school_id where location = value <n>
( having * having ) having | select avg ( enrollment ) , max ( enrollment ) from university where founded > value <n>
( having * having | select max ( enrollment ) from university <n>
( having * having ) having ( having * having | select count ( * ) from university where school_id not in ( select school_id from basketball_match ) <n>
( having * having ) having head having | select count ( * ) from university where founded > value or affiliation = value <n>
( having * having ) having | select count ( * ) from university where location like value <n>
( having * having ) having , born_state having | select count ( * ) , affiliation from university where founded > value group by affiliation <n>
( having * having ) having , born_state having | select count ( * ) , affiliation from university where founded > value group by affiliation <n>
( having * having | select max ( enrollment ) from university <n>
( having * having ) having ! ( having * having ) having | select t1 . pixels from screen_mode as t1 join phone as t2 on t1 . graphics_mode = t2 . screen_mode where t2 . accreditation_type = value intersect select t1 . pixels from screen_mode as t1 join phone as t2 on t1 . graphics_mode = t2 . screen_mode where t2 . accreditation_type = value <n>
( having * having ) having | select count ( * ) from chip_model where wifi = value <n>
( having * having ) having head having | select hardware_model_name , phone from phone where hardware_model_name = value or company_name = value <n>
( having * having , born_state having name born_state having value by having | select company_name from phone group by accreditation_type order by count ( * ) desc limit value <n>
( having * having name born_state having value by having | select model_name from chip_model order by ram_mib desc limit value <n>
( having * having ) having head having | select hardware_model_name , phone from phone where hardware_model_name = value or company_name = value <n>
( having * having , born_state having | select company_name , count ( * ) from phone group by company_name <n>
( having * having ) having | select count ( * ) from chip_model where wifi = value <n>
( having * having = ( having * having ) having | select model_name from chip_model except select chip_model from phone where accreditation_type = value <n>
( having * having | select count ( * ) from match_season <n>
( having * having ) having | select draft_pick_number , draft_class from match_season where position = value <n>
( having * having | select player , years_played from player <n>
( having * having ) having head having | select college from match_season where college = value or college = value <n>
( having group having * having | select count ( distinct team ) from match_season <n>
( having * having , born_state having | select position , count ( * ) from match_season group by position <n>
( having * having , born_state having | select position , count ( * ) from match_season group by position <n>
( having * having ) having | select draft_pick_number , draft_class from match_season where position = value <n>
( having * having ) having head having | select college from match_season where college = value or college = value <n>
( having * having | select country_name , capital from country <n>
( having * having ) having | select count ( * ) from country where country_id = value <n>
( having * having , born_state having | select position , count ( * ) from match_season group by position <n>
( having * having , born_state having | select position , count ( * ) from match_season group by position <n>
( having * having , born_state having name born_state having value by having | select college from match_season group by college order by count ( * ) desc limit value <n>
( having * having , born_state having name born_state having value by having | select college from match_season group by college order by count ( * ) desc limit value <n>
( having * having , born_state having order having | select college from match_season group by college having count ( * ) > = value <n>
( having * having ) having ! ( having * having ) having | select college from match_season where position = value intersect select college from match_season where position = value <n>
( having * having ) having ! ( having * having ) having | select college from match_season where position = value intersect select college from match_season where position = value <n>
( having * having name born_state having value by having | select name from mountain order by height desc limit value <n>
( having * having ) having | select t2 . height from climber as t1 join mountain as t2 on t1 . mountain_id = t2 . mountain_id where t1 . height > value <n>
( having group having * having | select count ( distinct country ) from climber <n>
( having * having ) having ( having * having | select name from mountain where mountain_id not in ( select mountain_id from climber ) <n>
( having * having name born_state having value by having | select name from mountain order by height desc limit value <n>
( having * having | select name , location from mountain <n>
( having * having name born_state having value by having | select name from mountain order by height desc limit value <n>
( having * having ) having | select t2 . height from climber as t1 join mountain as t2 on t1 . mountain_id = t2 . mountain_id where t1 . height > value <n>
( having * having , born_state having | select count ( * ) , t1 . name from mountain as t1 join photos as t2 on t1 . mountain_id = t2 . mountain_id group by t1 . mountain_id <n>
( having * having ) having ( having * having | select name from mountain where mountain_id not in ( select mountain_id from climber ) <n>
( having * having , born_state having name born_state having value by having | select range from mountain group by range order by count ( * ) desc limit value <n>
( having * having ) having head having | select name from mountain where height > value or prominence > value <n>
( having * having | select avg ( total ) from body_builder <n>
( having * having | select t2 . name from body_builder as t1 join people as t2 on t1 . people_id = t2 . people_id <n>
( having * having name born_state having value | select t2 . name from body_builder as t1 join people as t2 on t1 . people_id = t2 . people_id order by t1 . total desc limit value <n>
( having * having , born_state having | select birth_place , count ( * ) from people group by birth_place <n>
( having * having name born_state having value | select t2 . name from body_builder as t1 join people as t2 on t1 . people_id = t2 . people_id order by t1 . total desc limit value <n>
( having * having | select count ( * ) from body_builder <n>
( having * having | select t2 . name from body_builder as t1 join people as t2 on t1 . people_id = t2 . people_id <n>
( having * having | select t2 . party from election as t1 join representative as t2 on t1 . representative_id = t2 . representative_id <n>
( having * having ) having | select t2 . name from election as t1 join representative as t2 on t1 . representative_id = t2 . representative_id where votes > value <n>
( having * having name born_state having value by having | select t2 . party from election as t1 join representative as t2 on t1 . representative_id = t2 . representative_id order by vote_percent desc limit value <n>
( having * having ) having | select avg ( vote_percent ) from representative where state = value <n>
( having * having , born_state having order having | select state from representative group by state having count ( * ) > = value <n>
( having * having | select count ( * ) from election <n>
( having * having | select guest_first_name , guest_last_name from guests <n>
( having * having | select apt_number , room_count from apartments <n>
( having * having ) having | select t2 . apt_type_code , t2 . apt_number from apartment_buildings as t1 join apartments as t2 on t1 . building_id = t2 . building_id where t1 . building_manager = value <n>
( having * having | select count ( * ) from apartments <n>
( having * having | select avg ( room_count ) from apartment_bookings <n>
( having * having ) having | select avg ( room_count ) from apartment_bookings as t1 join apartments as t2 on t1 . apt_id = t2 . apt_id where t1 . booking_status_code = value <n>
( having * having | select guest_first_name , guest_last_name from guests <n>
( having * having ) having | select t2 . apt_type_code , t2 . apt_number from apartment_buildings as t1 join apartments as t2 on t1 . building_id = t2 . building_id where t1 . building_manager = value <n>
( having * having ) having | select t2 . apt_type_code , t2 . apt_number from apartment_buildings as t1 join apartments as t2 on t1 . building_id = t2 . building_id where t1 . building_manager = value <n>
( having * having ) having | select t2 . apt_type_code , t2 . apt_number from apartment_buildings as t1 join apartments as t2 on t1 . building_id = t2 . building_id where t1 . building_manager = value <n>
( having * having ) having | select t2 . apt_type_code , t2 . apt_number from apartment_buildings as t1 join apartments as t2 on t1 . building_id = t2 . building_id where t1 . building_manager = value <n>
( having * having | select guest_first_name , guest_last_name from guests <n>
( having * having ) having | select t2 . guest_first_name , t2 . guest_last_name from apartment_bookings as t1 join guests as t2 on t1 . guest_id = t2 . guest_id where t1 . booking_status_code = value <n>
( having * having ) having | select t2 . apt_type_code , t2 . apt_number from apartment_buildings as t1 join apartments as t2 on t1 . building_id = t2 . building_id where t1 . building_manager = value <n>
( having * having ) having | select count ( * ) from apartment_bookings as t1 join apartments as t2 on t1 . apt_id = t2 . apt_id where t2 . apt_type_code = value <n>
( having * having ) having | select t2 . apt_type_code , t2 . apt_number from apartment_buildings as t1 join apartments as t2 on t1 . building_id = t2 . building_id where t1 . building_manager = value <n>
( having * having , born_state having | select apt_type_code , count ( * ) from apartments group by apt_type_code <n>
( having * having , born_state having name born_state having value by having | select apt_type_code from apartments group by apt_type_code order by count ( * ) desc limit value <n>
( having * having name born_state having value by having | select apt_number from apartments order by room_count desc limit value <n>
( having * having , born_state having name born_state having value by having | select apt_type_code from apartments group by apt_type_code order by count ( * ) desc limit value <n>
( having * having , born_state having order having | select apt_type_code from apartments group by apt_type_code having count ( * ) > = value <n>
( having * having name born_state having value by having | select apt_number from apartments order by room_count desc limit value <n>
( having * having ) having ( having * having | select apt_number from apartments where apt_id not in ( select apt_id from apartment_facilities ) <n>
( having * having ) having ! ( having * having ) having | select t2 . apt_number from apartment_bookings as t1 join apartments as t2 on t1 . apt_id = t2 . apt_id where t1 . booking_status_code = value intersect select t2 . apt_number from apartment_bookings as t1 join apartments as t2 on t1 . apt_id = t2 . apt_id where t1 . booking_status_code = value <n>
( having * having | select injury_accident from game <n>
( having * having ) having | select t2 . name from game as t1 join stadium as t2 on t1 . stadium_id = t2 . id join injury_accident as t3 on t1 . id = t3 . game_id where t3 . player = value <n>
( having * having name born_state having value | select t1 . date , t2 . player from game as t1 join injury_accident as t2 on t1 . id = t2 . game_id order by t1 . season desc limit value <n>
( having * having | select count ( * ) from stadium <n>
( having * having | select max ( home_games ) , min ( home_games ) , avg ( home_games ) from stadium <n>
( having * having | select t1 . player_name , t2 . coach_name from player_attributes as t1 join player_attributes as t2 on t1 . player_api_id = t2 . player_api_id <n>
( having * having | select count ( * ) from player <n>
( having * having ) having ! ( having * having ) having | select t1 . player_name from player as t1 join player_attributes as t2 on t1 . player_api_id = t2 . player_api_id where t2 . overall_rating > value intersect select t1 . player_name from player as t1 join player_attributes as t2 on t1 . player_api_id = t2 . player_api_id where t2 . overall_rating < value <n>
( having * having ) having ! ( having * having ) having | select t1 . player_name from player as t1 join player_attributes as t2 on t1 . player_api_id = t2 . player_api_id where t2 . overall_rating > value intersect select t1 . player_name from player as t1 join player_attributes as t2 on t1 . player_api_id = t2 . player_api_id where t2 . overall_rating < value <n>
( having * having ) having ( having * having | select player_name from player where player_api_id not in ( select country_id from player_attributes ) <n>
( having * having | select location , location from performance <n>
( having * having , born_state having | select location , count ( * ) from branch group by location <n>
( having * having ) having ! ( having * having ) having | select location from member where location = value intersect select location from member where location = value <n>
( having * having ) having | select attendance from performance where location ! = value <n>
( having * having ) having | select count ( * ) from classroom where building = value <n>
( having * having ) having ( having * having | select name from instructor where id not in ( select id from teaches ) <n>
( having * having ) having from having | select building from section where semester = value and year = value <n>
( having * having name born_state having value by having | select name from instructor order by salary desc limit value <n>
( having * having | select count ( * ) from student <n>
( having group having * having | select count ( distinct id ) from teaches <n>
( having * having ) having ( having * having | select name from instructor where id not in ( select id from teaches ) <n>
( having * having ) having ( having * having | select count ( * ) from student where id not in ( select id from teaches ) <n>
( having * having ) having ( having * having | select name from instructor where id not in ( select id from teaches ) <n>
( having * having ) having | select dept_name from instructor where name like value <n>
( having * having ) having | select count ( * ) from classroom where building = value <n>
( having * having ) having ( having * having | select name from instructor where id not in ( select id from teaches ) <n>
( having * having ) having ! ( having * having ) having | select title from course where dept_name = value intersect select title from course where dept_name = value <n>
( having * having ) having from having = ( having * having ) having from having | select id from teaches where semester = value and year = value except select id from teaches where semester = value and year = value <n>
( having * having ) having head having | select name from instructor where dept_name = value or dept_name = value <n>
( having * having name born_state having value by having | select name from instructor order by salary desc limit value <n>
( having * having | select name , course_id from instructor as t1 join teaches as t2 on t1 . id = t2 . id <n>
( having * having name born_state having value by having | select name from instructor order by salary desc limit value <n>
( having * having name born_state having value by having | select dept_name , building from department order by budget desc limit value <n>
( having * having name born_state having | select name from instructor order by name asc <n>
( having * having , born_state having order having | select t1 . name from student as t1 join advisor as t2 on t1 . id = t2 . s_id group by t2 . s_id having count ( * ) > = value <n>
( having * having , born_state having | select count ( * ) , semester , year from section group by semester , year <n>
( having * having , born_state having order having | select t1 . name from student as t1 join advisor as t2 on t1 . id = t2 . s_id group by t2 . s_id having count ( * ) > = value <n>
( having * having , born_state having | select count ( * ) , semester , year from section group by semester , year <n>
( having * having , born_state having | select count ( * ) , semester , year from section group by semester , year <n>
( having * having name born_state having value by having | select dept_name , building from department order by budget desc limit value <n>
( having * having name born_state having value by having | select name from instructor order by salary desc limit value <n>
( having * having name born_state having by having | select name from instructor order by salary asc limit value <n>
( having * having ) having ( having * having ) having | select name from instructor where id not in ( select id from teaches where semester = value ) <n>
( having * having ) having ( having * having | select name from instructor where id not in ( select id from teaches ) <n>
( having * having ) having ( having * having | select name from instructor where id not in ( select id from teaches ) <n>
( having * having ) having ( having * having | select name from instructor where id not in ( select id from teaches ) <n>
( having * having ) having ( having * having | select name from instructor where id not in ( select id from teaches ) <n>
( having * having ) having | select t2 . name from course as t1 join department as t2 on t1 . course_id = t2 . course_id where building = value <n>
( having * having ) having | select t2 . name from course as t1 join department as t2 on t1 . course_id = t2 . course_id where building = value <n>
( having * having , born_state having name born_state having value by having | select year from section group by year order by count ( * ) desc limit value <n>
( having * having ) having | select dept_name from instructor where name like value <n>
( having * having name born_state having value by having | select name from instructor order by salary desc limit value <n>
( having * having name born_state having value by having | select dept_name , building from department order by budget desc limit value <n>
( having * having ) having ( having * having | select name from instructor where id not in ( select id from teaches ) <n>
( having * having ) having ( having * having | select name from instructor where id not in ( select id from teaches ) <n>
( having * having ) having ( having * having | select name from instructor where id not in ( select id from teaches ) <n>
( having * having name born_state having | select name from instructor order by salary asc <n>
( having * having ) having | select name from instructor where name like value <n>
( having * having ) having ( having * having | select name from instructor where id not in ( select id from teaches ) <n>
( having * having ) having | select name from instructor where name like value <n>
( having * having ) having head having | select title from course where dept_name = value or dept_name = value <n>
( having * having ) having ! ( having * having ) having | select title from course where dept_name = value intersect select title from course where dept_name = value <n>
( having * having ) having ( having * having | select name from instructor where id not in ( select id from teaches ) <n>
( having * having ) having ( having * having ) having | select name from instructor where id not in ( select id from teaches where semester = value ) <n>
( having * having , born_state having order having | select t1 . name from student as t1 join advisor as t2 on t1 . id = t2 . s_id group by t2 . s_id having count ( * ) > = value <n>
( having * having name born_state having value by having | select headquarters from company order by sales_in_billion desc limit value <n>
( having * having ) having head having | select name from company where sales_in_billion > value or sales_in_billion > value <n>
( having * having name born_state having value by having | select headquarters from company order by sales_in_billion desc limit value <n>
( having * having ) having | select name from company where headquarters ! = value <n>
( having * having ) having ( having * having | select name from people where people_id not in ( select people_id from employment ) <n>
( having * having ) having | select claim_status_description from claims_processing_stages where claim_status_name = value <n>
( having * having , born_state having order having | select policy_type_code from policies group by policy_type_code having count ( * ) > = value <n>
( having * having | select count ( * ) from claims_processing_stages <n>
( having * having ) having ( having * having | select date_claim_made , date_claim_settled from claims where amount_claimed > ( select avg ( amount_claimed ) from claims ) <n>
( having * having = ( having * having | select customer_details from customers except select t2 . customer_details from policies as t1 join customers as t2 on t1 . customer_id = t2 . customer_id <n>
( having * having | select count ( * ) from claims_processing_stages <n>
( having * having ) having | select t2 . customer_details from policies as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t1 . customer_name = value <n>
( having * having ) having head having | select t2 . customer_details from policies as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t1 . policy_type_code = value or t1 . policy_type_code = value <n>
( having * having | select date_claim_made , date_claim_settled from claims <n>
( having * having , born_state having name born_state having value by having | select t2 . claim_status_name from claims_processing as t1 join claims_processing_stages as t2 on t1 . claim_stage_id = t2 . claim_stage_id group by t1 . claim_stage_id order by count ( * ) desc limit value <n>
( having group having * having | select count ( distinct claim_outcome_code ) from claims_processing <n>
( having * having name born_state having value by having | select claim_id from claims order by date_claim_made desc limit value <n>
( having * having | select count ( * ) from financial_transactions <n>
( having * having ) having | select t2 . customer_first_name , t2 . customer_last_name from accounts as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t1 . account_name = value <n>
( having * having ) having | select t2 . customer_first_name , t2 . customer_last_name from accounts as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t1 . account_name = value <n>
( having * having | select count ( * ) from financial_transactions <n>
( having * having = ( having * having | select customer_id from customers except select customer_id from accounts <n>
( having * having , born_state having | select account_id , count ( * ) from financial_transactions group by account_id <n>
( having * having | select account_id , customer_id , account_name from accounts <n>
( having * having | select count ( * ) from financial_transactions <n>
( having * having , born_state having | select account_id , count ( * ) from financial_transactions group by account_id <n>
( having * having , born_state having | select account_id , count ( * ) from financial_transactions group by account_id <n>
( having * having | select avg ( transaction_amount ) , sum ( transaction_amount ) from financial_transactions <n>
( having * having = ( having * having | select customer_id from customers except select customer_id from accounts <n>
( having * having , born_state having | select account_id , count ( * ) from financial_transactions group by account_id <n>
( having * having , born_state having order having | select t2 . customer_first_name , t1 . customer_id from accounts as t1 join customers as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id having count ( * ) > = value <n>
( having * having | select account_id , customer_id , account_name from accounts <n>
( having * having , born_state having | select account_id , count ( * ) from financial_transactions group by account_id <n>
( having * having | select count ( * ) from financial_transactions <n>
( having * having | select account_id , customer_id , account_name from accounts <n>
( having * having , born_state having order having | select t2 . customer_first_name , t1 . customer_id from accounts as t1 join customers as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id having count ( * ) > = value <n>
( having * having name born_state having | select customer_id , customer_name from customers order by customer_id asc <n>
( having * having , born_state having | select account_id , count ( * ) from financial_transactions group by account_id <n>
( having * having , born_state having | select account_id , count ( * ) from financial_transactions group by account_id <n>
( having * having , born_state having | select account_id , count ( * ) from financial_transactions group by account_id <n>
( having * having , born_state having | select account_id , count ( * ) from financial_transactions group by account_id <n>
( having * having ) having | select count ( * ) from wedding where year = value <n>
( having * having ) having from having | select t2 . name from wedding as t1 join people as t2 on t1 . male_id = t2 . people_id where t1 . year = value and t2 . is_male = value <n>
( having * having ) having | select count ( * ) from wedding where year = value <n>
( having * having ) having ( having * having | select name from people where people_id not in ( select people_id from employment ) <n>
( having * having , born_state having order having | select headquarters from company group by headquarters having count ( * ) > = value <n>
( having * having ) having | select name from company where headquarters ! = value <n>
( having * having | select count ( * ) from exhibition <n>
( having * having | select count ( * ) from exhibition <n>
( having * having ) having ( having * having | select name from artist where artist_id not in ( select artist_id from exhibition ) <n>
( having * having ) having | select avg ( age ) from artist where country = value <n>
( having * having ) having | select count ( * ) from exhibition where year = value <n>
( having * having ) having | select t2 . theme from exhibition_record as t1 join exhibition as t2 on t1 . exhibition_id = t2 . exhibition_id where t1 . year = value <n>
( having * having , born_state having name born_state having value by having | select country from artist group by country order by count ( * ) desc limit value <n>
( having * having ) having ( having * having | select name from artist where artist_id not in ( select artist_id from exhibition ) <n>
( having * having ) having | select avg ( age ) from artist where country = value <n>
( having * having name born_state having | select name from artist order by year_join asc <n>
( having * having ) having ! ( having * having ) having | select t2 . theme from exhibition_record as t1 join exhibition as t2 on t1 . exhibition_id = t2 . exhibition_id where t1 . attendance < value intersect select t2 . theme from exhibition_record as t1 join exhibition as t2 on t1 . exhibition_id = t2 . exhibition_id where t1 . attendance < value intersect select t2 . theme from exhibition as t1 join artist as t2 on t1 . artist_id = t2 . artist_id where t1 . attendance > value <n>
( having * having ) having head having | select count ( * ) from exhibition_record as t1 join exhibition as t2 on t1 . exhibition_id = t2 . exhibition_id where t1 . attendance > value or t2 . ticket_price > value <n>
( having * having ) having | select t1 . title from item as t1 join review as t2 on t1 . i_id = t2 . i_id where t2 . rating > value <n>
( having * having | select avg ( rank ) from review <n>
( having group having * having | select count ( distinct u_id ) from review <n>
( having * having ) having ( having * having | select name from useracct where u_id not in ( select u_id from review ) <n>
( having * having ) having ( having * having | select name from useracct where u_id not in ( select u_id from review ) <n>
( having * having , born_state having name born_state having value by having | select t1 . name from useracct as t1 join trust as t2 on t1 . u_id = t2 . source_u_id group by t2 . source_u_id order by count ( * ) desc limit value <n>
( having * having , born_state having | select t2 . name , count ( * ) from review as t1 join review as t2 on t1 . u_id = t2 . u_id group by t1 . u_id <n>
( having * having | select t1 . title , t2 . type from item as t1 join review as t2 on t1 . i_id = t2 . i_id <n>
( having * having = ( having * having | select name from useracct except select t1 . name from useracct as t1 join trust as t2 on t1 . u_id = t2 . u_id <n>
( having * having | select count ( * ) from club <n>
( having * having ) having head having | select player_name from player where residence > value or votes < value <n>
( having * having , born_state having name born_state having value by having | select residence from player group by residence order by count ( * ) desc limit value <n>
( having * having name born_state having | select player_name from player order by votes asc <n>
( having * having ) having ! ( having * having ) having | select t3 . player_name from player_coach as t1 join coach as t2 on t1 . coach_id = t2 . coach_id join player as t3 on t1 . player_id = t3 . player_id where t2 . country = value intersect select t3 . player_name from player_coach as t1 join coach as t2 on t1 . coach_id = t2 . coach_id join player as t3 on t1 . player_id = t3 . player_id where t2 . occupation = value <n>
( having * having | select count ( * ) from gymnast <n>
( having * having name born_state having value | select total_points from gymnast order by total_points desc <n>
( having * having | select avg ( age ) from people <n>
( having * having | select t2 . name from gymnast as t1 join people as t2 on t1 . gymnast_id = t2 . people_id <n>
( having * having = ( having * having ) having | select hometown from people except select t1 . hometown from people as t1 join gymnast as t2 on t1 . gymnast_id = t2 . people_id where t2 . hometown = value <n>
( having * having name born_state having | select t2 . name from gymnast as t1 join people as t2 on t1 . gymnast_id = t2 . people_id order by t2 . age asc limit value <n>
( having * having | select avg ( age ) from people <n>
( having * having ) having | select t2 . hometown from gymnast as t1 join people as t2 on t1 . gymnast_id = t2 . people_id where t1 . total_points > value <n>
( having * having , born_state having name born_state having value by having | select t2 . hometown from gymnast as t1 join people as t2 on t1 . gymnast_id = t2 . people_id group by t2 . hometown order by count ( * ) desc limit value <n>
( having * having name born_state having name born_state having | select t2 . name , t2 . age , t3 . hometown from gymnast as t1 join people as t2 on t1 . gymnast_id = t2 . people_id order by t2 . age asc limit value <n>
( having * having = ( having * having | select hometown from people except select t1 . hometown from people as t1 join gymnast as t2 on t1 . gymnast_id = t2 . people_id <n>
( having group having * having | select count ( distinct hometown ) from people <n>
( having * having ) having | select t2 . custid from accounts as t1 join checking as t2 on t1 . custid = t2 . custid join savings as t3 on t1 . custid = t3 . custid where t3 . balance > t2 . balance <n>
( having * having | select count ( * ) from accounts <n>
( having * having | select avg ( balance ) from accounts <n>
( having * having ) having ( having * having | select t2 . custid , t2 . balance , t3 . balance from accounts as t1 join checking as t2 on t1 . custid = t2 . custid where t1 . custid = ( select max ( balance ) from custid ) <n>
( having * having ) having | select t2 . custid from accounts as t1 join checking as t2 on t1 . custid = t2 . custid join savings as t3 on t1 . custid = t3 . custid where t3 . balance > t2 . balance <n>
( having * having ) having ( having * having | select avg ( balance ) from savings where custid not in ( select custid from accounts ) <n>
( having * having name born_state having | select t2 . balance , t3 . balance , t1 . name from accounts as t1 join checking as t2 on t1 . custid = t2 . custid join savings as t3 on t1 . custid = t3 . custid order by t2 . balance + t3 . balance + t3 . balance + t3 . balance + t3 . balance + t3 . balance + t3 . balance + t3 . balance + t3 . balance + t3 . balance + t3 . balance + t3 . balance + t3 . balance + t3 . balance + t3 . balance + t3 . balance + t3 . balance + t3 . balance + t3 . balance + t3
( having * having name born_state having by having | select t1 . name from accounts as t1 join checking as t2 on t1 . custid = t2 . custid join savings as t3 on t1 . custid = t3 . custid order by t2 . balance + t3 . balance limit value <n>
( having * having name born_state having by having | select t1 . name from accounts as t1 join checking as t2 on t1 . custid = t2 . custid join savings as t3 on t1 . custid = t3 . custid order by t2 . balance + t3 . balance limit value <n>
( having * having | select count ( * ) from accounts <n>
( having * having ) having ( having * having | select t1 . custid , t1 . name from accounts as t1 join checking as t2 on t1 . custid = t2 . custid where t2 . balance < ( select max ( balance ) from checking ) <n>
( having * having name born_state having value by having | select t2 . balance from accounts as t1 join savings as t2 on t1 . custid = t2 . custid join savings as t3 on t1 . custid = t3 . custid order by t3 . balance desc limit value <n>
( having * having | select t1 . custid , t1 . custid from accounts as t1 join checking as t2 on t1 . custid = t2 . custid <n>
( having * having name born_state having value by having | select t1 . name from accounts as t1 join checking as t2 on t1 . custid = t2 . custid order by t2 . balance desc limit value <n>
( having * having ) having ( having * having | select t1 . custid , t1 . name from accounts as t1 join checking as t2 on t1 . custid = t2 . custid where t2 . balance < ( select max ( balance ) from checking ) <n>
( having * having , born_state having order having | select t1 . id , t1 . name from browser as t1 join accelerator_compatible_browser as t2 on t2 . browser_id = t1 . id group by t1 . id having count ( * ) > = value <n>
( having * having | select avg ( age ) from browser <n>
( having * having , born_state having order having | select t1 . id , t1 . name from browser as t1 join accelerator_compatible_browser as t2 on t2 . browser_id = t1 . id group by t1 . id having count ( * ) > = value <n>
( having group having * having | select count ( distinct industry ) from web_client_accelerator <n>
( having * having ) having ! ( having * having ) having | select t1 . name from browser as t1 join accelerator_compatible_browser as t2 on t2 . accelerator_id = t1 . id join browser as t3 on t2 . browser_id = t3 . id where t3 . name = value intersect select t1 . name from browser as t1 join accelerator_compatible_browser as t2 on t2 . accelerator_id = t1 . id join browser as t3 on t2 . browser_id = t3 . id where t3 . name = value <n>
( having * having name born_state having value by having | select name from web_client_accelerator order by id desc limit value <n>
( having * having name born_state having value by having | select name from wrestler order by days_held desc limit value <n>
( having * having , born_state having name born_state having value by having | select reign from wrestler group by reign order by count ( * ) desc limit value <n>
( having * having | select name , location from wrestler <n>
( having * having ) having | select name from wrestler where location ! = value <n>
( having * having name born_state having value by having | select name from wrestler order by days_held desc limit value <n>
( having * having ) having | select elimination_move from elimination where team = value <n>
( having * having , born_state having order having | select location from wrestler group by location having count ( * ) > value <n>
( having * having | select reign , location from wrestler <n>
( having * having , born_state having name born_state having value by having | select reign from wrestler group by reign order by count ( * ) desc limit value <n>
( having * having ) having ( having * having | select name from wrestler where wrestler_id not in ( select wrestler_id from elimination ) <n>
( having * having ) having ! ( having * having ) having | select location from wrestler where eliminated_by = value intersect select location from wrestler where eliminated_by = value <n>
( having * having ) having head having | select time from elimination where eliminated_by = value or eliminated_by = value <n>
( having * having name born_state having | select donator_name from endowment order by open_year asc <n>
( having * having ) having ( having * having | select school_name from school where school_id not in ( select school_id from endowment ) <n>
( having * having ) having | select count ( * ) from budget where budgeted > value <n>
( having * having ) having head having | select t2 . name from endowment as t1 join school as t2 on t1 . school_id = t2 . school_id where t1 . donator_name = value or t1 . donator_name = value <n>
( having * having name born_state having value by having | select school_colors from school order by enrollment desc limit value <n>
( having * having | select school_name , location from school <n>
( having * having ) having head having | select t2 . name from endowment as t1 join school as t2 on t1 . school_id = t2 . school_id where t1 . donator_name = value or t1 . donator_name = value <n>
( having * having ) having name born_state having | select t2 . school_name from endowment as t1 join school as t2 on t1 . school_id = t2 . school_id where t1 . school_name = value order by t2 . school_name asc <n>
( having * having | select avg ( height_feet ) from building <n>
( having * having ) having from having | select name from building where height_feet > = value and floors > = value <n>
( having * having ) having from having | select count ( * ) from institution as t1 join institution as t2 on t1 . institution_id = t2 . institution_id join building as t3 on t3 . building_id = t1 . building_id where t3 . floors > value and t3 . type = value <n>
( having * having ) having | select t2 . name from institution as t1 join protein as t2 on t1 . institution_id = t2 . institution_id join building as t3 on t3 . building_id = t1 . building_id where t3 . floors > value <n>
( having * having ) having head having | select count ( * ) from building where height_feet > value or floors > value <n>
( having * having ) having ( having * having | select count ( * ) from building where height_feet > ( select avg ( height_feet ) from building ) <n>
( having * having | select count ( * ) from film <n>
( having * having ) having | select location from cinema where capacity > value <n>
( having * having name born_state having value by having | select location from cinema order by capacity desc limit value <n>
( having * having , born_state having order having | select location from cinema group by location having count ( * ) > = value <n>
( having * having , born_state having | select location , count ( * ) from cinema group by location <n>
( having * having , born_state having | select location , count ( * ) from cinema group by location <n>
( having * having | select location , location from cinema <n>
( having * having , born_state having order having | select location from cinema group by location having count ( * ) > = value <n>
( having * having ) having | select count ( * ) from cinema where capacity > value <n>
( having * having name born_state having value by having | select product_name from products_for_hire order by product_price desc limit value <n>
( having * having ) having | select t2 . product_description from products_booked as t1 join products_for_hire as t2 on t1 . product_id = t2 . product_id where t1 . booked_amount = value <n>
( having * having name born_state having | select product_name from products_for_hire order by product_price asc <n>
( having * having ) having | select t2 . product_description from products_booked as t1 join products_for_hire as t2 on t1 . product_id = t2 . product_id where t1 . booked_amount = value <n>
( having * having ) having head having | select t1 . coupon_amount from discount_coupons as t1 join customers as t2 on t1 . coupon_id = t2 . coupon_id where t2 . coupon_amount = value or t2 . good_or_bad_customer = value <n>
( having * having name born_state having | select name from phone order by carrier asc <n>
( having * having name born_state having value by having | select carrier from phone order by carrier desc limit value <n>
( having * having ) having ! ( having * having ) having | select carrier from phone where carrier = value intersect select carrier from phone where carrier = value <n>
( having * having ) having | select carrier from phone where carrier = value <n>
( having * having | select count ( * ) from station_company <n>
( having * having name born_state having value | select company from company order by market_value desc <n>
( having * having name born_state having value | select company from company order by market_value desc <n>
( having * having | select main_industry , location from company <n>
( having * having , born_state having | select main_industry , sum ( market_value ) from company group by main_industry <n>
( having * having name born_state having value by having | select headquarters from company order by market_value desc limit value <n>
( having * having name born_state having | select location from gas_station order by open_year asc <n>
( having * having ) having from having | select company , main_industry from company where headquarters = value and location = value <n>
( having * having ) having ! ( having * having ) having | select headquarters from company where main_industry = value intersect select headquarters from company where main_industry = value <n>
( having * having , born_state having name born_state having value by having | select main_industry , count ( * ) from company group by main_industry order by count ( * ) desc limit value <n>
( having * having | select company , main_industry from company <n>
( having * having ) having | select company , main_industry from company where headquarters ! = value <n>
( having * having | select company , main_industry from company <n>
( having * having name born_state having value | select company from company order by market_value desc <n>
( having * having | select count ( * ) from party_events <n>
( having * having | select count ( * ) from party_events <n>
( having * having name born_state having | select minister from party order by party_name asc <n>
( having * having = ( having * having | select member_name from member except select t1 . member_name from member as t1 join party_events as t2 on t1 . member_id = t2 . member_in_charge_id <n>
( having * having name born_state having value | select minister , party_name from party order by took_office desc <n>
( having * having | select t1 . party_name , t2 . region_name from party as t1 join region as t2 on t1 . region_id = t2 . region_id <n>
( having * having , born_state having name born_state having value by having | select t2 . party_name from member as t1 join party as t2 on t1 . party_id = t2 . party_id group by t1 . party_id order by count ( * ) desc limit value <n>
( having * having = ( having * having | select member_name from member except select t1 . member_name from member as t1 join party_events as t2 on t1 . member_id = t2 . member_in_charge_id <n>
( having * having ) having | select t2 . party_name from member as t1 join party as t2 on t1 . party_id = t2 . party_id where t1 . party_name = value <n>
( having * having | select count ( * ) from party_events <n>
( having * having = ( having * having | select member_name from member except select t1 . member_name from member as t1 join party_events as t2 on t1 . member_id = t2 . member_in_charge_id <n>
( having * having , born_state having order having | select t2 . party_name from party_events as t1 join party as t2 on t1 . party_id = t2 . party_id group by t1 . party_id having count ( * ) > = value <n>
( having * having , born_state having order having | select t2 . party_name from party_events as t1 join party as t2 on t1 . party_id = t2 . party_id group by t1 . party_id having count ( * ) > = value <n>
( having * having | select count ( * ) from aircraft <n>
( having * having ) having | select t2 . fleet_series from pilot_record as t1 join aircraft as t2 on t1 . aircraft_id = t2 . aircraft_id join pilot as t3 on t1 . pilot_id = t3 . pilot_id where t3 . position = value <n>
( having * having , born_state having | select t2 . pilot_name , count ( * ) from pilot_record as t1 join pilot as t2 on t1 . pilot_id = t2 . pilot_id group by t2 . pilot_name <n>
( having * having name born_state having | select pilot_name from pilot order by rank asc <n>
( having * having , born_state having order having | select nationality from pilot group by nationality having count ( * ) > = value <n>
( having * having ) having | select receipt_date from documents where document_id = value <n>
( having * having ) having | select receipt_date from documents where document_id = value <n>
( having * having | select count ( * ) from documents <n>
( having * having , born_state having | select role_code , count ( * ) from employees group by role_code <n>
( having * having , born_state having name born_state having value by having | select ref_shipping_agents.shipping_agent_name , count ( documents.document_id ) from ref_shipping_agents join documents on documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code group by ref_shipping_agents.shipping_agent_code order by count ( documents.document_id ) desc limit value <n>
( having * having ) having | select count ( * ) from documents where document_status_code = value <n>
( having * having ) having | select receipt_date from documents where document_id = value <n>
( having * having ) having | select receipt_date from documents where document_id = value <n>
( having * having , born_state having order having | select document_type_code from documents group by document_type_code having count ( * ) > = value <n>
( having * having , born_state having name born_state having value by having | select ref_shipping_agents.shipping_agent_name , count ( documents.document_id ) from ref_shipping_agents join documents on documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code group by ref_shipping_agents.shipping_agent_code order by count ( documents.document_id ) desc limit value <n>
( having * having ) having | select count ( * ) from course where credits > value <n>
( having * having ) having | select count ( * ) from course where credits > value <n>
( having * having , born_state having order having | select t1 . participant_id , t1 . participant_type_code , count ( * ) from participants as t1 join participants_in_events as t2 on t1 . participant_id = t2 . participant_id group by t1 . participant_id having count ( * ) > = value <n>
( having * having name born_state having by having | select service_id , event_details from events order by credit_score limit value <n>
( having * having , born_state having name born_state having value by having | select service_id from events group by event_id order by count ( * ) desc limit value <n>
( having * having = ( having * having ) having | select participant_id from participants except select participant_id from participants_in_events where events = value <n>
( having * having name born_state having value by having | select t1 . driverid , t1 . forename , t1 . surname from drivers as t1 join laptimes as t2 on t1 . driverid = t2 . driverid order by t2 . milliseconds desc limit value <n>
( having * having name born_state having value by having | select t1 . driverid , t1 . forename , t1 . surname from drivers as t1 join laptimes as t2 on t1 . driverid = t2 . driverid order by t2 . milliseconds desc limit value <n>
( having * having ) having from having | select t1 . name from constructors as t1 join constructorstandings as t2 on t1 . constructorid = t2 . constructorid where t1 . nationality = value and t2 . points > value <n>
( having * having ) having | select forename , surname from drivers where nationality = value <n>
( having * having name born_state having by having | select t1 . forename , t1 . surname from drivers as t1 join laptimes as t2 on t1 . driverid = t2 . driverid order by t2 . milliseconds limit value <n>
( having * having ) having from having | select t1 . name from constructors as t1 join constructorstandings as t2 on t1 . constructorid = t2 . constructorid where t1 . nationality = value and t2 . points > value <n>
( having * having = ( having * having ) having | select forename , surname from drivers except select t3 . forename , t3 . surname from races as t1 join results as t2 on t1 . raceid = t2 . raceid join drivers as t3 on t2 . driverid = t3 . driverid where t1 . name = value <n>
( having * having ) having from having | select t1 . name from constructors as t1 join constructorstandings as t2 on t1 . constructorid = t2 . constructorid where t1 . nationality = value and t2 . points > value <n>
( having * having ) having ! ( having * having ) having | select t2 . driverid , t3 . forename from races as t1 join results as t2 on t1 . raceid = t2 . raceid join drivers as t3 on t2 . driverid = t3 . driverid where t1 . name = value intersect select t2 . driverid , t3 . forename from races as t1 join results as t2 on t1 . raceid = t2 . raceid join drivers as t3 on t2 . driverid = t3 . driverid where t1 . name = value <n>
( having * having ) having from having | select t1 . name from constructors as t1 join constructorstandings as t2 on t1 . constructorid = t2 . constructorid where t1 . nationality = value and t2 . points > value <n>
( having * having ) having from having | select t1 . name from constructors as t1 join constructorstandings as t2 on t1 . constructorid = t2 . constructorid where t1 . nationality = value and t2 . points > value <n>
( having * having name born_state having by having | select t1 . forename , t1 . surname from drivers as t1 join laptimes as t2 on t1 . driverid = t2 . driverid order by t2 . milliseconds limit value <n>
( having * having ) having from having | select t1 . name from constructors as t1 join constructorstandings as t2 on t1 . constructorid = t2 . constructorid where t1 . nationality = value and t2 . points > value <n>
( having * having ) having from having | select t1 . name from constructors as t1 join constructorstandings as t2 on t1 . constructorid = t2 . constructorid where t1 . nationality = value and t2 . points > value <n>
( having * having name born_state having by having | select t1 . forename , t1 . surname from drivers as t1 join laptimes as t2 on t1 . driverid = t2 . driverid order by t2 . milliseconds limit value <n>
( having * having ) having from having | select t1 . name from constructors as t1 join constructorstandings as t2 on t1 . constructorid = t2 . constructorid where t1 . nationality = value and t2 . points > value <n>
( having * having ) having head having | select circuitid , location from circuits where country = value or country = value <n>
( having * having , born_state having order having | select t1 . driverid , t1 . forename , count ( * ) from drivers as t1 join results as t2 on t1 . driverid = t2 . driverid join races as t3 on t2 . raceid = t3 . raceid group by t1 . driverid having count ( * ) > = value <n>
( having * having ) having head having | select circuitid , location from circuits where country = value or country = value <n>
( having * having ) having head having | select circuitid , location from circuits where country = value or country = value <n>
( having * having ) having | select avg ( t2 . fastestlapspeed ) from races as t1 join results as t2 on t1 . raceid = t2 . raceid where t1 . year = value <n>
( having * having ) having name born_state having value by having | select name from races where raceid ! = value order by duration desc limit value <n>
( having * having ) having , born_state having name born_state having value by having | select t1 . driverid , t1 . forename , t1 . surname from drivers as t1 join laptimes as t2 on t1 . driverid = t2 . driverid join races as t3 on t2 . raceid = t3 . raceid where t3 . year > value group by t1 . driverid order by count ( * ) desc limit value <n>
( having * having , born_state having order having | select t1 . driverid , count ( * ) from drivers as t1 join results as t2 on t1 . driverid = t2 . driverid join races as t3 on t2 . raceid = t3 . raceid group by t1 . driverid having count ( * ) > = value <n>
( having * having | select count ( * ) from technician <n>
( having * having name born_state having | select name from technician order by name asc <n>
( having * having ) having | select t3 . name from repair_assignment as t1 join machine as t2 on t1 . machine_id = t2 . machine_id join technician as t3 on t1 . technician_id = t3 . technician_id where t2 . value_points > value <n>
( having * having | select t3 . name , t2 . machine_series from repair_assignment as t1 join machine as t2 on t1 . machine_id = t2 . machine_id join technician as t3 on t1 . technician_id = t3 . technician_id <n>
( having * having , born_state having | select team , count ( * ) from technician group by team <n>
( having * having , born_state having order having | select team from technician group by team having count ( * ) > = value <n>
( having * having name born_state having | select name from technician order by name asc <n>
( having * having ) having | select t3 . name from repair_assignment as t1 join machine as t2 on t1 . machine_id = t2 . machine_id join technician as t3 on t1 . technician_id = t3 . technician_id where t2 . value_points > value <n>
( having * having ) having ( having * having | select name from technician where technician_id not in ( select technician_id from repair_assignment ) <n>
( having * having | select count ( * ) from entrepreneur <n>
( having * having name born_state having name born_state having value | select company , investor from entrepreneur order by money_requested desc limit value <n>
( having * having | select avg ( money_requested ) from entrepreneur <n>
( having * having | select name , investor from entrepreneur <n>
( having * having = ( having * having ) having | select investor from entrepreneur except select investor from entrepreneur where money_requested > value <n>
( having * having name born_state having value by having | select t2 . name from entrepreneur as t1 join people as t2 on t1 . people_id = t2 . people_id order by t1 . money_requested desc limit value <n>
( having * having ) having head having | select t2 . date_of_birth from entrepreneur as t1 join people as t2 on t1 . people_id = t2 . people_id where t1 . investor = value or t1 . investor = value <n>
( having * having name born_state having name born_state having value | select company , investor from entrepreneur order by money_requested desc limit value <n>
( having * having , born_state having name born_state having value by having | select investor from entrepreneur group by investor order by count ( * ) desc limit value <n>
( having * having name born_state having value by having | select t2 . name from entrepreneur as t1 join people as t2 on t1 . people_id = t2 . people_id order by t1 . money_requested desc limit value <n>
( having * having = ( having * having | select name from people except select t2 . name from entrepreneur as t1 join people as t2 on t1 . people_id = t2 . people_id <n>
( having * having | select count ( * ) from entrepreneur <n>
( having * having | select count ( * ) from perpetrator <n>
( having * having | select avg ( age ) from people <n>
( having * having | select name , location from people <n>
( having * having ) having head having | select name from people where height > value or height < value <n>
( having * having name born_state having value by having | select country from perpetrator order by height desc limit value <n>
( having * having ) having ( having * having | select name from people where people_id not in ( select people_id from perpetrator ) <n>
( having * having name born_state having value by having | select country from perpetrator order by height desc limit value <n>
( having * having ) having | select t2 . faculty from campuses as t1 join faculty as t2 on t1 . id = t2 . campus where t1 . campus = value <n>
( having * having ) having | select campus from campuses where county = value <n>
( having * having ) having from having | select campus from campuses where county = value and county = value <n>
( having * having ) having from having | select campus from campuses where county = value and county = value <n>
( having * having ) having from having | select campus from campuses where county = value and county = value <n>
( having * having ) having ( having * having | select count ( * ) from csu_fees where campusfee > ( select avg ( campusfee ) from csu_fees ) <n>
( having * having name born_state having value by having | select faculty from faculty order by faculty desc limit value <n>
( having * having ) having name born_state having value by having | select campus from campuses where year > = value order by campus desc limit value <n>
( having * having ) having | select avg ( campusfee ) from csu_fees where year = value <n>
( having * having ) having from having | select campus from campuses where county = value and county = value <n>
( having * having ) having from having | select sum ( t1 . undergraduate ) from discipline_enrollments as t1 join campuses as t2 on t1 . campus = t2 . id where t1 . year = value and t2 . campus = value <n>
( having * having ) having from having | select campus from campuses where county = value and county = value <n>
( having * having ) having | select campus from campuses where county = value <n>
( having * having ) having from having | select sum ( t1 . undergraduate ) from discipline_enrollments as t1 join campuses as t2 on t1 . campus = t2 . id where t1 . year = value and t2 . campus = value <n>
( having * having | select count ( * ) from campuses <n>
( having * having ) having from having | select sum ( t1 . undergraduate ) from discipline_enrollments as t1 join campuses as t2 on t1 . campus = t2 . id where t1 . year = value and t2 . campus = value <n>
( having * having ) having from having | select campus from campuses where county = value and county = value <n>
( having * having ) having ( having * having | select count ( * ) from csu_fees where campusfee > ( select avg ( campusfee ) from csu_fees ) <n>
( having * having ) having from having | select campus from campuses where county = value and county = value <n>
( having * having ) having | select campus from campuses where county = value <n>
( having * having | select count ( * ) from campuses <n>
( having * having , born_state having name born_state having value by having | select support_rate from candidate group by support_rate order by count ( * ) desc limit value <n>
( having * having | select count ( * ) from candidate <n>
( having * having name born_state having | select name from people order by date_of_birth asc <n>
( having * having name born_state having | select name from people order by date_of_birth asc <n>
( having * having ) having | select avg ( height ) , avg ( weight ) from people where sex = value <n>
( having * having , born_state having | select avg ( sex ) , sex from people group by sex <n>
( having * having name born_state having | select name from people order by date_of_birth asc <n>
( having * having name born_state having value by having | select support_rate from candidate order by support_rate desc limit value <n>
( having * having ) having ( having * having | select name from people where people_id not in ( select people_id from candidate ) <n>
( having * having name born_state having value by having | select support_rate from candidate order by support_rate desc limit value <n>
( having * having name born_state having | select name from people order by date_of_birth asc <n>
( having * having | select count ( * ) from candidate <n>
( having * having ) having from having | select t2 . title from rating as t1 join movie as t2 on t1 . mid = t2 . mid where t1 . stars between value and value <n>
( having * having ) having | select count ( * ) from rating where stars > value <n>
( having * having | select count ( * ) from reviewer <n>
( having * having ) having | select rid from reviewer where name like value <n>
( having * having ) having | select count ( * ) from rating where stars > value <n>
( having * having ) having head having | select title from movie where director = value or year < value <n>
( having * having , born_state having | select t2 . title , t1 . rid , t1 . stars , min ( t1 . stars ) from rating as t1 join movie as t2 on t1 . mid = t2 . mid group by t1 . mid <n>
( having * having = ( having * having ) having | select mid from rating except select t1 . mid from rating as t1 join reviewer as t2 on t1 . rid = t2 . rid where t2 . name = value <n>
( having * having ) having ( having * having | select title from movie where year = ( select max ( year ) from movie ) <n>
( having * having ) having ( having * having | select title from movie where year = ( select max ( year ) from movie ) <n>
( having * having ) having ( having * having ) having | select title from movie where year > ( select max ( year ) from movie where director = value ) <n>
( having * having name born_state having | select title from movie order by title <n>
( having * having ) having | select t2 . name from rating as t1 join reviewer as t2 on t1 . rid = t2 . rid where t1 . stars > value <n>
( having * having ) having | select t2 . name from rating as t1 join reviewer as t2 on t1 . rid = t2 . rid where t1 . stars > value <n>
( having * having | select t1 . title , t2 . type from movie as t1 join rating as t2 on t1 . mid = t2 . mid <n>
( having * having , born_state having order having | select t2 . name from rating as t1 join reviewer as t2 on t1 . rid = t2 . rid group by t1 . rid having count ( * ) > = value <n>
( having * having , born_state having order having | select t2 . name from rating as t1 join reviewer as t2 on t1 . rid = t2 . rid group by t1 . rid having count ( * ) > = value <n>
( having * having ) having ( having * having ) having | select title from movie where year > ( select max ( year ) from movie where director = value ) <n>
( having * having , born_state having name born_state having value by having | select t2 . title , t2 . year from rating as t1 join movie as t2 on t1 . mid = t2 . mid group by t1 . mid order by count ( * ) desc limit value <n>
( having * having , born_state having name born_state having value by having | select t2 . title , t2 . year from rating as t1 join movie as t2 on t1 . mid = t2 . mid group by t1 . mid order by count ( * ) desc limit value <n>
( having * having , born_state having | select t2 . title , t1 . rid , t1 . stars , min ( t1 . stars ) from rating as t1 join movie as t2 on t1 . mid = t2 . mid group by t1 . mid <n>
( having * having name born_state having value by having | select title from movie order by year desc limit value <n>
( having * having , born_state having name born_state having value by having | select t2 . title , t2 . year from rating as t1 join movie as t2 on t1 . mid = t2 . mid group by t1 . mid order by count ( * ) desc limit value <n>
( having * having ) having ( having * having ) having | select t2 . name from rating as t1 join reviewer as t2 on t1 . rid = t2 . rid where t1 . stars > ( select avg ( stars ) from rating where director = value ) <n>
( having * having = ( having * having ) having | select mid from rating except select t1 . mid from rating as t1 join reviewer as t2 on t1 . rid = t2 . rid where t2 . name = value <n>
( having * having , born_state having order having | select t2 . name from rating as t1 join reviewer as t2 on t1 . rid = t2 . rid group by t1 . rid having count ( * ) > = value <n>
( having * having = ( having * having ) having | select mid from rating except select t1 . mid from rating as t1 join reviewer as t2 on t1 . rid = t2 . rid where t2 . name = value <n>
( having * having ) having head having | select title from movie where director = value or year < value <n>
( having * having ) having head having | select title from movie where director = value or year < value <n>
( having * having | select count ( * ) from county_public_safety <n>
( having * having ) having ( having * having | select name from county_public_safety where county_id not in ( select county_id from city ) <n>
( having * having | select min ( crime_rate ) , max ( crime_rate ) from county_public_safety <n>
( having * having name born_state having | select name from city order by name asc <n>
( having * having name born_state having value | select name from city order by population desc <n>
( having * having name born_state having value by having | select name from county_public_safety order by population desc limit value <n>
( having * having name born_state having | select name from city order by name asc <n>
( having * having ) having ( having * having | select count ( * ) from city where county_id in ( select county_id from city ) <n>
( having * having ) having ( having * having | select name from county_public_safety where county_id not in ( select county_id from city ) <n>
( having * having name born_state having value by having | select location from county_public_safety order by population desc limit value <n>
( having * having ) having ! ( having * having ) having | select police_force from county_public_safety where location = value intersect select police_force from county_public_safety where location = value <n>
( having * having ) having | select t2 . name from city as t1 join county_public_safety as t2 on t1 . county_id = t2 . county_id where t1 . white > value <n>
( having * having ) having from having | select roomname , roomid from rooms where baseprice > value and maxoccupancy > value <n>
( having * having ) having , born_state having name born_state having value by having | select t2 . roomname from reservations as t1 join rooms as t2 on t1 . room = t2 . roomid where t1 . rate > value group by t2 . decor order by count ( * ) desc limit value <n>
( having * having ) having from having | select count ( * ) from reservations where firstname = value and lastname = value <n>
( having * having name born_state having value by having | select roomid , roomname from rooms order by baseprice desc limit value <n>
( having * having ) having from having | select count ( * ) from reservations where firstname = value and lastname = value <n>
( having * having | select count ( * ) from rooms <n>
( having * having name born_state having | select roomname from rooms order by baseprice asc <n>
( having * having , born_state having | select bedtype , avg ( baseprice ) from rooms group by bedtype <n>
( having * having ) having | select count ( * ) from reservations where kids > value <n>
( having * having ) having | select count ( * ) from reservations where kids > value <n>
( having * having | select count ( * ) from rooms <n>
( having * having ) having | select count ( * ) from reservations where kids > value <n>
( having * having name born_state having value by having | select roomid , roomname from rooms order by baseprice desc limit value <n>
( having * having ) having | select decor from rooms where roomname = value <n>
( having * having , born_state having | select bedtype , count ( * ) from rooms group by bedtype <n>
( having * having ) having | select roomname , bedtype from rooms where decor = value <n>
( having * having , born_state having | select bedtype , avg ( baseprice ) from rooms group by bedtype <n>
( having * having ) having head having | select roomname from rooms where baseprice > value or baseprice < value <n>
( having * having name born_state having value by having | select roomid , roomname from rooms order by baseprice desc limit value <n>
( having * having ) having ( having * having | select count ( * ) from reservations where kids > ( select avg ( baseprice ) from rooms ) <n>
( having * having , born_state having | select bedtype , count ( * ) from rooms group by bedtype <n>
( having * having ) having from having | select roomname from rooms where baseprice > value and maxoccupancy > value <n>
( having * having ) having | select t1 . council_tax_id from rent_arrears as t1 join cmi_cross_references as t2 on t1 . cmi_cross_ref_id = t2 . cmi_cross_ref_id join customer_master_index as t3 on t3 . master_customer_id = t2 . master_customer_id where t3 . cmi_details ! = value <n>
( having * having name born_state having | select council_tax_id from parking_fines order by cmi_details asc <n>
( having * having | select count ( * ) from parking_fines <n>
( having * having ) having | select count ( * ) from rent_arrears as t1 join cmi_cross_references as t2 on t1 . cmi_cross_ref_id = t2 . cmi_cross_ref_id join customer_master_index as t3 on t3 . master_customer_id = t2 . master_customer_id where t3 . cmi_details = value <n>
( having * having ) having | select council_tax_id from parking_fines where cmi_cross_ref_id = value <n>
( having * having name born_state having value by having | select location from party order by number_of_hosts desc limit value <n>
( having * having ) having head having | select t2 . name from party_host as t1 join host as t2 on t1 . host_id = t2 . host_id join party as t3 on t1 . party_id = t3 . party_id where t3 . number_of_hosts > value or t3 . number_of_hosts > value <n>
( having * having | select avg ( number_of_hosts ) from party <n>
( having * having , born_state having | select nationality , count ( * ) from host group by nationality <n>
( having * having ) having ! ( having * having ) having | select location from party where number_of_hosts > value intersect select location from party where party_theme = value <n>
( having * having , born_state having | select nationality , count ( * ) from host group by nationality <n>
( having * having ) having | select t2 . name from party_host as t1 join host as t2 on t1 . host_id = t2 . host_id join party as t3 on t1 . party_id = t3 . party_id where t3 . number_of_hosts > value <n>
( having * having name born_state having value by having | select location from party order by number_of_hosts desc limit value <n>
( having * having ) having ( having * having | select name from host where host_id not in ( select host_id from party_host ) <n>
( having * having name born_state having | select region_name from region order by region_name asc <n>
( having * having ) having | select region_name from region where region_name ! = value <n>
( having * having ) having | select count ( * ) from storm where number_deaths > value <n>
( having * having ) having | select avg ( damage_millions_usd ) from storm where storm_id = value <n>
( having * having name born_state having value | select region_name from region order by region_name desc <n>
( having group having * having | select count ( distinct region_id ) from affected_region <n>
( having * having , born_state having | select count ( * ) , region_name from region group by region_name <n>
( having * having , born_state having name born_state having value by having | select region_name from region group by region_name order by count ( * ) desc limit value <n>
( having * having ) having ( having * having | select name from storm where storm_id not in ( select storm_id from affected_region ) <n>
( having * having ) having ( having * having ) having | select name from storm where storm_id not in ( select storm_id from affected_region where affected_region > value ) <n>
( having * having ) having | select region_name from region where region_name ! = value <n>
( having * having , born_state having order having | select t1 . region_name from region as t1 join affected_region as t2 on t1 . region_id = t2 . region_id group by t1 . region_id having count ( * ) > = value <n>
( having * having ) having ! ( having * having ) having | select t1 . name from affected_region as t1 join region as t2 on t1 . region_id = t2 . region_id join storm as t3 on t1 . storm_id = t3 . storm_id where t2 . region_name = value intersect select t3 . name from affected_region as t1 join region as t2 on t1 . region_id = t2 . region_id join storm as t3 on t1 . storm_id = t3 . storm_id where t2 . region_name = value <n>
( having * having | select t2 . party , t1 . party from election as t1 join party as t2 on t1 . party = t2 . party_id <n>
( having * having | select avg ( population ) from county <n>
( having * having | select max ( population ) , min ( population ) from county <n>
( having * having ) having | select t2 . party from election as t1 join party as t2 on t1 . party = t2 . party_id where t1 . population > value <n>
( having * having , born_state having | select party , count ( * ) from party group by party <n>
( having * having ) having | select t2 . party from election as t1 join party as t2 on t1 . party = t2 . party_id where t1 . population > value <n>
( having * having | select max ( population ) , min ( population ) from county <n>
( having * having , born_state having | select t2 . party , count ( * ) from election as t1 join party as t2 on t1 . party = t2 . party_id group by t1 . party <n>
( having * having ) having | select count ( * ) from county where population > value <n>
( having * having | select t2 . name from election as t1 join party as t2 on t1 . party = t2 . party_id <n>
( having * having ) having | select t2 . party from election as t1 join party as t2 on t1 . party = t2 . party_id where t1 . population > value <n>
( having * having ) having | select t2 . party from election as t1 join party as t2 on t1 . party = t2 . party_id where t1 . population > value <n>
( having * having , born_state having | select party , count ( * ) from party group by party <n>
( having * having name born_state having | select county_name from county order by population asc <n>
( having * having name born_state having value by having | select county_name from county order by population desc limit value <n>
( having * having , born_state having order having | select party from party group by party having count ( * ) > = value <n>
( having * having , born_state having order having | select party from party group by party having count ( * ) > = value <n>
( having * having , born_state having name born_state having value by having | select governor from party group by governor order by count ( * ) desc limit value <n>
( having * having = ( having * having | select county_name from county except select t2 . district from election as t1 join party as t2 on t1 . party = t2 . party <n>
( having * having ) having ! ( having * having ) having | select t1 . committee from election as t1 join party as t2 on t1 . party = t2 . party_id where t2 . party = value intersect select t1 . committee from election as t1 join party as t2 on t1 . party = t2 . party_id where t2 . party = value <n>
( having * having name born_state having | select name from journalist order by years_working asc <n>
( having * having | select avg ( event_attendance ) , avg ( event_attendance ) from journalist <n>
( having * having , born_state having name born_state having value by having | select nationality from journalist group by nationality order by count ( * ) desc limit value <n>
( having * having name born_state having | select name from journalist order by years_working asc <n>
( having * having = ( having * having | select name from journalist except select t2 . name from journalist as t1 join journalist as t2 on t1 . journalist_id = t2 . date <n>
( having * having , born_state having name born_state having value by having | select nationality from journalist group by nationality order by count ( * ) desc limit value <n>
( having * having | select resname from restaurant <n>
( having * having ) having | select major from student where major = value <n>
( having * having ) having | select major from student where major = value <n>
( having * having , born_state having order having | select advisor from student group by advisor having count ( * ) > = value <n>
( having * having ) having | select count ( * ) from student where advisor = value <n>
( having * having ) having | select major from student where major = value <n>
( having * having name born_state having value by having | select product_name from products order by product_price desc limit value <n>
( having * having name born_state having value by having | select product_name from products order by product_price desc limit value <n>
( having * having ) having | select t1 . customer_name from customers as t1 join customer_addresses as t2 on t1 . customer_id = t2 . customer_id join addresses as t3 on t2 . address_id = t3 . address_id where t3 . state_province_county = value <n>
( having * having | select first_name , last_name from customers <n>
( having * having name born_state having value by having | select product_name from products order by product_price desc limit value <n>
( having * having | select count ( * ) from papers <n>
( having * having | select count ( * ) from papers <n>
( having * having ) having | select t3 . title from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid where t1 . title = value <n>
( having * having ) having | select count ( * ) from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid where t3 . name = value <n>
( having * having ) having | select t3 . lname from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid where t1 . title = value <n>
( having * having ) having | select fname from authors where lname = value <n>
( having * having ) having from having | select t3 . fname , t3 . lname from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid where t1 . fname = value and t1 . lname = value <n>
( having * having ) having | select t3 . title from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid where t1 . title = value <n>
( having * having ) having | select count ( * ) from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid where t3 . name = value <n>
( having * having ) having | select count ( * ) from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid where t3 . name = value <n>
( having * having ) having | select t3 . title from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid where t1 . title = value <n>
( having * having ) having from having | select t3 . fname , t3 . lname from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid where t1 . fname = value and t1 . lname = value <n>
( having * having , born_state having name born_state having value by having | select t3 . fname , t3 . lname from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid group by t1 . fname , t1 . lname order by count ( * ) desc limit value <n>
( having * having name born_state having value by having | select t3 . lname from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid order by t3 . lname desc limit value <n>
( having * having ) having | select t3 . title from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid where t1 . title = value <n>
( having * having ) having | select fname from authors where lname = value <n>
( having * having , born_state having name born_state having value by having | select t3 . fname , t3 . lname from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid group by t1 . fname , t1 . lname order by count ( * ) desc limit value <n>
( having * having ) having | select t3 . fname from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid where t1 . fname = value <n>
( having * having name born_state having | select fname from authors order by fname asc <n>
( having * having name born_state having | select fname from authors order by fname asc <n>
( having * having , born_state having name born_state having value by having | select t2 . first_name , t2 . last_name from film_actor as t1 join actor as t2 on t1 . actor_id = t2 . actor_id group by t2 . actor_id order by count ( * ) desc limit value <n>
( having * having , born_state having name born_state having value by having | select t2 . first_name , t2 . last_name from film_actor as t1 join actor as t2 on t1 . actor_id = t2 . actor_id group by t2 . actor_id order by count ( * ) desc limit value <n>
( having * having ) having | select t2 . address from store as t1 join address as t2 on t1 . address_id = t2 . address_id where t1 . first_name = value <n>
( having * having | select count ( * ) from store <n>
( having * having ) having | select t2 . address from store as t1 join address as t2 on t1 . address_id = t2 . address_id where t1 . first_name = value <n>
( having * having , born_state having order having | select t2 . first_name , t2 . last_name from film_actor as t1 join actor as t2 on t1 . actor_id = t2 . actor_id group by t2 . actor_id having count ( * ) > = value <n>
( having * having | select count ( * ) from store <n>
( having * having name born_state having value by having | select amount from payment order by amount desc limit value <n>
( having * having ) having and ( having * having ) having | select payment_date from payment where amount > value union select t1 . payment_date from payment as t1 join staff as t2 on t1 . staff_id = t2 . staff_id where t2 . first_name = value <n>
( having * having , born_state having name born_state having value by having | select t2 . first_name , t2 . last_name from film_actor as t1 join actor as t2 on t1 . actor_id = t2 . actor_id group by t2 . actor_id order by count ( * ) desc limit value <n>
( having * having | select count ( * ) from store <n>
( having * having ) having | select t2 . address from store as t1 join address as t2 on t1 . address_id = t2 . address_id where t1 . first_name = value <n>
( having * having ) having ! ( having * having ) having | select payment_date from payment where amount > value intersect select t1 . payment_date from payment as t1 join staff as t2 on t1 . staff_id = t2 . staff_id where t2 . first_name = value and t2 . last_name = value <n>
( having * having , born_state having name born_state having value by having | select t2 . first_name , t2 . last_name from film_actor as t1 join actor as t2 on t1 . actor_id = t2 . actor_id group by t2 . actor_id order by count ( * ) desc limit value <n>
( having * having ) having | select t2 . address from store as t1 join address as t2 on t1 . address_id = t2 . address_id where t1 . first_name = value <n>
( having * having | select first_name , last_name from actor <n>
( having * having ) having | select t2 . address from store as t1 join address as t2 on t1 . address_id = t2 . address_id where t1 . first_name = value <n>
( having group having * having | select count ( distinct rating ) from film <n>
( having * having ) having | select count ( * ) from inventory where store_id = value <n>
( having * having | select t2 . address , t1 . email from customer as t1 join address as t2 on t2 . address_id = t1 . address_id <n>
( having * having ) having head having | select t2 . first_name , t2 . last_name from film_actor as t1 join staff as t2 on t1 . address_id = t2 . address_id where t1 . first_name = value or t2 . first_name = value <n>
( having * having ) having | select t2 . address from store as t1 join address as t2 on t1 . address_id = t2 . address_id where t1 . first_name = value <n>
( having * having , born_state having name born_state having value by having | select t2 . first_name , t2 . last_name from film_actor as t1 join actor as t2 on t1 . actor_id = t2 . actor_id group by t2 . actor_id order by count ( * ) desc limit value <n>
( having * having name born_state having by having | select payment_date from payment order by payment_date asc limit value <n>
( having * having | select count ( * ) from bank <n>
( having * having | select count ( * ) from bank <n>
( having * having | select avg ( no_of_customers ) from bank <n>
( having * having ) having | select state from bank where state = value <n>
( having * having ) having | select t2 . bname from loan as t1 join bank as t2 on t1 . branch_id = t2 . branch_id join customer as t3 on t1 . cust_id = t3 . cust_id where t3 . credit_score < value <n>
( having * having name born_state having | select cust_name from customer order by credit_score asc <n>
( having * having | select count ( * ) from bank <n>
( having group having * having | select count ( distinct acc_type ) from customer <n>
( having * having ) having | select t2 . bname from loan as t1 join bank as t2 on t1 . branch_id = t2 . branch_id join customer as t3 on t1 . cust_id = t3 . cust_id where t3 . credit_score < value <n>
( having * having ) having ! ( having * having ) having | select t1 . cust_name from customer as t1 join loan as t2 on t1 . cust_id = t2 . cust_id where loan_type = value intersect select t1 . state from customer as t1 join loan as t2 on t1 . cust_id = t2 . cust_id where loan_type = value <n>
( having * having = ( having * having | select state from customer except select t1 . cust_name from customer as t1 join loan as t2 on t1 . cust_id = t2 . cust_id <n>
( having * having ) having ! ( having * having ) having | select t1 . cust_name from customer as t1 join loan as t2 on t1 . cust_id = t2 . cust_id where loan_type = value intersect select t1 . cust_name from customer as t1 join loan as t2 on t1 . cust_id = t2 . cust_id where loan_type = value <n>
( having * having , born_state having name born_state having value by having | select state from bank group by state order by sum ( no_of_customers ) desc limit value <n>
( having * having ) having | select t1 . cust_name from customer as t1 join loan as t2 on t1 . cust_id = t2 . cust_id where amount > value <n>
( having * having name born_state having value by having | select cust_name from customer order by credit_score desc limit value <n>
( having * having ) having | select avg ( no_of_customers ) from bank where state = value <n>
( having * having ) having | select state from bank where state = value <n>
( having * having , born_state having order having | select state from bank group by state having count ( * ) > = value <n>
( having * having name born_state having value by having | select bname from bank order by no_of_customers desc limit value <n>
( having * having ) having ( having * having ) having | select cust_name from customer where cust_id not in ( select cust_id from loan where credit_score < value ) <n>
( having * having ) having | select t2 . bname from loan as t1 join bank as t2 on t1 . branch_id = t2 . branch_id join customer as t3 on t1 . cust_id = t3 . cust_id where t3 . credit_score < value <n>
( having * having ) having | select state from bank where state = value <n>
( having * having ) having | select t2 . bname from loan as t1 join bank as t2 on t1 . branch_id = t2 . branch_id join customer as t3 on t1 . cust_id = t3 . cust_id where t3 . credit_score < value <n>
( having * having ) having | select avg ( no_of_customers ) from bank where state = value <n>
( having * having | select count ( * ) from assessment_notes <n>
( having * having | select count ( * ) from assessment_notes <n>
( having * having | select date_of_notes from assessment_notes <n>
( having * having ) having | select t1 . zip_postcode from addresses as t1 join teachers as t2 on t1 . address_id = t2 . address_id where t2 . first_name = value <n>
( having * having ) having | select t1 . zip_postcode from addresses as t1 join teachers as t2 on t1 . address_id = t2 . address_id where t2 . first_name = value <n>
( having * having name born_state having value by having | select teacher_id from assessment_notes order by date_of_notes desc limit value <n>
( having * having ) having | select t1 . zip_postcode from addresses as t1 join teachers as t2 on t1 . address_id = t2 . address_id where t2 . first_name = value <n>
( having * having name born_state having value by having | select teacher_id from assessment_notes order by date_of_notes desc limit value <n>
( having * having ) having | select t1 . zip_postcode from addresses as t1 join teachers as t2 on t1 . address_id = t2 . address_id where t2 . first_name = value <n>
( having * having name born_state having value by having | select teacher_id from assessment_notes order by date_of_notes desc limit value <n>
( having * having ) having | select t1 . zip_postcode from addresses as t1 join teachers as t2 on t1 . address_id = t2 . address_id where t2 . first_name = value <n>
( having * having = ( having * having | select last_name from teachers except select t1 . last_name from teachers as t1 join detention as t2 on t1 . teacher_id = t2 . teacher_id <n>
( having * having , born_state having order having | select t1 . part_name , t1 . part_id from parts as t1 join part_faults as t2 on t1 . part_id = t2 . part_id group by t1 . part_id having count ( * ) > = value <n>
( having * having , born_state having order having | select t1 . part_name , t1 . part_id from parts as t1 join part_faults as t2 on t1 . part_id = t2 . part_id group by t1 . part_id having count ( * ) > = value <n>
( having * having | select asset_id , asset_details , asset_make , asset_make , asset_make from assets <n>
( having * having | select asset_id , asset_details , asset_make , asset_make , asset_make from assets <n>
( having * having | select count ( * ) from staff <n>
( having * having , born_state having name born_state having value by having | select t1 . fault_log_entry_id , t1 . fault_description , t1 . fault_log_entry_datetime from fault_log as t1 join fault_log_parts as t2 on t1 . fault_log_entry_id = t2 . fault_log_entry_id group by t1 . fault_log_entry_id order by count ( * ) desc limit value <n>
( having * having | select asset_id , asset_details , asset_make , asset_make , asset_make from assets <n>
( having * having | select asset_id , asset_details , asset_make , asset_make , asset_make from assets <n>
( having * having name born_state having value by having | select t1 . fault_log_entry_id , t1 . fault_description , t1 . fault_log_entry_datetime from fault_log as t1 join fault_log as t2 on t1 . fault_log_entry_id = t2 . fault_log_entry_id order by t2 . fault_log_entry_id desc limit value <n>
( having * having = ( having * having | select t1 . staff_name , t1 . staff_id from staff as t1 join fault_log as t2 on t1 . staff_id = t2 . recorded_by_staff_id except select t3 . staff_name , t3 . staff_id from staff as t3 join engineer_visits as t4 on t3 . staff_id = t4 . staff_id <n>
( having * having name born_state having | select local_authority from train order by time asc <n>
( having * having ) having | select t2 . id , t2 . local_authority from weekly_weather as t1 join station as t2 on t1 . id = t2 . station_id where t1 . local_authority = value <n>
( having * having | select avg ( high_temperature ) from weekly_weather <n>
( having * having name born_state having value by having | select local_authority from train order by local_authority desc limit value <n>
( having * having ) having | select count ( * ) from class as t1 join enroll as t2 on t1 . class_code = t2 . class_code where t1 . crs_code = value <n>
( having * having ) having | select count ( * ) from class as t1 join enroll as t2 on t1 . class_code = t2 . class_code where t1 . crs_code = value <n>
( having * having ) having | select t2 . emp_fname , t1 . class_room from class as t1 join employee as t2 on t1 . prof_num = t2 . emp_num join professor as t3 on t2 . emp_num = t3 . emp_num join department as t4 on t4 . dept_code = t3 . dept_code where t4 . dept_name = value <n>
( having * having ) having | select crs_credit , crs_description from course where crs_code = value <n>
( having * having | select count ( * ) from class <n>
( having group having * having ) having | select count ( distinct class_section ) from class where crs_code = value <n>
( having * having | select count ( * ) from class <n>
( having * having , born_state having | select count ( * ) , dept_code from student group by dept_code <n>
( having * having , born_state having | select count ( * ) , dept_code from student group by dept_code <n>
( having * having , born_state having order having | select t2 . emp_fname from class as t1 join employee as t2 on t1 . prof_num = t2 . emp_num group by t1 . prof_num having count ( * ) > = value <n>
( having * having , born_state having | select count ( * ) , dept_code from student group by dept_code <n>
( having * having | select count ( * ) from class <n>
( having * having name born_state having value by having | select stu_gpa , stu_phone , stu_fname from student order by stu_gpa desc limit value <n>
( having * having ) having , born_state having | select count ( * ) , dept_code from class as t1 join enroll as t2 on t1 . class_code = t2 . class_code where t1 . crs_credit = value group by dept_code <n>
( having * having , born_state having | select count ( * ) , dept_code from student group by dept_code <n>
( having * having , born_state having name born_state having value by having | select t2 . dept_name , avg ( t1 . stu_gpa ) from student as t1 join department as t2 on t1 . dept_code = t2 . dept_code group by t1 . dept_code order by avg ( t1 . stu_gpa ) desc limit value <n>
( having * having | select count ( * ) from class <n>
( having * having | select count ( * ) from class <n>
( having * having ) having | select count ( * ) from class as t1 join enroll as t2 on t1 . class_code = t2 . class_code where t1 . crs_code = value <n>
( having group having * having | select count ( distinct class_code ) from class <n>
( having * having name born_state having value by having | select stu_gpa , stu_phone , stu_fname from student order by stu_gpa desc limit value <n>
( having * having ) having | select t2 . emp_fname , t1 . class_room from class as t1 join employee as t2 on t1 . prof_num = t2 . emp_num join professor as t3 on t2 . emp_num = t3 . emp_num join department as t4 on t4 . dept_code = t3 . dept_code where t4 . dept_name = value <n>
( having * having ) having | select t2 . emp_fname , t1 . class_room from class as t1 join employee as t2 on t1 . prof_num = t2 . emp_num join professor as t3 on t2 . emp_num = t3 . emp_num join department as t4 on t4 . dept_code = t3 . dept_code where t4 . dept_name = value <n>
( having * having ) having | select count ( * ) from class as t1 join enroll as t2 on t1 . class_code = t2 . class_code where t1 . crs_code = value <n>
( having * having name born_state having value by having | select stu_gpa , stu_phone , stu_fname from student order by stu_gpa desc limit value <n>
( having * having name born_state having | select t3 . emp_fname , t2 . prof_office from class as t1 join employee as t2 on t1 . emp_num = t2 . emp_num order by t2 . stu_gpa asc limit value <n>
( having * having ) having | select t2 . emp_fname , t1 . class_room from class as t1 join employee as t2 on t1 . prof_num = t2 . emp_num join professor as t3 on t2 . emp_num = t3 . emp_num join department as t4 on t4 . dept_code = t3 . dept_code where t4 . dept_name = value <n>
( having * having ) having | select t3 . emp_fname , t3 . emp_lname from professor as t1 join department as t2 on t1 . dept_code = t2 . dept_code join employee as t3 on t1 . emp_num = t3 . emp_num where dept_name = value <n>
( having * having ) having | select t3 . emp_fname , t3 . emp_lname from professor as t1 join department as t2 on t1 . dept_code = t2 . dept_code join employee as t3 on t1 . emp_num = t3 . emp_num where dept_name = value <n>
( having * having , born_state having name born_state having by having | select t2 . dept_name from professor as t1 join department as t2 on t1 . dept_code = t2 . dept_code group by t1 . dept_code order by count ( * ) asc limit value <n>
( having * having = ( having * having | select emp_fname from employee except select t1 . emp_fname from employee as t1 join professor as t2 on t1 . emp_num = t2 . emp_num join department as t3 on t2 . dept_code = t3 . dept_code <n>
( having * having = ( having * having ) having | select emp_fname from employee except select t1 . emp_fname from employee as t1 join class as t2 on t1 . emp_num = t2 . emp_num join department as t3 on t2 . dept_code = t3 . dept_code where t3 . dept_name = value <n>
( having * having ) having | select t3 . emp_fname , t3 . emp_lname from professor as t1 join department as t2 on t1 . dept_code = t2 . dept_code join employee as t3 on t1 . emp_num = t3 . emp_num where dept_name = value <n>
( having * having ) having | select t3 . emp_fname , t3 . emp_lname from professor as t1 join department as t2 on t1 . dept_code = t2 . dept_code join employee as t3 on t1 . emp_num = t3 . emp_num where dept_name = value <n>
( having * having ) having | select count ( * ) from class as t1 join enroll as t2 on t1 . class_code = t2 . class_code where t1 . crs_code = value <n>
( having * having ) having head having | select count ( * ) from professor where prof_high_degree = value or prof_high_degree = value <n>
( having * having ) having ! ( having * having ) having | select t1 . emp_fname from employee as t1 join class as t2 on t1 . emp_num = t2 . prof_num where crs_code = value intersect select t1 . emp_fname from employee as t1 join class as t2 on t1 . emp_num = t2 . prof_num where crs_code = value <n>
( having * having ) having | select avg ( t2 . stu_gpa ) from enroll as t1 join student as t2 on t1 . stu_num = t2 . stu_num where t1 . emp_lname = value <n>
( having * having name born_state having value by having | select stu_gpa , stu_phone , stu_fname from student order by stu_gpa desc limit value <n>
( having * having , born_state having name born_state having value by having | select t2 . dept_name , t2 . dept_address from student as t1 join department as t2 on t1 . dept_code = t2 . dept_code group by t1 . dept_code order by count ( * ) desc limit value <n>
( having * having , born_state having name born_state having value by having | select t2 . dept_name , t2 . dept_address from student as t1 join department as t2 on t1 . dept_code = t2 . dept_code group by t1 . dept_code order by count ( * ) desc limit value <n>
( having * having | select emp_fname , prof_office from employee <n>
( having * having | select emp_fname , prof_office from employee <n>
( having * having | select emp_fname , prof_office from employee <n>
( having * having ) having head having | select count ( * ) from professor where prof_high_degree = value or prof_high_degree = value <n>
( having * having ) having | select t2 . emp_fname , t1 . class_room from class as t1 join employee as t2 on t1 . prof_num = t2 . emp_num join professor as t3 on t2 . emp_num = t3 . emp_num join department as t4 on t4 . dept_code = t3 . dept_code where t4 . dept_name = value <n>
( having * having ) having | select t3 . emp_fname , t3 . emp_lname from professor as t1 join department as t2 on t1 . dept_code = t2 . dept_code join employee as t3 on t1 . emp_num = t3 . emp_num where dept_name = value <n>
( having * having , born_state having order having | select t2 . emp_fname from class as t1 join employee as t2 on t1 . prof_num = t2 . emp_num group by t1 . prof_num having count ( * ) > = value <n>
( having * having ) having | select t3 . emp_fname , t3 . emp_lname from professor as t1 join department as t2 on t1 . dept_code = t2 . dept_code join employee as t3 on t1 . emp_num = t3 . emp_num where dept_name = value <n>
( having * having ) having | select t3 . emp_fname , t3 . emp_lname from professor as t1 join department as t2 on t1 . dept_code = t2 . dept_code join employee as t3 on t1 . emp_num = t3 . emp_num where dept_name = value <n>
( having * having name born_state having | select name from club order by start_year asc <n>
( having * having | select competition_type , country from competition <n>
( having * having ) having ( having * having | select name from club where club_id not in ( select club_id from player ) <n>
( having * having ) having | select count ( * ) from club_rank where competition_type = value <n>
( having * having name born_state having value by having | select competition_type from competition order by competition_type desc limit value <n>
( having * having | select name , club from player <n>
( having * having ) having | select avg ( t2 . points ) from club as t1 join player as t2 on t1 . club_id = t2 . club_id where t1 . name = value <n>
( having * having ) having ( having * having | select name from club where club_id not in ( select club_id from player ) <n>
( having * having | select count ( * ) from club <n>
( having * having , born_state having name born_state having value by having | select competition_type from competition group by competition_type order by count ( * ) desc limit value <n>
( having * having ) having ! ( having * having ) having | select country from competition where competition_type = value intersect select country from competition where competition_type = value <n>
( having * having | select count ( * ) from club <n>
( having * having ) having ( having * having | select name from club where club_id not in ( select club_id from player ) <n>
( having * having , born_state having name born_state having value by having | select competition_type from competition group by competition_type order by count ( * ) desc limit value <n>
( having * having ) having ! ( having * having ) having | select country from competition where competition_type = value intersect select country from competition where competition_type = value <n>
( having * having | select count ( * ) from furniture_manufacte <n>
( having * having name born_state having value by having | select t1 . manufacturer_id , t1 . num_of_shops from manufacturer as t1 join furniture_manufacte as t2 on t1 . manufacturer_id = t2 . manufacturer_id order by t2 . price_in_dollar desc limit value <n>
( having * having ) having , born_state having | select count ( * ) , t1 . name from manufacturer as t1 join furniture_manufacte as t2 on t1 . manufacturer_id = t2 . manufacturer_id where t1 . num_of_shops > value group by t1 . manufacturer_id <n>
( having * having ) having , born_state having | select count ( * ) , t1 . name from manufacturer as t1 join furniture_manufacte as t2 on t1 . manufacturer_id = t2 . manufacturer_id where t1 . num_of_shops > value group by t1 . manufacturer_id <n>
( having * having = ( having * having ) having | select name from furniture except select t2 . name from furniture_manufacte as t1 join furniture_manufacte as t2 on t1 . manufacturer_id = t2 . manufacturer_id where t1 . name = value <n>
( having * having ) having | select first_name , last_name , salary from employees where salary > value <n>
( having * having ) having | select first_name , last_name , salary from employees where salary > value <n>
( having * having ) having | select job_title from jobs where min_salary > value <n>
( having * having ) having | select first_name , last_name , salary from employees where salary > value <n>
( having * having ) having ( having * having ) having from having | select first_name , last_name , hire_date from employees where department_id = ( select department_id from employees where first_name = value ) and first_name ! = value ) <n>
( having * having ) having head having | select first_name , last_name from employees where department_id = value or department_id = value <n>
( having * having ) having | select first_name , last_name , salary from employees where salary > value <n>
( having * having ) having from having from having from having | select email from employees where commission_pct = value and salary between value and value and department_id = value <n>
( having * having ) having | select job_title from jobs where min_salary > value <n>
( having * having ) having | select job_title from jobs where min_salary > value <n>
( having * having ) having | select job_title from jobs where min_salary > value <n>
( having * having ) having | select job_title from jobs where min_salary > value <n>
( having * having ) having from having from having from having | select email from employees where commission_pct = value and salary between value and value and department_id = value <n>
( having * having ) having | select job_title from jobs where min_salary > value <n>
( having * having ) having | select avg ( job_title ) from jobs where star_rating_code = value <n>
( having * having , born_state having | select department_name , count ( * ) from employees as t1 join departments as t2 on t1 . department_id = t2 . department_id group by t1 . department_id <n>
( having * having ) having head having | select first_name , last_name from employees where department_id = value or department_id = value <n>
( having * having , born_state having | select department_name , count ( * ) from employees as t1 join departments as t2 on t1 . department_id = t2 . department_id group by t1 . department_id <n>
( having * having ) having head having | select first_name , last_name from employees where department_id = value or department_id = value <n>
( having * having ) having | select first_name , last_name , salary from employees where first_name like value <n>
( having * having ) having ( having * having from having ( having * having ) having | select first_name , last_name , salary from employees where salary > ( select avg ( salary ) from employees ) and department_id in ( select department_id from employees where first_name like value ) <n>
( having * having ) having ( having * having from having ( having * having ) having | select employee_id , first_name , last_name , salary from employees where salary > ( select avg ( salary ) from employees ) and department_id in ( select department_id from employees where first_name like value ) <n>
( having * having , born_state having order having | select department_name from employees group by department_name having count ( * ) > = value <n>
( having * having ) having | select job_title from jobs where min_salary > value <n>
( having * having , born_state having order having | select employee_id from job_history group by employee_id having count ( * ) > = value <n>
( having * having ) having ( having * having from having ( having * having ) having | select employee_id , first_name , last_name , salary from employees where salary > ( select avg ( salary ) from employees ) and department_id in ( select department_id from employees where first_name like value ) <n>
( having * having ) having | select first_name , last_name , salary from employees where salary > value <n>
( having * having ) having | select job_title from jobs where min_salary > value <n>
( having * having ) having | select first_name , last_name , salary from employees where first_name like value <n>
( having * having ) having ( having * having from having ( having * having ) having | select first_name , last_name , salary from employees where salary > ( select avg ( salary ) from employees ) and department_id in ( select department_id from employees where first_name like value ) <n>
( having * having ) having ( having * having ) having from having | select first_name , last_name , hire_date from employees where department_id = ( select department_id from employees where first_name = value ) and first_name ! = value ) <n>
( having * having ) having ( having * having ) having from having | select first_name , last_name , hire_date from employees where department_id = ( select department_id from employees where first_name = value ) and first_name ! = value ) <n>
( having * having = ( having * having ) having | select employee_id from employees except select employee_id from employees where hire_date > = value <n>
( having * having , born_state having name born_state having value by having | select first_name , last_name from employees group by first_name , last_name order by count ( * ) desc limit value <n>
( having * having ) having | select first_name , last_name , salary from employees where salary > value <n>
( having * having ) having | select first_name , last_name , salary from employees where first_name like value <n>
( having * having , born_state having | select department_name , count ( * ) from employees as t1 join departments as t2 on t1 . department_id = t2 . department_id group by t1 . department_id <n>
( having * having name born_state having value by having | select song_name from song order by resolution desc limit value <n>
( having * having ) having | select t1 . artist_name , t1 . gender from artist as t1 join song as t2 on t1 . artist_name = t2 . artist_name where t2 . releasedate like value <n>
( having * having ) having | select f_id from files where formats = value <n>
( having * having ) having | select f_id from files where formats = value <n>
( having * having name born_state having value by having | select song_name from song order by resolution desc limit value <n>
( having * having ) having | select f_id from files where formats = value <n>
( having * having ) having | select avg ( rating ) , avg ( resolution ) from song where languages = value <n>
( having * having ) having from having | select artist_name from artist where country = value and gender = value <n>
( having * having ) having | select f_id from files where formats = value <n>
( having * having ) having from having | select artist_name from artist where country = value and gender = value <n>
( having * having , born_state having | select avg ( rating ) , languages from song group by languages <n>
( having * having name born_state having by having | select t1 . artist_name from song as t1 join files as t2 on t1 . f_id = t2 . f_id order by t2 . duration limit value <n>
( having * having ) having ( having * having ) having | select song_name from song where rating < ( select min ( rating ) from song where languages = value ) <n>
( having * having ) having | select t1 . artist_name , t1 . gender from artist as t1 join song as t2 on t1 . artist_name = t2 . artist_name where t2 . releasedate like value <n>
( having * having ) having | select t1 . artist_name , t1 . gender from artist as t1 join song as t2 on t1 . artist_name = t2 . artist_name where t2 . releasedate like value <n>
( having * having name born_state having | select artist_name from artist order by country asc <n>
( having * having ) having head having | select song_name from song where genre_is = value or languages = value <n>
( having * having ) having , born_state having name born_state having value by having | select languages from song where resolution > value group by languages order by count ( * ) desc limit value <n>
( having * having ) having from having | select artist_name from artist where country = value and gender = value <n>
( having * having ) having from having | select artist_name from artist where country = value and gender = value <n>
( having * having ) having from having | select artist_name from artist where country = value and gender = value <n>
( having * having ) having | select f_id from files where formats = value <n>
( having * having name born_state having by having | select t1 . artist_name from song as t1 join files as t2 on t1 . f_id = t2 . f_id order by t2 . duration limit value <n>
( having * having , born_state having order having | select languages from song group by languages having count ( * ) > = value <n>
( having * having , born_state having name born_state having value by having | select languages from song group by languages order by count ( * ) desc limit value <n>
( having * having ) having | select t1 . artist_name , t1 . gender from artist as t1 join song as t2 on t1 . artist_name = t2 . artist_name where t2 . releasedate like value <n>
( having * having ) having ( having * having ) having | select f_id from song where resolution > ( select avg ( resolution ) from song where languages = value ) <n>
( having * having ) having ( having * having ) having | select song_name from song where rating < ( select min ( rating ) from song where languages = value ) <n>
( having * having ) having name born_state having | select f_id from files where formats = value order by rating asc <n>
( having * having ) having = ( having * having ) having | select artist_name from artist where country = value except select artist_name from song where languages = value <n>
( having * having ) having | select name_first , name_last from player as t1 join all_star as t2 on t1 . player_id = t2 . player_id where year = value <n>
( having * having ) having | select name_first , name_last from player as t1 join all_star as t2 on t1 . player_id = t2 . player_id where year = value <n>
( having * having ) having | select name_first , name_last from player as t1 join all_star as t2 on t1 . player_id = t2 . player_id where year = value <n>
( having * having , born_state having | select yearid , count ( * ) from hall_of_fame group by yearid <n>
( having * having , born_state having name born_state having value by having | select t1 . name_first , t1 . name_last , t1 . player_id from player as t1 join player_award as t2 on t1 . player_id = t2 . player_id group by t1 . player_id order by count ( * ) desc limit value <n>
( having * having | select count ( * ) from player <n>
( having * having ) having | select name_first , name_last from player as t1 join all_star as t2 on t1 . player_id = t2 . player_id where year = value <n>
( having * having ) having | select count ( * ) from team_franchise where active = value <n>
( having * having ) having from having | select count ( * ) from postseason as t1 join team as t2 on t1 . team_id_loser = t2 . team_id_br where t2 . name = value and t1 . year = value <n>
( having * having ) having | select name_first , name_last from player as t1 join all_star as t2 on t1 . player_id = t2 . player_id where year = value <n>
( having * having ) having head having | select t1 . name_first , t1 . name_last from player as t1 join player_award as t2 where t2 . year = value or t2 . year = value <n>
( having * having ) having | select name_first , name_last from player as t1 join all_star as t2 on t1 . player_id = t2 . player_id where year = value <n>
( having * having ) having from having | select count ( * ) from postseason as t1 join team as t2 on t1 . team_id_loser = t2 . team_id_br where t2 . name = value and t1 . year = value <n>
( having * having ) having | select count ( * ) from team_franchise where active = value <n>
( having * having ) having | select name_first , name_last from player as t1 join all_star as t2 on t1 . player_id = t2 . player_id where year = value <n>
( having * having ) having | select count ( * ) from team_franchise where active = value <n>
( having * having ) having | select name_first , name_last from player as t1 join all_star as t2 on t1 . player_id = t2 . player_id where year = value <n>
( having * having ) having | select name_first , name_last from player as t1 join all_star as t2 on t1 . player_id = t2 . player_id where year = value <n>
( having * having ) having | select count ( * ) from team_franchise where active = value <n>
( having * having ) having | select name_first , name_last from player as t1 join all_star as t2 on t1 . player_id = t2 . player_id where year = value <n>
( having * having ) having from having | select count ( * ) from postseason as t1 join team as t2 on t1 . team_id_loser = t2 . team_id_br where t2 . name = value and t1 . year = value <n>
( having * having ) having | select count ( * ) from team_franchise where active = value <n>
( having * having , born_state having order having | select state from park group by state having count ( * ) > = value <n>
( having * having ) having from having | select count ( * ) from postseason as t1 join team as t2 on t1 . team_id_loser = t2 . team_id_br where t2 . name = value and t1 . year = value <n>
( having * having ) having | select name_first , name_last from player as t1 join all_star as t2 on t1 . player_id = t2 . player_id where year = value <n>
( having * having | select t1 . id , t2 . name from climber as t1 join mountain as t2 on t1 . id = t2 . mountain_id <n>
( having * having = ( having * having ) having | select name from mountain except select t1 . name from mountain as t1 join photos as t2 on t1 . id = t2 . mountain_id join camera_lens as t3 on t2 . camera_lens_id = t3 . id where t3 . brand = value <n>
( having * having , born_state having name born_state having value by having | select range from mountain group by range order by count ( * ) desc limit value <n>
( having * having ) having | select count ( * ) from camera_lens where focal_length_mm > value <n>
( having * having ) having | select name from mountain where name like value <n>
( having * having = ( having * having ) having | select name from program except select t1 . owner from program as t1 join broadcast as t2 on t1 . program_id = t2 . program_id where t2 . time_of_day = value <n>
( having * having name born_state having value | select name from channel order by rating_in_percent desc <n>
( having * having name born_state having | select name from program order by launch <n>
( having * having | select name from channel <n>
( having * having name born_state having | select name from program order by launch <n>
( having * having ) having ! ( having * having ) having | select t1 . owner from program as t1 join broadcast as t2 on t1 . program_id = t2 . program_id where t2 . time_of_day = value intersect select t1 . owner from program as t1 join broadcast as t2 on t1 . program_id = t2 . program_id where t2 . time_of_day = value <n>
( having * having , born_state having | select count ( * ) , owner from channel group by owner <n>
( having * having = ( having * having ) having | select name from program except select t1 . owner from program as t1 join broadcast as t2 on t1 . program_id = t2 . program_id where t2 . time_of_day = value <n>
( having * having name born_state having | select name from program order by launch <n>
( having group having * having | select count ( distinct owner ) from broadcast <n>
( having * having ) having head having | select name from channel where owner = value or owner = value <n>
( having * having , born_state having name born_state having value by having | select t1 . name from program as t1 join broadcast as t2 on t1 . program_id = t2 . program_id group by t2 . program_id order by count ( * ) desc limit value <n>
( having * having | select date_of_enrolment , date_of_completion from student_course_enrolment <n>
( having * having ) having head having | select t1 . address_line_1 from course_authors_and_tutors as t1 join courses as t2 on t1 . author_id = t2 . author_id where t2 . course_name = value or t2 . course_name = value <n>
( having * having | select t1 . date_of_enrolment , t1 . date_of_completion from student_course_enrolment as t1 join students as t2 on t1 . student_id = t2 . student_id <n>
( having * having | select date_of_enrolment , date_of_completion from student_course_enrolment <n>
( having * having | select count ( * ) from students <n>
( having * having ) having | select count ( * ) from students where personal_name like value <n>
( having * having ) having | select t1 . date_of_enrolment from student_course_enrolment as t1 join students as t2 on t1 . student_id = t2 . student_id where t2 . family_name = value <n>
( having * having ) having | select count ( * ) from students where personal_name like value <n>
( having * having name born_state having | select personal_name from students order by personal_name asc <n>
( having * having name born_state having | select personal_name from students order by personal_name asc <n>
( having * having ) having head having | select t1 . address_line_1 from course_authors_and_tutors as t1 join courses as t2 on t1 . author_id = t2 . author_id where t2 . course_name = value or t2 . course_name = value <n>
( having * having , born_state having name born_state having value by having | select t1 . personal_name , t1 . family_name , t2 . author_id from course_authors_and_tutors as t1 join courses as t2 on t1 . author_id = t2 . author_id group by t2 . author_id order by count ( * ) desc limit value <n>
( having * having , born_state having order having | select t1 . address_line_1 from course_authors_and_tutors as t1 join courses as t2 on t1 . author_id = t2 . author_id group by t2 . author_id having count ( * ) > value <n>
( having * having ) having | select t1 . date_of_enrolment from student_course_enrolment as t1 join students as t2 on t1 . student_id = t2 . student_id where t2 . family_name = value <n>
( having * having , born_state having name born_state having | select t1 . subject_id , t2 . subject_name , count ( * ) from courses as t1 join subjects as t2 on t1 . subject_id = t2 . subject_id group by t1 . subject_id order by count ( * ) asc limit value <n>
( having * having ) having | select t1 . date_of_enrolment from student_course_enrolment as t1 join student_tests_taken as t2 on t1 . registration_id = t2 . registration_id where t2 . family_name = value <n>
( having * having , born_state having order having | select t1 . address_line_1 from course_authors_and_tutors as t1 join courses as t2 on t1 . author_id = t2 . author_id group by t2 . author_id having count ( * ) > value <n>
( having * having , born_state having | select t1 . subject_id , t2 . subject_name , count ( * ) from courses as t1 join subjects as t2 on t1 . subject_id = t2 . subject_id group by t1 . subject_id <n>
( having * having ) having | select t1 . date_of_enrolment from student_course_enrolment as t1 join student_tests_taken as t2 on t1 . registration_id = t2 . registration_id where t2 . family_name = value <n>
( having * having ) having from having | select t1 . date_of_enrolment , t1 . date_of_completion from student_course_enrolment as t1 join students as t2 on t1 . student_id = t2 . student_id where t2 . family_name = value and t2 . personal_name = value <n>
( having * having , born_state having name born_state having value by having | select t1 . personal_name , t1 . family_name , t2 . author_id from course_authors_and_tutors as t1 join courses as t2 on t1 . author_id = t2 . author_id group by t2 . author_id order by count ( * ) desc limit value <n>
( having * having , born_state having order having | select t1 . address_line_1 from course_authors_and_tutors as t1 join courses as t2 on t1 . author_id = t2 . author_id group by t2 . author_id having count ( * ) > value <n>
( having * having = ( having * having | select personal_name from students except select t1 . personal_name from students as t1 join student_course_enrolment as t2 on t1 . student_id = t2 . student_id <n>
( having * having | select date_of_enrolment , date_of_completion from student_course_enrolment <n>
( having * having name born_state having | select personal_name from students order by personal_name asc <n>
( having * having , born_state having order having | select policy_type_code from policies group by policy_type_code having count ( * ) > = value <n>
( having * having name born_state having value by having | select claim_id from claims order by date_claim_made desc limit value <n>
( having * having name born_state having value by having | select claim_id from claims order by date_claim_made desc limit value <n>
( having * having ) having ( having * having | select date_claim_made , date_claim_settled from claims where amount_claimed > ( select avg ( amount_claimed ) from claims ) <n>
( having * having , born_state having name born_state having value by having | select t2 . claim_status_name from claims_processing as t1 join claims_processing_stages as t2 on t1 . claim_stage_id = t2 . claim_stage_id group by t1 . claim_stage_id order by count ( * ) desc limit value <n>
( having * having name born_state having value by having | select claim_id from claims order by date_claim_made desc limit value <n>
( having * having | select count ( * ) from claims_processing_stages <n>
( having * having | select count ( * ) from claims_processing_stages <n>
( having * having , born_state having name born_state having value by having | select payment_method_code from payments group by payment_method_code order by count ( * ) desc limit value <n>
( having * having | select count ( * ) from claims_processing_stages <n>
( having * having , born_state having name born_state having value by having | select payment_method_code from payments group by payment_method_code order by count ( * ) desc limit value <n>
( having * having | select count ( * ) from claims_processing_stages <n>
( having * having = ( having * having | select customer_details from customers except select t2 . customer_details from policies as t1 join customers as t2 on t1 . customer_id = t2 . customer_id <n>
( having * having | select count ( * ) from claims_processing_stages <n>
( having * having name born_state having by having | select patient from undergoes order by dateundergoes limit value <n>
( having * having name born_state having by having | select name from procedures order by cost limit value <n>
( having * having , born_state having order having | select t1 . name from physician as t1 join patient as t2 on t1 . employeeid = t2 . pcp group by t1 . employeeid having count ( * ) > = value <n>
( having * having name born_state having value by having | select t1 . name from physician as t1 join trained_in as t2 on t1 . employeeid = t2 . physician join procedures as t3 on t3 . code = t2 . treatment order by t3 . cost desc limit value <n>
( having * having = ( having * having ) having | select name from patient except select t1 . name from patient as t1 join prescribes as t2 on t2 . patient = t1 . ssn join medication as t3 on t2 . medication = t3 . code where t3 . name = value <n>
( having * having name born_state having value by having | select t1 . name from physician as t1 join trained_in as t2 on t1 . employeeid = t2 . physician join procedures as t3 on t3 . code = t2 . treatment order by t3 . cost desc limit value <n>
( having * having ) having | select count ( t1 . ssn ) from patient as t1 join prescribes as t2 on t1 . ssn = t2 . patient join physician as t3 on t2 . physician = t3 . employeeid where t3 . name = value <n>
( having * having ) having | select physician , department from affiliated_with where primaryaffiliation = value <n>
( having * having name born_state having value by having | select t1 . name from physician as t1 join trained_in as t2 on t1 . employeeid = t2 . physician join procedures as t3 on t3 . code = t2 . treatment order by t3 . cost desc limit value <n>
( having * having ) having head having | select count ( * ) from physician as t1 join affiliated_with as t2 on t1 . employeeid = t2 . physician join department as t3 on t2 . department = t3 . departmentid where t3 . name = value or t3 . cost > value <n>
( having * having , born_state having | select count ( * ) , t1 . name from medication as t1 join prescribes as t2 on t1 . code = t2 . medication group by t1 . name <n>
( having * having | select count ( * ) from physician <n>
( having * having | select count ( * ) from physician <n>
( having * having ) having | select t1 . name from physician as t1 join trained_in as t2 on t1 . employeeid = t2 . physician join procedures as t3 on t3 . code = t2 . treatment where t3 . name = value <n>
( having * having ) having | select physician , department from affiliated_with where primaryaffiliation = value <n>
( having * having name born_state having by having | select patient from undergoes order by dateundergoes limit value <n>
( having * having name born_state having by having | select name from procedures order by cost limit value <n>
( having * having name born_state having | select name from procedures order by cost limit value <n>
( having * having ) having head having | select count ( * ) from physician as t1 join affiliated_with as t2 on t1 . employeeid = t2 . physician join department as t3 on t2 . department = t3 . departmentid where t3 . name = value or t3 . cost > value <n>
( having * having | select count ( * ) from physician <n>
( having * having | select count ( * ) from physician <n>
( having * having name born_state having by having | select name from procedures order by cost limit value <n>
( having * having ) having | select physician , department from affiliated_with where primaryaffiliation = value <n>
( having * having ) having | select avg ( t3 . cost ) from physician as t1 join trained_in as t2 on t1 . employeeid = t2 . physician join procedures as t3 on t3 . code = t2 . treatment where t1 . nurse = value <n>
( having * having ) having | select t1 . name from physician as t1 join trained_in as t2 on t1 . employeeid = t2 . physician join procedures as t3 on t3 . code = t2 . treatment where t3 . name = value <n>
( having * having = ( having * having ) having | select name from patient except select t1 . name from patient as t1 join prescribes as t2 on t2 . patient = t1 . ssn join medication as t3 on t2 . medication = t3 . code where t3 . name = value <n>
( having * having ) having ! ( having * having ) having | select t1 . name from physician as t1 join affiliated_with as t2 on t1 . employeeid = t2 . physician join department as t3 on t2 . department = t3 . departmentid where t3 . name = value intersect select t1 . name from physician as t1 join affiliated_with as t2 on t1 . employeeid = t2 . physician join department as t3 on t2 . department = t3 . departmentid where t3 . name = value <n>
( having * having ) having head having | select t1 . name from physician as t1 join affiliated_with as t2 on t1 . employeeid = t2 . physician join department as t3 on t2 . department = t3 . departmentid where t3 . name = value or t3 . name = value <n>
( having * having ) having | select count ( t1 . ssn ) from patient as t1 join prescribes as t2 on t1 . ssn = t2 . patient join physician as t3 on t2 . physician = t3 . employeeid where t3 . name = value <n>
( having * having ) having | select t1 . name from physician as t1 join trained_in as t2 on t1 . employeeid = t2 . physician join procedures as t3 on t3 . code = t2 . treatment where t3 . name = value <n>
( having * having | select count ( * ) from ship <n>
( having * having | select type , nationality from ship <n>
( having * having ) having head having | select name from ship where nationality = value or nationality = value <n>
( having * having ) having ( having * having | select name from ship where ship_id not in ( select ship_id from mission ) <n>
( having * having , born_state having name born_state having value by having | select type from ship group by type order by count ( * ) desc limit value <n>
( having * having | select avg ( ship ) from ship <n>
( having * having | select t1 . code , t1 . fate , t2 . name from mission as t1 join ship as t2 on t1 . ship_id = t2 . ship_id <n>
( having * having ) having | select t2 . name from mission as t1 join ship as t2 on t1 . ship_id = t2 . ship_id where t1 . launched_year > value <n>
( having * having ) having ! ( having * having ) having | select type from ship where flag = value intersect select type from ship where flag = value <n>
( having * having | select count ( * ) from list <n>
( having * having ) having | select firstname from list where classroom = value <n>
( having * having , born_state having | select classroom , count ( * ) from list group by classroom <n>
( having * having | select classroom , classroom from list <n>
( having * having ) having from having | select count ( * ) from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t2 . firstname = value and t2 . lastname = value <n>
( having * having ) having | select lastname from list where classroom = value <n>
( having * having ) having | select firstname from list where classroom = value <n>
( having * having ) having | select lastname from list where classroom = value <n>
( having * having | select firstname , lastname from list <n>
( having * having ) having from having | select t1 . firstname , t1 . lastname from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t2 . firstname = value and t2 . lastname = value <n>
( having * having ) having from having | select t1 . firstname , t1 . lastname from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t2 . firstname = value and t2 . lastname = value <n>
( having * having ) having from having | select count ( * ) from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t2 . firstname = value and t2 . lastname = value <n>
( having * having ) having from having | select count ( * ) from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t2 . firstname = value and t2 . lastname = value <n>
( having * having ) having from having | select count ( * ) from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t2 . firstname = value and t2 . lastname = value <n>
( having * having ) having from having | select t1 . firstname , t1 . lastname from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t2 . firstname = value and t2 . lastname = value <n>
( having * having = ( having * having ) having | select lastname from list except select t1 . lastname from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t2 . lastname = value <n>
( having * having , born_state having | select classroom , count ( * ) from list group by classroom <n>
( having * having , born_state having | select classroom , count ( * ) from list group by classroom <n>
( having * having , born_state having | select classroom , count ( * ) from list group by classroom <n>
( having * having , born_state having name born_state having value by having | select t1 . firstname , t1 . lastname from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom group by t2 . classroom order by count ( * ) desc limit value <n>
( having * having ) having | select count ( * ) from wedding where year = value <n>
( having * having ) having head having | select name from company where sales_in_billion > value or sales_in_billion > value <n>
( having * having , born_state having name born_state having value by having | select t2 . name from wedding as t1 join people as t2 on t1 . male_id = t2 . people_id group by t2 . name order by count ( * ) desc limit value <n>
( having * having | select name , open_date , date from debate <n>
( having * having | select t3 . name , t2 . date , t2 . venue from debate_people as t1 join debate as t2 on t1 . debate_id = t2 . debate_id join people as t3 on t1 . negative = t3 . people_id <n>
( having * having | select count ( * ) from film <n>
( having * having | select avg ( gross_in_dollar ) from film <n>
( having * having | select low_estimate , high_estimate from film_market_estimation <n>
( having * having | select count ( * ) from film <n>
( having * having name born_state having | select country from market order by country asc <n>
( having * having , born_state having name born_state having value by having | select studio from film group by studio order by count ( * ) desc limit value <n>
( having * having ) having | select type from film_market_estimation where year = value <n>
( having * having | select low_estimate , high_estimate from film_market_estimation <n>
( having * having name born_state having value by having | select studio from film order by film_id desc limit value <n>
( having * having , born_state having name born_state having value by having | select studio from film group by studio order by count ( * ) desc limit value <n>
( having * having = ( having * having | select studio from film except select studio from film <n>
( having * having ) having ! ( having * having ) having | select t1 . title from film as t1 join film_market_estimation as t2 on t1 . film_id = t2 . film_id where t2 . studio = value intersect select t1 . title from film as t1 join film_market_estimation as t2 on t1 . film_id = t2 . film_id where t2 . studio = value <n>
( having * having = ( having * having ) having | select studio from film except select studio from film where director = value <n>
( having * having name born_state having value by having | select studio from film order by film_id desc limit value <n>
( having * having ) having ( having * having | select title from film where film_id not in ( select film_id from film_market_estimation ) <n>
( having * having | select role_code , role_name , role_description from roles <n>
( having * having | select role_code , role_name , role_description from roles <n>
( having * having ) having | select t2 . role_name , t2 . role_description from employees as t1 join roles as t2 on t1 . role_code = t2 . role_code where t1 . first_name = value <n>
( having * having ) having head having | select count ( * ) from all_documents where document_type_code = value or document_type_code = value <n>
( having * having | select role_code , role_name , role_description from roles <n>
( having * having ) having | select role_description from roles where role_name = value <n>
( having * having | select role_code , role_name , role_description from roles <n>
( having * having ) having | select role_description from roles where role_name = value <n>
( having * having | select count ( * ) from ref_document_types <n>
( having * having ) having | select t2 . role_name , t2 . role_description from employees as t1 join roles as t2 on t1 . role_code = t2 . role_code where t1 . first_name = value <n>
( having * having | select count ( * ) from ref_document_types <n>
( having * having ) having | select t2 . role_name , t2 . role_description from employees as t1 join roles as t2 on t1 . role_code = t2 . role_code where t1 . first_name = value <n>
( having * having ) having | select t2 . name from all_documents as t1 join ref_document_types as t2 on t1 . document_type_code = t2 . document_type_code where t1 . document_name = value <n>
( having * having , born_state having name born_state having value by having | select location_code from document_locations group by location_code order by count ( * ) desc limit value <n>
( having * having , born_state having order having | select location_code from document_locations group by location_code having count ( * ) > = value <n>
( having * having ) having | select t2 . role_name , t2 . role_description from employees as t1 join roles as t2 on t1 . role_code = t2 . role_code where t1 . first_name = value <n>
( having * having ) having head having | select count ( * ) from all_documents where document_type_code = value or document_type_code = value <n>
( having * having | select role_code , role_name , role_description from roles <n>
( having * having | select role_code , role_name , role_description from roles <n>
( having * having , born_state having | select role_code , count ( * ) from employees group by role_code <n>
( having * having , born_state having name born_state having value by having | select location_code from document_locations group by location_code order by count ( * ) desc limit value <n>
( having * having , born_state having name born_state having value by having | select location_code from document_locations group by location_code order by count ( * ) desc limit value <n>
( having * having , born_state having | select role_code , count ( * ) from employees group by role_code <n>
( having * having , born_state having | select role_code , count ( * ) from employees group by role_code <n>
( having * having ) having | select role_description from roles where role_name = value <n>
( having * having = ( having * having | select employee_id from employees except select destroyed_by_employee_id from documents_to_be_destroyed <n>
( having * having ) having head having | select count ( * ) from all_documents where document_type_code = value or document_type_code = value <n>
( having * having | select resname from restaurant <n>
( having * having | select fname , lname from student <n>
( having * having ) having | select fname from student where major = value <n>
( having * having ) having | select clubdesc from club where clubname = value <n>
( having * having ) having | select count ( * ) from student where advisor = value <n>
( having * having ) having | select count ( * ) from student where advisor = value <n>
( having * having ) having | select fname from student where major = value <n>
( having * having ) having , born_state having name born_state having value by having | select major from student where sex = value group by major order by count ( * ) desc limit value <n>
( having * having , born_state having name born_state having value by having | select gtype from video_games group by gtype order by count ( * ) desc limit value <n>
( having * having ) having | select clubdesc from club where clubname = value <n>
( having * having ) having | select clubdesc from club where clubname = value <n>
( having * having ) having | select clubdesc from club where clubname = value <n>
( having * having ) having | select count ( * ) from student where advisor = value <n>
( having * having ) having | select fname from student where major = value <n>
( having group having * having ) having | select count ( distinct major ) from student where sex = value <n>
( having * having ) having | select count ( * ) from student where advisor = value <n>
( having * having ) having from having | select t3 . fname , t3 . lname from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value and t3 . major = value <n>
( having * having ) having | select count ( * ) from student where advisor = value <n>
( having * having ) having head having | select count ( * ) from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t3 . fname = value or t3 . major = value <n>
( having * having ) having | select avg ( t3 . age ) from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value <n>
( having * having ) having | select avg ( t3 . age ) from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value <n>
( having * having ) having ! ( having * having ) having | select t1 . grant_amount from grants as t1 join documents as t2 on t1 . grant_id = t2 . grant_id where t2 . sent_date < value intersect select grant_amount from grants where grant_end_date > value <n>
( having * having name born_state having value by having | select date_to from project_staff order by date_to desc limit value <n>
( having * having ) having ( having * having | select project_details from projects where project_id not in ( select project_id from project_staff ) <n>
( having * having name born_state having value by having | select date_to from project_staff order by date_to desc limit value <n>
( having * having ) having head having | select t1 . response_received_date from documents as t1 join document_types as t2 on t1 . document_type_code = t2 . document_type_code join grants as t3 on t1 . grant_id = t3 . grant_id where t2 . document_description = value or t3 . grant_amount > value <n>
( having * having = ( having * having | select organisation_id from project_staff except select t1 . project_details from projects as t1 join project_outcomes as t2 on t1 . project_id = t2 . project_id <n>
( having * having | select count ( * ) from project_staff <n>
( having * having , born_state having | select role_code , count ( * ) from project_staff group by role_code <n>
( having * having ) having | select t1 . outcome_description from research_outcomes as t1 join project_outcomes as t2 on t1 . outcome_code = t2 . outcome_code join projects as t3 on t2 . project_id = t3 . project_id where t3 . project_details = value <n>
( having * having ) having | select t1 . outcome_description from research_outcomes as t1 join project_outcomes as t2 on t1 . outcome_code = t2 . outcome_code join projects as t3 on t2 . project_id = t3 . project_id where t3 . project_details = value <n>
( having * having , born_state having name born_state having value by having | select t1 . organisation_type from organisations as t1 join research_staff as t2 on t1 . organisation_id = t2 . employer_organisation_id group by t1 . organisation_type order by count ( * ) desc limit value <n>
( having * having ) having ( having * having | select project_details from projects where project_id not in ( select project_id from project_staff ) <n>
( having * having , born_state having name born_state having value by having | select t1 . organisation_type from organisations as t1 join research_staff as t2 on t1 . organisation_id = t2 . employer_organisation_id group by t1 . organisation_type order by count ( * ) desc limit value <n>
( having * having ) having ! ( having * having ) having | select t1 . grant_amount from grants as t1 join documents as t2 on t1 . grant_id = t2 . grant_id where t2 . sent_date < value intersect select grant_amount from grants where grant_end_date > value <n>
( having * having , born_state having name born_state having value by having | select t1 . organisation_type from organisations as t1 join research_staff as t2 on t1 . organisation_id = t2 . employer_organisation_id group by t1 . organisation_type order by count ( * ) desc limit value <n>
( having * having name born_state having | select staff_details from research_staff order by staff_details asc <n>
( having * having ) having head having | select count ( * ) from project_staff where role_code = value or document_type_code = value <n>
( having * having ) having | select t1 . outcome_description from research_outcomes as t1 join project_outcomes as t2 on t1 . outcome_code = t2 . outcome_code join projects as t3 on t2 . project_id = t3 . project_id where t3 . project_details = value <n>
( having * having , born_state having name born_state having value by having | select t1 . organisation_type from organisations as t1 join research_staff as t2 on t1 . organisation_id = t2 . employer_organisation_id group by t1 . organisation_type order by count ( * ) desc limit value <n>
( having * having name born_state having | select staff_details from research_staff order by staff_details asc <n>
( having * having | select count ( * ) from project_staff <n>
( having * having ) having ! ( having * having ) having | select t1 . grant_amount from grants as t1 join documents as t2 on t1 . grant_id = t2 . grant_id where t2 . sent_date < value intersect select grant_amount from grants where grant_end_date > value <n>
( having * having , born_state having name born_state having value by having | select t1 . organisation_type from organisations as t1 join research_staff as t2 on t1 . organisation_id = t2 . employer_organisation_id group by t1 . organisation_type order by count ( * ) desc limit value <n>
( having * having | select count ( * ) from person <n>
( having * having ) having from having | select avg ( age ) from person where job = value and job = value <n>
( having group having * having | select count ( distinct job ) from person <n>
( having * having ) having from having | select t2 . friend from person as t1 join personfriend as t2 on t1 . name = t2 . friend where t2 . name = value and t1 . job = value <n>
( having * having ) having from having | select t2 . friend from person as t1 join personfriend as t2 on t1 . name = t2 . friend where t2 . name = value and t1 . job = value <n>
( having * having ) having from having | select t2 . friend from person as t1 join personfriend as t2 on t1 . name = t2 . friend where t2 . name = value and t1 . job = value <n>
( having * having ) having | select count ( * ) from person where gender = value <n>
( having * having , born_state having | select avg ( age ) , job from person group by job <n>
( having * having | select count ( * ) from person <n>
( having * having , born_state having | select count ( * ) , gender from person group by gender <n>
( having * having ) having from having | select count ( * ) from person where job = value and age < value <n>
( having * having name born_state having value | select name from person order by age desc <n>
( having * having name born_state having | select name from person order by age asc <n>
( having * having ) having head having | select name from person where job = value or job = value <n>
( having * having = ( having * having ) having | select name from person except select t2 . name from person as t1 join personfriend as t2 on t1 . name = t2 . friend where t2 . name = value <n>
( having * having = ( having * having ) having | select name from person except select t2 . name from person as t1 join personfriend as t2 on t1 . name = t2 . friend where t2 . name = value <n>
( having * having | select count ( * ) from person <n>
( having * having ) having from having | select t2 . friend from person as t1 join personfriend as t2 on t1 . name = t2 . friend where t2 . name = value and t1 . job = value <n>
( having * having ) having from having | select t2 . friend from person as t1 join personfriend as t2 on t1 . name = t2 . friend where t2 . name = value and t1 . job = value <n>
( having * having ) having from having | select t2 . friend from person as t1 join personfriend as t2 on t1 . name = t2 . friend where t2 . name = value and t1 . job = value <n>
( having * having ) having ( having * having | select t2 . name , t3 . name from person as t1 join personfriend as t2 on t1 . name = t2 . friend where t2 . age > ( select avg ( age ) from person ) <n>
( having * having ) having from having | select t2 . friend from person as t1 join personfriend as t2 on t1 . name = t2 . friend where t2 . name = value and t1 . job = value <n>
( having * having ) having ( having * having | select name from person where age = ( select max ( age ) from person ) <n>
( having * having = ( having * having ) having | select name from person except select t2 . name from person as t1 join personfriend as t2 on t1 . name = t2 . friend where t2 . name = value <n>
( having * having name born_state having value by having | select t2 . name from person as t1 join personfriend as t2 on t1 . name = t2 . name order by t1 . age desc limit value <n>
( having * having ) having | select t2 . name from person as t1 join personfriend as t2 on t1 . name = t2 . name where t1 . name = value <n>
( having * having | select name , location from member <n>
( having * having , born_state having name born_state having value by having | select country from member group by country order by count ( * ) desc limit value <n>
( having * having name born_state having | select name from member order by name asc <n>
( having * having ) having | select name from member where country ! = value <n>
( having * having name born_state having | select image_name , image_url from images order by image_name asc <n>
( having * having ) having | select document_type_code from documents where document_name = value <n>
( having * having , born_state having name born_state having value by having | select document_type_code from documents group by document_type_code order by count ( * ) desc limit value <n>
( having * having , born_state having name born_state having value by having | select document_type_code from documents group by document_type_code order by count ( * ) desc limit value <n>
( having * having name born_state having value by having | select document_name , access_count from documents order by access_count desc limit value <n>
( having * having = ( having * having | select document_name from documents except select t1 . document_name from documents as t1 join document_sections as t2 on t1 . document_code = t2 . document_code join document_sections_images as t3 on t2 . section_id = t3 . section_id <n>
( having * having = ( having * having | select document_name from documents except select t1 . document_name from documents as t1 join document_sections as t2 on t1 . document_code = t2 . document_code join document_sections_images as t3 on t2 . section_id = t3 . section_id <n>
( having * having ) having | select avg ( access_count ) from documents where document_type_code = value <n>
( having * having = ( having * having | select document_name from documents except select t1 . document_name from documents as t1 join document_sections as t2 on t1 . document_code = t2 . document_code join document_sections_images as t3 on t2 . section_id = t3 . section_id <n>
( having * having ) having | select document_name from documents where document_name = value <n>
( having * having = ( having * having | select document_name from documents except select t1 . document_name from documents as t1 join document_sections as t2 on t1 . document_code = t2 . document_code join document_sections_images as t3 on t2 . section_id = t3 . section_id <n>
( having * having , born_state having name born_state having value by having | select avg ( access_count ) , sum ( access_count ) from documents group by document_type_code order by count ( * ) desc limit value <n>
( having * having , born_state having | select document_type_code , count ( * ) from documents group by document_type_code <n>
( having * having | select count ( * ) from office_locations <n>
( having * having name born_state having value | select name from buildings order by height desc <n>
( having * having name born_state having | select name from buildings order by name asc <n>
( having * having ) having | select t2 . name from office_locations as t1 join buildings as t2 on t1 . building_id = t2 . id join companies as t3 on t1 . company_id = t3 . id where t3 . name = value <n>
( having group having * having | select count ( distinct industry ) from office_locations <n>
( having * having name born_state having value | select name from buildings order by height desc <n>
( having * having , born_state having order having | select headquarters from companies group by headquarters having count ( * ) > = value <n>
( having * having name born_state having value | select name from buildings order by height desc <n>
( having * having | select count ( * ) from office_locations <n>
( having * having name born_state having value by having | select stories from buildings order by height desc limit value <n>
( having * having ) having ( having * having | select name from buildings where id not in ( select building_id from office_locations ) <n>
( having * having ) having head having | select count ( * ) from office_locations as t1 join buildings as t2 on t1 . building_id = t2 . id where t1 . name = value or t2 . industry = value <n>
( having * having | select count ( * ) from department_stores <n>
( having * having ) having head having | select product_name from products where product_price > value or product_price > value <n>
( having * having , born_state having | select product_type_code , sum ( product_price ) from products group by product_type_code <n>
( having * having | select product_name , product_type_code from products <n>
( having * having , born_state having order having | select product_type_code from products group by product_type_code having count ( * ) > = value <n>
( having * having name born_state having | select chair_name from festival_detail order by year asc <n>
( having * having name born_state having value by having | select festival_id from festival_detail order by year desc limit value <n>
( having * having name born_state having value by having | select product_name from festival_detail order by year desc limit value <n>
( having * having name born_state having | select festival_name from festival_detail order by year asc <n>
( having * having , born_state having | select type , count ( * ) from artwork group by type <n>
( having * having ) having ( having * having | select festival_name from festival_detail where festival_id not in ( select festival_id from artwork ) <n>
( having * having ) having ! ( having * having ) having | select type from artwork where director = value intersect select type from artwork where num_of_audience > value <n>
( having * having | select count ( * ) from premises <n>
( having * having ) having | select t2 . customer_name from mailshot_customers as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t1 . customer_name = value <n>
( having * having , born_state having name born_state having value by having | select t2 . customer_name from mailshot_customers as t1 join customers as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id order by count ( * ) desc limit value <n>
( having * having ) having head having | select count ( * ) from customers as t1 join customer_addresses as t2 on t1 . customer_id = t2 . customer_id where outcome_code = value or t2 . outcome_code = value <n>
( having * having | select count ( * ) from student <n>
( having * having ) having | select cname from course where credits = value <n>
( having * having ) having | select count ( * ) from course where credits > value <n>
( having * having ) having | select dname from department where building = value <n>
( having * having | select fname , lname from student <n>
( having * having ) having from having | select fname , lname from faculty where sex = value and building = value <n>
( having * having ) having from having | select fname , lname from faculty where sex = value and building = value <n>
( having * having name born_state having | select dname from department order by mgr_start_date asc <n>
( having * having name born_state having value by having | select fname from student order by age desc limit value <n>
( having * having name born_state having value by having | select cname from course order by credits desc limit value <n>
( having * having name born_state having | select fname , lname from student order by major <n>
( having * having = ( having * having | select dname from department except select t1 . dname from department as t1 join minor_in as t2 on t1 . dno = t2 . dno <n>
( having * having name born_state having by having | select fname , lname from student order by age asc limit value <n>
( having * having name born_state having | select fname , lname from student order by lname <n>
( having * having , born_state having order having | select t1 . dname from department as t1 join minor_in as t2 on t1 . dno = t2 . dno group by t2 . dno having count ( * ) > = value <n>
( having * having ) having | select fname from student where major = value <n>
( having * having | select fname , lname from student <n>
( having * having ) having | select fname from student where major = value <n>
( having * having ) having | select fname from student where major = value <n>
( having * having ) having | select avg ( t2 . gradepoint ) from enrolled_in as t1 join gradeconversion as t2 on t1 . facid = t2 . facid where t1 . dname = value <n>
( having * having ) having head having | select fname from student where sex = value or sex = value <n>
( having * having ) having from having and ( having * having ) having from having | select cname from course where credits = value union select cname from course where credits = value and year = value and hours = value <n>
( having * having name born_state having value by having | select product_name from products order by product_price desc limit value <n>
( having group having * having | select count ( distinct product_type_code ) from products <n>
( having * having ) having | select t1 . staff_id , t1 . staff_gender from staff as t1 join staff_department_assignments as t2 on t1 . staff_id = t2 . staff_id where t2 . job_title_code = value <n>
( having * having , born_state having | select product_type_code , max ( product_price ) , min ( product_price ) from products group by product_type_code <n>
( having * having , born_state having name born_state having value by having | select t1 . customer_name from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id order by count ( * ) desc limit value <n>
( having * having , born_state having | select product_type_code , max ( product_price ) , min ( product_price ) from products group by product_type_code <n>
( having * having name born_state having value by having | select product_name from products order by product_price desc limit value <n>
( having * having name born_state having | select product_name from products order by product_price asc <n>
( having * having ) having ! ( having * having ) having | select t1 . customer_name from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id join order_items as t3 on t2 . order_id = t3 . order_id join products as t4 on t3 . product_id = t4 . product_id where t4 . product_name = value intersect select t1 . customer_name from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id join order_items as t3 on t2 . order_id = t3 . order_id join products as t4 on t3 . product_id = t4 . product_id where t4 . product_name = value <n>
( having * having ) having ! ( having * having ) having | select t1 . customer_name from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id join order_items as t3 on t2 . order_id = t3 . order_id join products as t4 on t3 . product_id = t4 . product_id where t4 . product_name = value intersect select t1 . customer_name from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id join order_items as t3 on t2 . order_id = t3 . order_id join products as t4 on t3 . product_id = t4 . product_id where t4 . product_name = value <n>
( having * having , born_state having name born_state having value by having | select dept_store_chain_id from department_stores group by dept_store_chain_id order by count ( * ) desc limit value <n>
( having * having | select max ( customer_code ) , min ( customer_code ) from customers <n>
( having * having name born_state having by having | select product_id , product_type_code from products order by product_price limit value <n>
( having * having ) having name born_state having value by having | select product_name from products where product_type_code = value order by product_price desc limit value <n>
( having * having ) having ( having * having ) having | select product_price from products where product_price > ( select avg ( product_price ) from products where product_id = value ) <n>
( having * having ) having | select t1 . staff_id , t1 . staff_gender from staff as t1 join staff_department_assignments as t2 on t1 . staff_id = t2 . staff_id where t2 . job_title_code = value <n>
( having * having name born_state having | select product_name from products order by product_price asc <n>
( having * having | select max ( customer_code ) , min ( customer_code ) from customers <n>
( having * having ) having head having | select t1 . staff_name , t1 . staff_gender from staff as t1 join staff_department_assignments as t2 on t1 . staff_id = t2 . staff_id where t2 . job_title_code = value or t2 . job_title_code = value <n>
( having * having , born_state having name born_state having value by having | select dept_store_chain_id from department_stores group by dept_store_chain_id order by count ( * ) desc limit value <n>
( having * having | select max ( customer_code ) , min ( customer_code ) from customers <n>
( having * having ) having | select t1 . staff_id , t1 . staff_gender from staff as t1 join staff_department_assignments as t2 on t1 . staff_id = t2 . staff_id where t2 . job_title_code = value <n>
( having * having name born_state having | select product_name from products order by product_price asc <n>
( having * having , born_state having order having | select product_type_code from products group by product_type_code having count ( * ) > = value <n>
( having * having ) having = ( having * having ) having | select t1 . staff_name , t1 . staff_gender from staff as t1 join staff_department_assignments as t2 on t1 . staff_id = t2 . staff_id where t2 . job_title_code = value except select t1 . staff_name , t1 . staff_gender from staff as t1 join staff_department_assignments as t2 on t1 . staff_id = t2 . staff_id where t2 . job_title_code = value or t2 . job_title_code = value <n>
( having * having | select avg ( product_price ) from products <n>
( having * having name born_state having value by having | select product_name from products order by product_price desc limit value <n>
( having * having | select max ( transit_passengers ) , min ( transit_passengers ) from airport <n>
( having * having ) having | select count ( * ) from aircraft where aircraft = value <n>
( having * having ) having | select count ( * ) from aircraft where aircraft = value <n>
( having * having ) having head having | select t1 . aircraft from aircraft as t1 join airport_aircraft as t2 on t1 . aircraft_id = t2 . aircraft_id join airport as t3 on t2 . airport_id = t3 . airport_id where t3 . airport_name = value or t3 . airport_name = value <n>
( having * having name born_state having value by having | select name from airport order by international_passengers desc limit value <n>
( having * having ) having | select t1 . aircraft , t1 . description from aircraft as t1 join airport_aircraft as t2 on t1 . aircraft_id = t2 . aircraft_id join airport as t3 on t2 . airport_id = t3 . airport_id where t3 . total_passengers > value <n>
( having * having ) having | select avg ( t3 . total_passengers ) from aircraft as t1 join airport_aircraft as t2 on t1 . aircraft_id = t2 . aircraft_id join airport as t3 on t2 . airport_id = t3 . airport_id where t1 . aircraft = value <n>
( having * having name born_state having value by having | select t2 . name from aircraft as t1 join airport_aircraft as t2 on t1 . aircraft_id = t2 . aircraft_id join airport as t3 on t2 . airport_id = t3 . airport_id order by t3 . total_passengers desc limit value <n>
( having * having , born_state having | select t1 . aircraft , count ( * ) from aircraft as t1 join match as t2 on t1 . aircraft_id = t2 . winning_aircraft group by t2 . winning_aircraft <n>
( having * having , born_state having order having | select t1 . aircraft from aircraft as t1 join match as t2 on t1 . aircraft_id = t2 . winning_aircraft group by t2 . winning_aircraft having count ( * ) > = value <n>
( having * having ) having ! ( having * having ) having | select t1 . aircraft from aircraft as t1 join airport_aircraft as t2 on t1 . aircraft_id = t2 . aircraft_id join airport as t3 on t2 . airport_id = t3 . airport_id where t3 . airport_name = value intersect select t1 . aircraft from aircraft as t1 join airport_aircraft as t2 on t1 . aircraft_id = t2 . aircraft_id join airport as t3 on t2 . airport_id = t3 . airport_id where t3 . airport_name = value <n>
( having * having name born_state having value by having | select t2 . name from aircraft as t1 join airport_aircraft as t2 on t1 . aircraft_id = t2 . aircraft_id join airport as t3 on t2 . airport_id = t3 . airport_id order by t3 . total_passengers desc limit value <n>
( having * having name born_state having | select name from pilot order by name asc <n>
( having * having | select customer_event_id , date_moved_in , property_id from customer_events <n>
( having * having ) having | select t2 . thing_id , t2 . type_of_thing_code from timed_status_of_things as t1 join things as t2 on t1 . thing_id = t2 . thing_id where t1 . service_details = value <n>
( having * having | select customer_event_id , date_moved_in , property_id from customer_events <n>
( having * having | select count ( * ) from things <n>
( having * having ) having | select t2 . thing_id , t2 . type_of_thing_code from timed_status_of_things as t1 join things as t2 on t1 . thing_id = t2 . thing_id where t1 . service_details = value <n>
( having * having | select customer_event_id , date_moved_in , property_id from customer_events <n>
( having * having name born_state having | select team from player order by team asc <n>
( having * having ) having | select t2 . denomination from player as t1 join school as t2 on t1 . school_id = t2 . school_id where t1 . nickname = value <n>
( having * having | select avg ( enrollment ) , max ( enrollment ) , min ( enrollment ) , avg ( enrollment ) from school <n>
( having * having | select count ( * ) from school <n>
( having * having name born_state having value by having | select school_colors from school order by enrollment desc limit value <n>
( having * having , born_state having | select denomination , count ( * ) from player group by denomination <n>
( having * having name born_state having value by having | select school_colors from school order by enrollment desc limit value <n>
( having * having | select count ( * ) from school <n>
( having * having name born_state having value by having | select school_colors from school order by enrollment desc limit value <n>
( having * having = ( having * having | select location from school except select t1 . location from school as t1 join school as t2 on t1 . school_id = t2 . school_id <n>
( having * having ) having ( having * having | select location from school where school_id not in ( select school_id from player ) <n>
( having * having , born_state having order having | select denomination from school group by denomination having count ( * ) > = value <n>
( having * having , born_state having order having | select max_page_size from product group by max_page_size having count ( * ) > = value <n>
( having * having ) having head having | select district_name from district where city_area > value or city_population > value <n>
( having * having name born_state having value by having | select district_name from district order by city_area desc limit value <n>
( having * having ) having ( having * having | select count ( * ) from district where city_area > ( select avg ( city_area ) from district ) <n>
( having * having ) having | select t3 . headquartered_city from store as t1 join store_district as t2 on t1 . store_id = t2 . store_id join district as t3 on t2 . district_id = t3 . district_id where t1 . store_name = value <n>
( having * having name born_state having value by having | select district_name from district order by city_area desc limit value <n>
( having * having , born_state having | select t3 . headquartered_city , count ( * ) from store as t1 join store_district as t2 on t1 . store_id = t2 . store_id join district as t3 on t2 . district_id = t3 . district_id group by t3 . headquartered_city <n>
( having * having | select avg ( pages_per_minute_color ) from product <n>
( having * having ) having | select t3 . headquartered_city from store as t1 join store_district as t2 on t1 . store_id = t2 . store_id join district as t3 on t2 . district_id = t3 . district_id where t1 . store_name = value <n>
( having * having ) having head having | select district_name from district where city_area > value or city_population > value <n>
( having * having name born_state having value by having | select district_name from district order by city_area desc limit value <n>
( having * having ) having ( having * having name born_state having by having | select t1 . store_name from store as t1 join store_district as t2 on t1 . store_id = t2 . store_id where district_id = ( select district_id from district order by city_area asc limit value ) <n>
( having * having ) having ! ( having * having ) having | select t3 . district_name from store as t1 join store_district as t2 on t1 . store_id = t2 . store_id join district as t3 on t2 . district_id = t3 . district_id where t1 . type = value intersect select t3 . district_name from store as t1 join store_district as t2 on t1 . store_id = t2 . store_id join district as t3 on t2 . district_id = t3 . district_id where t1 . type = value <n>
( having * having | select avg ( hs ) , max ( hs ) , min ( hs ) from player <n>
( having * having | select count ( * ) from player <n>
( having * having ) having | select count ( * ) from player where hs > value <n>
( having * having ) having | select t1 . pname , t2 . cname from player as t1 join tryout as t2 on t1 . pid = t2 . pid where t2 . decision = value <n>
( having * having ) having | select count ( * ) from player where hs > value <n>
( having * having ) having | select count ( * ) from player where hs > value <n>
( having * having | select avg ( hs ) , max ( hs ) , min ( hs ) from player <n>
( having * having ) having | select avg ( t1 . hs ) from player as t1 join tryout as t2 on t1 . pid = t2 . pid where t2 . decision = value <n>
( having * having ) having | select t1 . pname , t2 . cname from player as t1 join tryout as t2 on t1 . pid = t2 . pid where t2 . decision = value <n>
( having * having name born_state having | select pname from player order by hs asc <n>
( having * having ) having name born_state having value | select pname from player where ycard = value order by hs desc <n>
( having * having name born_state having | select pname from player order by hs asc <n>
( having * having name born_state having value by having | select having from college order by enr desc limit value <n>
( having * having ) having | select cname from tryout where ppos = value <n>
( having * having name born_state having | select pname from player order by hs asc <n>
( having * having ) having | select t1 . pname , t2 . cname from player as t1 join tryout as t2 on t1 . pid = t2 . pid where t2 . decision = value <n>
( having * having ) having | select t1 . pname , t2 . cname from player as t1 join tryout as t2 on t1 . pid = t2 . pid where t2 . decision = value <n>
( having * having ) having | select t1 . pname , t2 . cname from player as t1 join tryout as t2 on t1 . pid = t2 . pid where t2 . decision = value <n>
( having * having ) having | select t1 . pname , t2 . cname from player as t1 join tryout as t2 on t1 . pid = t2 . pid where t2 . decision = value <n>
( having * having ) having | select cname from tryout where ppos = value <n>
( having * having ) having | select avg ( t1 . hs ) from player as t1 join tryout as t2 on t1 . pid = t2 . pid where t2 . decision = value <n>
( having * having ) having | select cname from tryout where ppos = value <n>
( having * having ) having | select cname from tryout where ppos = value <n>
( having * having ) having | select count ( * ) from player where hs > value <n>
( having * having ) having ! ( having * having ) having | select t1 . state from college as t1 join tryout as t2 on t1 . cname = t2 . cname where t2 . ppos = value intersect select t1 . state from college as t1 join tryout as t2 on t1 . cname = t2 . cname where t2 . ppos = value <n>
( having * having ) having ! ( having * having ) having | select t1 . state from college as t1 join tryout as t2 on t1 . cname = t2 . cname where t2 . ppos = value intersect select t1 . state from college as t1 join tryout as t2 on t1 . cname = t2 . cname where t2 . ppos = value <n>
( having * having = ( having * having ) having | select state from college except select state from state where ppos = value <n>
( having * having ) having ( having * having | select count ( * ) from college where enr > ( select avg ( enr ) from college ) <n>
( having * having ) having ( having * having | select cname from tryout where ppos = ( select max ( hs ) from player ) <n>
( having * having ) having ( having * having ) having | select cname from tryout where ppos = value union select cname from tryout where ppos = value ) <n>
( having * having ) having ( having * having | select count ( * ) from college where enr > ( select avg ( enr ) from college ) <n>
( having * having ) having ( having * having | select count ( * ) from college where enr > ( select avg ( enr ) from college ) <n>
( having * having name born_state having | select shop_name , location from shop order by shop_name asc <n>
( having * having name born_state having | select shop_name , location from shop order by shop_name asc <n>
( having * having | select avg ( quantity ) from stock <n>
( having group having * having | select count ( distinct software_platform ) from device <n>
( having * having name born_state having | select shop_name , location from shop order by shop_name asc <n>
( having * having ) having | select t2 . carrier from stock as t1 join device as t2 on t1 . device_id = t2 . device_id where t1 . carrier = value <n>
( having * having , born_state having name born_state having value by having | select software_platform from device group by software_platform order by count ( * ) desc limit value <n>
( having * having , born_state having | select software_platform , count ( * ) from device group by software_platform <n>
( having * having name born_state having value | select carrier from device order by carrier desc <n>
( having * having = ( having * having | select carrier from device except select t1 . carrier from device as t1 join device as t2 on t1 . device_id = t2 . device_id <n>
( having * having = ( having * having | select carrier from device except select t1 . carrier from device as t1 join device as t2 on t1 . device_id = t2 . device_id <n>
( having * having ) having | select carrier from device where software_platform ! = value <n>
( having * having | select store_name from drama_workshop_groups <n>
( having * having | select count ( * ) from bookings <n>
( having * having ) having | select t2 . store_name from bookings as t1 join drama_workshop_groups as t2 on t1 . workshop_group_id = t2 . workshop_group_id where t1 . status_code = value <n>
( having * having | select planned_delivery_date , actual_delivery_date from bookings <n>
( having * having ) having | select t1 . city_town from addresses as t1 join stores as t2 on t1 . address_id = t2 . address_id where t2 . store_name = value <n>
( having * having ) having ( having * having | select product_name from products where product_id not in ( select product_id from products_in_events ) <n>
( having * having name born_state having | select product_name from products order by product_price asc <n>
( having * having , born_state having | select status_code , count ( * ) from invoices group by payment_method_code <n>
( having * having , born_state having name born_state having value by having | select status_code from bookings group by status_code order by count ( * ) desc limit value <n>
( having * having ) having | select t1 . city_town from addresses as t1 join stores as t2 on t1 . address_id = t2 . address_id where t2 . store_name = value <n>
( having * having ) having | select t1 . city_town from addresses as t1 join stores as t2 on t1 . address_id = t2 . address_id where t2 . store_name = value <n>
( having * having , born_state having | select status_code , count ( * ) from invoices group by payment_method_code <n>
( having * having | select planned_delivery_date , actual_delivery_date from bookings <n>
( having * having | select avg ( order_quantity ) from invoices <n>
( having * having ) having | select t2 . store_name from bookings as t1 join drama_workshop_groups as t2 on t1 . workshop_group_id = t2 . workshop_group_id where t1 . status_code = value <n>
( having * having ) having | select t1 . city_town from addresses as t1 join stores as t2 on t1 . address_id = t2 . address_id where t2 . store_name = value <n>
( having * having ) having | select t1 . city_town from addresses as t1 join stores as t2 on t1 . address_id = t2 . address_id where t2 . store_name = value <n>
( having * having | select count ( * ) from bookings <n>
( having * having ) having | select t1 . city_town from addresses as t1 join stores as t2 on t1 . address_id = t2 . address_id where t2 . store_name = value <n>
( having * having name born_state having value by having | select product_name from products order by product_price desc limit value <n>
( having * having ) having ( having * having | select product_name from products where product_id not in ( select product_id from products_in_events ) <n>
( having * having ) having | select t1 . actual_delivery_date from customer_orders as t1 join order_items as t2 on t1 . order_id = t2 . order_id where t2 . order_quantity = value <n>
( having * having ) having | select avg ( order_quantity ) from invoices where payment_method_code = value <n>
( having * having name born_state having value by having | select product_name from products order by product_price desc limit value <n>
( having * having | select count ( * ) from instruments <n>
( having * having ) having | select instrument from instruments as t1 join songs as t2 on t1 . songid = t2 . songid where title = value <n>
( having * having ) having | select t3 . title from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid where t2 . title = value <n>
( having * having ) having | select t3 . title from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid where t2 . title = value <n>
( having * having ) having | select t3 . title from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid where t2 . title = value <n>
( having * having ) having | select t2 . firstname , t2 . lastname from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid where t3 . title = value <n>
( having * having | select max ( title ) from movie <n>
( having * having , born_state having name born_state having value by having | select instrument from instruments group by instrument order by count ( * ) desc limit value <n>
( having * having ) having , born_state having name born_state having value by having | select type from vocals as t1 join band as t2 on t1 . bandmate = t2 . id where firstname = value group by type order by count ( * ) desc limit value <n>
( having * having | select count ( * ) from instruments <n>
( having * having , born_state having name born_state having value by having | select instrument from instruments group by instrument order by count ( * ) desc limit value <n>
( having * having ) having | select count ( * ) from instruments where instrument = value <n>
( having group having * having ) having | select count ( distinct instrument ) from instruments as t1 join band as t2 on t1 . bandmateid = t2 . id where t2 . lastname = value <n>
( having * having ) having | select instrument from instruments as t1 join songs as t2 on t1 . songid = t2 . songid where title = value <n>
( having * having , born_state having name born_state having value by having | select instrument from instruments group by instrument order by count ( * ) desc limit value <n>
( having * having ) having , born_state having name born_state having value by having | select type from vocals as t1 join band as t2 on t1 . bandmate = t2 . id where firstname = value group by type order by count ( * ) desc limit value <n>
( having * having ) having | select count ( * ) from instruments where instrument = value <n>
( having group having * having | select count ( distinct label ) from albums <n>
( having * having ) having | select t3 . title from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid where t2 . title = value <n>
( having * having ) having | select instrument from instruments as t1 join songs as t2 on t1 . songid = t2 . songid where title = value <n>
( having * having ) having | select t2 . firstname , t2 . lastname from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid where t3 . title = value <n>
( having * having ) having | select t3 . title from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid where t2 . title = value <n>
( having * having ) having | select instrument from instruments as t1 join songs as t2 on t1 . songid = t2 . songid where title = value <n>
( having * having ) having | select count ( * ) from instruments where instrument = value <n>
( having * having ) having | select t2 . firstname , t2 . lastname from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid where t3 . title = value <n>
( having * having ) having | select instrument from instruments as t1 join songs as t2 on t1 . songid = t2 . songid where title = value <n>
( having * having ) having , born_state having name born_state having value by having | select t2 . lastname from performance as t1 join band as t2 on t1 . bandmate = t2 . id where stageposition = value group by lastname order by count ( * ) desc limit value <n>
( having * having ) having | select t2 . firstname , t2 . lastname from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid where t3 . title = value <n>
( having * having ) having | select instrument from instruments as t1 join songs as t2 on t1 . songid = t2 . songid where title = value <n>
( having * having ) having | select t3 . title from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid where t2 . title = value <n>
( having * having | select count ( * ) from manufacturers <n>
( having * having name born_state having value by having | select name from manufacturers order by revenue desc limit value <n>
( having * having | select avg ( price ) from products <n>
( having * having ) having | select count ( * ) from manufacturers where founder = value <n>
( having * having ) having head having | select count ( * ) from manufacturers where revenue > value or headquarter = value <n>
( having * having ) having | select count ( * ) from manufacturers where founder = value <n>
( having * having ) having head having | select count ( * ) from manufacturers where revenue > value or headquarter = value <n>
( having * having name born_state having value by having | select name from manufacturers order by revenue desc limit value <n>
( having * having name born_state having value by having | select name from manufacturers order by revenue desc limit value <n>
( having * having ) having ( having * having | select name from manufacturers where revenue > ( select avg ( revenue ) from manufacturers ) <n>
( having * having , born_state having | select count ( * ) , t2 . name from products as t1 join manufacturers as t2 on t1 . manufacturer = t2 . code group by t2 . name <n>
( having * having name born_state having value by having | select name from manufacturers order by revenue desc limit value <n>
( having * having , born_state having | select count ( * ) , t2 . name from products as t1 join manufacturers as t2 on t1 . manufacturer = t2 . code group by t2 . name <n>
( having * having ) having ( having * having | select count ( * ) from manufacturers where revenue > ( select avg ( revenue ) from manufacturers ) <n>
( having * having = ( having * having ) having | select name from manufacturers except select t2 . name from products as t1 join manufacturers as t2 on t1 . manufacturer = t2 . code where t1 . name = value <n>
( having * having | select name , price from products <n>
( having * having ) having head having | select name from manufacturers where headquarter = value or headquarter = value <n>
( having * having ) having from having | select * from products where price between value and value <n>
( having * having , born_state having order having | select avg ( price ) , t2 . name from products as t1 join manufacturers as t2 on t1 . manufacturer = t2 . code group by t2 . name having avg ( t1 . price ) > = value <n>
( having * having ) having name born_state having value having | select name , price from products where price > = value order by name desc <n>
( having * having , born_state having | select code , name , min ( price ) from products group by name <n>
( having * having | select avg ( price ) from products <n>
( having * having | select name , price from products <n>
( having * having , born_state having name born_state having value by having | select name from manufacturers group by headquarter order by count ( * ) desc limit value <n>
( having * having name born_state having value by having | select problem_log_id from problem_log order by log_entry_date desc limit value <n>
( having * having ) having | select t1 . problem_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where t2 . staff_last_name = value <n>
( having * having | select problem_log_id , log_entry_description from problem_log <n>
( having * having ) having | select t1 . problem_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where t2 . staff_last_name = value <n>
( having * having , born_state having name born_state having value by having | select t2 . product_name from problems as t1 join product as t2 on t1 . product_id = t2 . product_id group by t2 . product_id order by count ( * ) desc limit value <n>
( having * having ) having | select t1 . problem_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where t2 . staff_last_name = value <n>
( having * having ) having | select t1 . problem_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where t2 . staff_last_name = value <n>
( having * having , born_state having | select t2 . product_name , count ( * ) from problems as t1 join product as t2 on t1 . product_id = t2 . product_id group by t2 . product_name <n>
( having * having ) having from having | select t1 . problem_id from problems as t1 join product as t2 on t1 . product_id = t2 . product_id where t2 . product_name = value and t1 . date_problem_reported > value <n>
( having * having name born_state having | select problem_log_id , problem_id from problem_log order by log_entry_date <n>
( having * having ) having from having | select t1 . problem_id from problems as t1 join product as t2 on t1 . product_id = t2 . product_id where t2 . product_name = value and t1 . date_problem_reported > value <n>
( having * having ) having ( having * having ) having from having | select t1 . problem_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where date_problem_reported < ( select min ( date_problem_reported ) from problems as t3 join staff as t4 on t3 . reported_by_staff_id = t4 . staff_id where t4 . staff_first_name = value and t4 . staff_last_name = value ) <n>
( having * having , born_state having name born_state having value by having | select t2 . product_name from problems as t1 join product as t2 on t1 . product_id = t2 . product_id group by t2 . product_name order by count ( * ) desc limit value <n>
( having * having ) having from having = ( having * having ) having from having | select product_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where t2 . staff_first_name = value and t2 . staff_last_name = value union select product_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where t2 . staff_first_name = value and t2 . staff_last_name = value <n>
( having * having ) having ! ( having * having ) having | select t1 . problem_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where t2 . staff_last_name = value intersect select t1 . problem_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where t2 . staff_last_name = value <n>
( having * having name born_state having | select name from branch order by open_year asc <n>
( having * having ) having | select t2 . name from membership_register_branch as t1 join branch as t2 on t1 . branch_id = t2 . branch_id join member as t3 on t1 . member_id = t3 . member_id where t3 . hometown = value <n>
( having * having , born_state having order having | select open_year from branch group by open_year having count ( * ) > = value <n>
( having * having ) having , born_state having | select city , count ( * ) from branch where open_year > value group by city having count ( * ) > = value <n>
( having * having name born_state having value | select city from branch order by open_year desc limit value <n>
( having * having , born_state having name born_state having value by having | select level from member group by level order by count ( * ) desc limit value <n>
( having * having ) having | select t2 . name from membership_register_branch as t1 join branch as t2 on t1 . branch_id = t2 . branch_id join member as t3 on t1 . member_id = t3 . member_id where t3 . hometown = value <n>
( having * having ) having ( having * having | select name from member where member_id not in ( select member_id from membership_register_branch ) <n>
( having * having name born_state having value | select city from branch order by open_year desc limit value <n>
( having * having ) having ! ( having * having ) having | select t2 . name from membership_register_branch as t1 join branch as t2 on t1 . branch_id = t2 . branch_id join member as t3 on t1 . member_id = t3 . member_id where t3 . hometown = value intersect select t2 . name from membership_register_branch as t1 join branch as t2 on t1 . branch_id = t2 . branch_id join member as t3 on t1 . member_id = t3 . member_id where t3 . hometown = value <n>
( having * having ) having | select t2 . name from membership_register_branch as t1 join branch as t2 on t1 . branch_id = t2 . branch_id join member as t3 on t1 . member_id = t3 . member_id where t3 . hometown = value <n>
( having * having ) having | select t2 . name from membership_register_branch as t1 join branch as t2 on t1 . branch_id = t2 . branch_id join member as t3 on t1 . member_id = t3 . member_id where t3 . hometown = value <n>
( having * having ) having | select t2 . name from membership_register_branch as t1 join branch as t2 on t1 . branch_id = t2 . branch_id join member as t3 on t1 . member_id = t3 . member_id where t3 . hometown = value <n>
( having * having | select count ( * ) from student <n>
( having group having * having | select count ( distinct major ) from student <n>
( having * having ) having | select fname from student where major = value <n>
( having * having ) having | select major from student where major = value <n>
( having * having ) having | select avg ( t3 . age ) from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value <n>
( having * having ) having | select t3 . fname , t3 . lname from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value <n>
( having * having ) having | select major from student where major = value <n>
( having * having ) having | select major from student where major = value <n>
( having * having | select fname , lname from student <n>
( having * having ) having | select t3 . fname , t3 . lname from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value <n>
( having * having ) having | select t3 . lname from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value <n>
( having * having ) having | select fname from student where major = value <n>
( having * having ) having from having | select count ( * ) from student as t1 join voting_record as t2 on t1 . stuid = class_senator_vote where t1 . sex = value and t2 . election_cycle = value <n>
( having * having ) having from having | select t3 . fname , t3 . lname from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value and t3 . major = value <n>
( having * having ) having | select avg ( t3 . age ) from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value <n>
( having * having = ( having * having ) having | select lname from student except select t1 . dorm_name from dorm as t1 join has_amenity as t2 on t1 . dormid = t2 . dormid join dorm_amenity as t3 on t2 . amenid = t3 . amenid where t3 . amenity_name = value <n>
( having * having ) having | select fname from student where major = value <n>
( having * having , born_state having order having | select advisor from student group by advisor having count ( * ) > = value <n>
( having * having , born_state having | select major , count ( * ) from student group by major <n>
( having * having , born_state having name born_state having value by having | select gtype from video_games group by gtype order by count ( * ) desc limit value <n>
( having * having , born_state having name born_state having value by having | select gtype from video_games group by gtype order by count ( * ) desc limit value <n>
( having * having | select count ( * ) from characteristics <n>
( having * having | select count ( * ) from characteristics <n>
( having * having | select product_name , typical_buying_price from products <n>
( having * having | select product_name , typical_buying_price from products <n>
( having * having ) having | select t2 . unit_of_measure from products as t1 join ref_product_categories as t2 on t1 . product_category_code = t2 . product_category_code where t1 . product_name = value <n>
( having * having ) having | select count ( * ) from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id where t3 . characteristic_name = value <n>
( having * having ) having | select t2 . unit_of_measure from products as t1 join ref_product_categories as t2 on t1 . product_category_code = t2 . product_category_code where t1 . product_name = value <n>
( having * having ) having | select t3 . characteristic_name from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id where t1 . product_name = value <n>
( having * having ) having | select t2 . unit_of_measure from products as t1 join ref_product_categories as t2 on t1 . product_category_code = t2 . product_category_code where t1 . product_name = value <n>
( having * having ) having | select product_category_description from ref_product_categories where product_category_code = value <n>
( having * having , born_state having order having | select t1 . product_name from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id group by t3 . characteristic_name having count ( * ) > = value <n>
( having * having ) having | select t2 . unit_of_measure from products as t1 join ref_product_categories as t2 on t1 . product_category_code = t2 . product_category_code where t1 . product_name = value <n>
( having * having ) having | select count ( * ) from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id where t3 . characteristic_name = value <n>
( having * having ) having | select t2 . unit_of_measure from products as t1 join ref_product_categories as t2 on t1 . product_category_code = t2 . product_category_code where t1 . product_name = value <n>
( having * having ) having | select t2 . unit_of_measure from products as t1 join ref_product_categories as t2 on t1 . product_category_code = t2 . product_category_code where t1 . product_name = value <n>
( having * having ) having | select count ( * ) from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id where t3 . characteristic_name = value <n>
( having * having ) having from having | select product_name from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id join ref_colors as t4 on t1 . color_code = t4 . color_code where t4 . color_description = value and t3 . characteristic_name = value <n>
( having * having ) having | select t2 . unit_of_measure from products as t1 join ref_product_categories as t2 on t1 . product_category_code = t2 . product_category_code where t1 . product_name = value <n>
( having * having ) having head having | select count ( * ) from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id join ref_colors as t4 on t1 . color_code = t4 . color_code where t4 . color_description = value or t3 . characteristic_name = value <n>
( having * having ) having | select t2 . unit_of_measure from products as t1 join ref_product_categories as t2 on t1 . product_category_code = t2 . product_category_code where t1 . product_name = value <n>
( having * having ) having | select t2 . unit_of_measure from products as t1 join ref_product_categories as t2 on t1 . product_category_code = t2 . product_category_code where t1 . product_name = value <n>
( having * having ) having | select t2 . unit_of_measure from products as t1 join ref_product_categories as t2 on t1 . product_category_code = t2 . product_category_code where t1 . product_name = value <n>
( having * having ) having from having | select product_name from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id join ref_colors as t4 on t1 . color_code = t4 . color_code where t4 . color_description = value and t3 . characteristic_name = value <n>
( having * having , born_state having order having | select t1 . product_name from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id group by t3 . characteristic_name having count ( * ) > = value <n>
( having * having ) having ( having * having | select product_name from products where product_id not in ( select product_id from products ) <n>
( having * having , born_state having order having | select t1 . product_name from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id group by t3 . characteristic_name having count ( * ) > = value <n>
( having * having name born_state having value by having | select name from stadium order by height desc limit value <n>
( having * having name born_state having | select name from swimmer order by meter_100 asc <n>
( having * having , born_state having name born_state having value by having | select country from stadium group by country order by count ( * ) desc limit value <n>
( having * having ) having | select count ( * ) from stadium where capacity > value <n>
( having * having | select count ( * ) from stadium <n>
( having * having ) having | select name from stadium where country ! = value <n>
( having * having name born_state having value by having | select name from stadium order by height desc limit value <n>
( having * having = ( having * having | select name from stadium except select t1 . name from stadium as t1 join event as t2 on t1 . id = t2 . swimmer_id <n>
( having * having , born_state having name born_state having value by having | select country from stadium group by country order by count ( * ) desc limit value <n>
( having * having name born_state having | select railway from railway order by open_year asc <n>
( having * having | select avg ( builder ) from railway <n>
( having * having name born_state having | select objectnumber from railway order by open_year asc <n>
( having * having , born_state having name born_state having value by having | select builder from railway group by builder order by count ( * ) desc limit value <n>
( having * having , born_state having | select builder , count ( * ) from railway group by builder <n>
( having * having ) having ! ( having * having ) having | select location from railway where years_working > value intersect select location from railway where open_year < value <n>
( having * having | select count ( * ) from customers <n>
( having * having = ( having * having | select customer_name from customers except select t1 . customer_name from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id <n>
( having * having ) having ! ( having * having ) having | select t1 . customer_name from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id join order_items as t3 on t2 . order_id = t3 . order_id join products as t4 on t3 . product_id = t4 . product_id where t4 . product_name = value intersect select t1 . customer_name from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id join order_items as t3 on t2 . order_id = t3 . order_id join products as t4 on t3 . product_id = t4 . product_id where t4 . product_name = value <n>
( having * having ) having ( having * having | select product_price from products where product_id not in ( select product_id from products_in_events ) <n>
( having * having name born_state having value by having | select product_name from products order by product_price desc limit value <n>
( having * having | select fname , lname from student <n>
( having * having ) having | select count ( * ) from student where city_code = value <n>
( having * having ) having from having | select fname , lname from student where age > value and major = value <n>
( having * having | select count ( * ) from student <n>
( having * having | select count ( * ) from student <n>
( having * having , born_state having | select count ( * ) , sum ( student_capacity ) , gender from dorm group by gender <n>
( having * having | select avg ( age ) from student <n>
( having * having = ( having * having | select dorm_name from dorm except select t1 . dorm_name from dorm as t1 join has_amenity as t2 on t1 . dormid = t2 . dormid join dorm_amenity as t3 on t2 . amenid = t3 . amenid join dorm_amenity as t4 on t2 . amenid = t4 . amenid <n>
( having * having ) having | select t3 . amenity_name from dorm as t1 join has_amenity as t2 on t1 . dormid = t2 . dormid join dorm_amenity as t3 on t2 . amenid = t3 . amenid where t1 . dorm_name = value <n>
( having * having ) having head having | select dorm_name , gender from dorm where student_capacity > value or student_capacity < value <n>
( having * having ) having ! ( having * having ) having | select t1 . dorm_name from dorm as t1 join has_amenity as t2 on t1 . dormid = t2 . dormid join dorm_amenity as t3 on t2 . amenid = t3 . amenid where t3 . amenity_name = value intersect select t1 . dorm_name from dorm as t1 join has_amenity as t2 on t1 . dormid = t2 . dormid join dorm_amenity as t3 on t2 . amenid = t3 . amenid where t3 . amenity_name = value <n>
( having * having ) having head having | select dorm_name from dorm where student_capacity > value or student_capacity < value <n>
( having * having name born_state having value by having | select dorm_name from dorm order by student_capacity desc limit value <n>
( having * having , born_state having name born_state having value by having | select city_code from student group by city_code order by count ( * ) desc limit value <n>
( having * having ) having ( having * having | select fname , lname from student where age < ( select avg ( age ) from student ) <n>
( having * having name born_state having | select amenity_name from dorm_amenity order by amenity_name asc <n>
( having * having , born_state having | select count ( * ) , sum ( student_capacity ) , gender from dorm group by gender <n>
( having * having , born_state having | select count ( * ) , sum ( student_capacity ) , gender from dorm group by gender <n>
( having * having , born_state having | select count ( * ) , sum ( student_capacity ) , gender from dorm group by gender <n>
( having * having ) having ( having * having | select fname , lname from student where age < ( select avg ( age ) from student ) <n>
( having * having , born_state having | select avg ( age ) , sex from student group by sex <n>
( having * having , born_state having | select count ( * ) , sum ( student_capacity ) , gender from dorm group by gender <n>
( having * having ) having | select fname , lname from student where sex = value <n>
( having * having ) having | select count ( * ) from student where city_code = value <n>
( having * having ) having | select count ( * ) from student where city_code = value <n>
( having * having name born_state having | select amenity_name from dorm_amenity order by amenity_name asc <n>
( having * having , born_state having name born_state having value by having | select t1 . fname , t1 . lname from student as t1 join lives_in as t2 on t1 . stuid = t2 . stuid group by t1 . stuid order by count ( * ) desc limit value <n>
( having * having name born_state having value by having | select dorm_name from dorm order by student_capacity desc limit value <n>
( having * having ) having | select fname , lname from student where sex = value <n>
( having * having ) having | select t3 . amenity_name from dorm as t1 join has_amenity as t2 on t1 . dormid = t2 . dormid join dorm_amenity as t3 on t2 . amenid = t3 . amenid where t1 . dorm_name = value <n>
( having * having | select count ( * ) from staff <n>
( having * having ) having from having | select product_price from products where product_price between value and value <n>
( having * having name born_state having value by having | select product_name from products order by product_price desc limit value <n>
( having * having name born_state having value by having | select product_name from products order by product_price desc limit value <n>
( having * having ) having ( having * having | select product_price from products where product_id not in ( select product_id from complaints ) <n>
( having * having ) having | select product_price from products where product_price between value <n>
( having * having name born_state having value by having | select product_name from products order by product_price desc limit value <n>
( having * having , born_state having | select complaint_status_code , count ( * ) from complaints group by complaint_type_code <n>
( having * having , born_state having order having | select complaint_status_code from complaints group by complaint_status_code having count ( * ) > = value <n>
( having * having ) having ( having * having | select product_price from products where product_id not in ( select product_id from complaints ) <n>
( having * having name born_state having by having | select t1 . last_name from staff as t1 join complaints as t2 on t1 . staff_id = t2 . staff_id join products as t3 on t2 . product_id = t3 . product_id order by t3 . product_price limit value <n>
( having * having ) having | select product_price from products where product_price between value <n>
( having * having ) having , born_state having | select complaint_status_code , count ( * ) from complaints where complaint_type_code = value group by complaint_status_code <n>
( having * having , born_state having name born_state having by having | select t1 . first_name from staff as t1 join complaints as t2 on t1 . staff_id = t2 . staff_id group by t2 . staff_id order by count ( * ) product_price limit value <n>
( having * having name born_state having | select date , venue from workshop order by venue <n>
( having * having , born_state having | select college , count ( * ) from submission group by college <n>
( having * having | select avg ( scores ) from submission <n>
( having * having , born_state having | select college , count ( * ) from submission group by college <n>
( having * having , born_state having name born_state having value by having | select college from submission group by college order by count ( * ) desc limit value <n>
( having * having , born_state having | select college , count ( * ) from submission group by college <n>
( having * having | select count ( * ) from submission <n>
( having * having , born_state having order having group having | select college from submission group by college having count ( * ) > = value <n>
( having * having = ( having * having | select college from submission except select college from acceptance <n>
( having * having | select lot_details from investors <n>
( having * having | select lot_details from investors <n>
( having * having ) having | select t2 . lot_details from investors as t1 join lots as t2 on t1 . investor_id = t2 . investor_id where t1 . investor_details = value <n>
( having * having ) having head having | select date_of_transaction from transactions where share_count > = value or amount_of_transaction > = value <n>
( having * having | select count ( * ) from investors <n>
( having * having ) having | select t2 . lot_details from investors as t1 join lots as t2 on t1 . investor_id = t2 . investor_id where t1 . investor_details = value <n>
( having * having | select avg ( amount_of_transaction ) from transactions <n>
( having * having , born_state having name born_state having value by having | select t2 . investor_id , t1 . investor_details from investors as t1 join transactions as t2 on t1 . investor_id = t2 . investor_id group by t2 . investor_id order by count ( * ) desc limit value <n>
( having * having ) having | select count ( * ) from investors where investor_id = value <n>
( having * having , born_state having name born_state having value by having | select t2 . investor_id , t1 . investor_details from investors as t1 join transactions as t2 on t1 . investor_id = t2 . investor_id group by t2 . investor_id order by count ( * ) desc limit value <n>
( having * having name born_state having | select lot_details from lots order by investors asc <n>
( having * having | select lot_details from investors <n>
( having * having | select count ( * ) from hotels <n>
( having * having | select name , other_details from staff <n>
( having * having | select name , other_details from staff <n>
( having * having ) having | select other_details from locations where location_name = value <n>
( having * having ) having | select other_details from locations where location_name = value <n>
( having * having ) having | select t2 . name from photos as t1 join tourist_attractions as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id where t1 . name = value <n>
( having * having | select count ( * ) from hotels <n>
( having * having ) having | select t2 . name from photos as t1 join tourist_attractions as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id where t1 . name = value <n>
( having * having ) having | select other_details from locations where location_name = value <n>
( having * having | select name , other_details from staff <n>
( having * having ) having | select t2 . name from photos as t1 join tourist_attractions as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id where t1 . name = value <n>
( having * having ) having | select t2 . star_rating_description from hotels as t1 join ref_hotel_star_ratings as t2 on t1 . star_rating_code = t2 . star_rating_code where t1 . price_range > value <n>
( having * having ) having | select t2 . star_rating_description from hotels as t1 join ref_hotel_star_ratings as t2 on t1 . star_rating_code = t2 . star_rating_code where t1 . price_range > value <n>
( having * having ) having | select other_details from locations where location_name = value <n>
( having * having ) having head having | select t2 . name from locations as t1 join tourist_attractions as t2 on t1 . location_id = t2 . location_id where t1 . address = value or t2 . how_to_get_there = value <n>
( having * having , born_state having | select pets_allowed_yn , avg ( price_range ) from hotels group by pets_allowed_yn <n>
( having * having name born_state having | select name from tourist_attractions order by how_to_get_there asc <n>
( having * having name born_state having value by having | select other_hotel_details from hotels order by price_range desc limit value <n>
( having * having , born_state having name born_state having value by having | select how_to_get_there from tourist_attractions group by how_to_get_there order by count ( * ) desc limit value <n>
( having * having ) having | select other_details from locations where location_name = value <n>
( having * having , born_state having order having | select t1 . name from tourist_attractions as t1 join visits as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id group by t2 . tourist_attraction_id having count ( * ) > = value <n>
( having * having , born_state having name born_state having value by having | select how_to_get_there from tourist_attractions group by how_to_get_there order by count ( * ) desc limit value <n>
( having * having ) having head having | select t2 . name from locations as t1 join tourist_attractions as t2 on t1 . location_id = t2 . location_id where t1 . address = value or t2 . how_to_get_there = value <n>
( having * having ) having | select t2 . name from photos as t1 join tourist_attractions as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id where t1 . name = value <n>
( having * having ) having = ( having * having ) having | select t1 . name from tourist_attractions as t1 join tourist_attraction_features as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id join features as t3 on t2 . feature_id = t3 . feature_id where t3 . feature_details = value except select t1 . name from tourist_attractions as t1 join tourist_attraction_features as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id join features as t3 on t2 . feature_id = t3 . feature_id where t3 . feature_details = value except select t1 . name from tourist_attractions as t1 join tourist_attraction_features as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id join features as t3 on t2 . feature_id = t3 . feature_id where t3 .
( having * having | select count ( * ) from student <n>
( having * having | select resname from restaurant <n>
( having * having name born_state having | select lname from student order by city_code asc <n>
( having * having ) having | select stuid from student where major = value <n>
( having * having , born_state having | select major , count ( * ) from student group by major <n>
( having * having , born_state having name born_state having value by having | select gtype from video_games group by gtype order by count ( * ) desc limit value <n>
( having * having ) having | select stuid from student where major = value <n>
( having * having ) having | select fname from student where major = value <n>
( having * having | select avg ( age ) from student <n>
( having * having | select count ( * ) from student <n>
( having * having ) having | select stuid from student where major = value <n>
( having * having | select fname , lname from student <n>
( having * having ) having | select count ( * ) from student where advisor = value <n>
( having * having , born_state having | select count ( * ) , sum ( student_capacity ) , gender from dorm group by major <n>
( having * having ) having | select stuid from student where major = value <n>
( having * having , born_state having name born_state having value by having | select gtype from video_games group by gtype order by count ( * ) desc limit value <n>
( having * having ) having | select stuid from student where major = value <n>
( having * having = ( having * having | select stuid from student except select stuid from plays_games <n>
( having * having ) having | select stuid from student where major = value <n>
( having * having | select count ( * ) from student <n>
( having * having = ( having * having | select stuid from student except select stuid from plays_games <n>
( having * having | select count ( * ) from student <n>
( having * having , born_state having name born_state having value by having | select gtype from video_games group by gtype order by count ( * ) desc limit value <n>
( having * having , born_state having order having | select advisor from student group by advisor having count ( * ) > = value <n>
( having * having ) having head having | select t3 . fname , t3 . lname from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value or t3 . city_code = value <n>
( having * having ) having ! ( having * having ) having | select lname from student where major = value intersect select stuid from sportsinfo where onscholarship = value <n>
( having * having | select customer_name , customer_id from customers <n>
( having * having , born_state having | select t1 . product_name , sum ( t2 . order_quantity ) from products as t1 join order_items as t2 on t1 . product_id = t2 . product_id group by t1 . product_id <n>
( having * having ) having from having | select customer_name from customers where customer_id between value and value <n>
( having * having , born_state having name born_state having value by having | select payment_method from customers group by payment_method order by count ( * ) desc limit value <n>
( having * having | select count ( * ) from customers <n>
( having * having ) having | select customer_name from customers where payment_method = value <n>
( having * having ) having head having | select customer_name from customers where payment_method = value or country = value <n>
( having * having ) having | select count ( * ) from customers as t1 join customer_addresses as t2 on t1 . customer_id = t2 . customer_id where t1 . customer_name = value <n>
( having * having ) having | select customer_name from customers where payment_method = value <n>
( having * having , born_state having name born_state having value by having | select payment_method from customers group by payment_method order by count ( * ) desc limit value <n>
( having * having ) having | select customer_name from customers where payment_method = value <n>
( having * having , born_state having order having | select channel_code from customer_contact_channels group by channel_code having count ( * ) > = value <n>
( having * having ) having ( having * having | select customer_name from customers where customer_id not in ( select customer_id from products_in_events ) <n>
( having * having ) having ( having * having ) having | select customer_name from customers where customer_id not in ( select customer_id from customers where payment_method = value ) <n>
( having * having name born_state having value by having | select product_name from products order by product_price desc limit value <n>
( having * having ) having | select t3 . address_content from customers as t1 join customer_addresses as t2 on t1 . customer_id = t2 . customer_id join addresses as t3 on t2 . address_id = t3 . address_id where t1 . customer_name = value <n>
( having * having , born_state having name born_state having value by having | select t1 . customer_name from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id join order_items as t3 on t2 . order_id = t3 . order_id group by t1 . customer_name order by count ( * ) desc limit value <n>
( having * having ) having | select count ( * ) from customers as t1 join customer_addresses as t2 on t1 . customer_id = t2 . customer_id where t1 . customer_name = value <n>
( having * having ) having | select customer_name from customers where payment_method = value <n>
( having * having ) having | select count ( * ) from customers as t1 join customer_addresses as t2 on t1 . customer_id = t2 . customer_id where t1 . customer_name = value <n>
( having * having ) having | select count ( * ) from customers as t1 join customer_addresses as t2 on t1 . customer_id = t2 . customer_id where t1 . customer_name = value <n>
( having * having ) having | select customer_name from customers where payment_method = value <n>
( having * having , born_state having name born_state having value by having | select payment_method from customers group by payment_method order by count ( * ) desc limit value <n>
( having * having ) having head having | select customer_name from customers where payment_method = value or country = value <n>
( having * having = ( having * having | select customer_name from customers except select t1 . customer_name from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id join order_items as t3 on t2 . order_id = t3 . order_id join products as t4 on t3 . product_id = t4 . product_id where t4 . product_details = value <n>
( having * having = ( having * having | select customer_name from customers except select t1 . customer_name from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id join order_items as t3 on t2 . order_id = t3 . order_id join products as t4 on t3 . product_id = t4 . product_id where t4 . product_details = value <n>
( having group having * having | select count ( distinct artist_id ) from volume <n>
( having * having | select date_of_ceremony , result from music_festival <n>
( having * having ) having | select t2 . song from music_festival as t1 join volume as t2 on t1 . volume = t2 . volume_id where t1 . result = value <n>
( having * having | select date_of_ceremony , result from music_festival <n>
( having * having ) having | select t2 . song from music_festival as t1 join volume as t2 on t1 . volume = t2 . volume_id where t1 . result = value <n>
( having * having ) having | select category from music_festival where result = value <n>
( having group having * having | select count ( distinct artist_id ) from volume <n>
( having * having , born_state having order having | select category from music_festival group by category having count ( * ) > = value <n>
( having * having ) having | select category from music_festival where result = value <n>
( having * having ) having | select avg ( age ) from artist where country = value <n>
( having * having , born_state having order having | select category from music_festival group by category having count ( * ) > = value <n>
( having * having name born_state having | select song from volume order by weeks_on_top asc <n>
( having * having , born_state having name born_state having value by having | select result from music_festival group by result order by count ( * ) desc limit value <n>
( having * having ) having | select t2 . song from music_festival as t1 join volume as t2 on t1 . volume = t2 . volume_id where t1 . result = value <n>
( having * having = ( having * having | select famous_title from artist except select t2 . name from music_festival as t1 join volume as t2 on t1 . volume = t2 . volume_id <n>
( having * having ) having from having | select date_of_ceremony from music_festival where category = value and result = value <n>
( having * having name born_state having value by having | select song from volume order by weeks_on_top desc limit value <n>
( having * having , born_state having name born_state having value by having | select result from music_festival group by result order by count ( * ) desc limit value <n>
( having * having | select count ( * ) from roller_coaster <n>
( having * having ) having | select t2 . name from roller_coaster as t1 join roller_coaster as t2 on t1 . country_id = t2 . country_id where t1 . name = value <n>
( having * having | select avg ( height ) , avg ( height ) from roller_coaster <n>
( having * having name born_state having value by having | select speed from roller_coaster order by length desc limit value <n>
( having * having name born_state having value by having | select speed from roller_coaster order by length desc limit value <n>
( having * having ) having ! ( having * having ) having | select t2 . name from roller_coaster as t1 join roller_coaster as t2 on t1 . country_id = t2 . country_id where t1 . name = value intersect select t2 . name from country as t1 join roller_coaster as t2 on t1 . country_id = t2 . country_id where t1 . name = value <n>
( having * having , born_state having | select count ( * ) , rank from captain group by type <n>
( having * having ) having | select name from captain where rank = value <n>
( having * having | select name , class , rank from captain <n>
( having * having , born_state having order having | select t1 . name from ship as t1 join captain as t2 on t1 . ship_id = t2 . ship_id group by t2 . ship_id having count ( * ) > = value <n>
( having * having | select avg ( age ) from ship <n>
( having * having ) having ! ( having * having ) having | select type from ship where flag = value intersect select type from ship where flag = value <n>
( having * having name born_state having by having | select name from captain order by age asc limit value <n>
( having * having name born_state having value by having | select name from captain order by age desc limit value <n>
( having * having , born_state having | select count ( * ) , rank from captain group by type <n>
( having * having name born_state having | select name from ship order by built_year , rank asc <n>
( having * having , born_state having name born_state having value by having | select rank from captain group by rank order by count ( * ) desc limit value <n>
( having * having , born_state having order having | select t1 . name from ship as t1 join captain as t2 on t1 . ship_id = t2 . ship_id group by t2 . ship_id having count ( * ) > = value <n>
( having * having name born_state having value by having | select name from captain order by age desc limit value <n>
( having * having ) having ! ( having * having ) having | select t1 . name from ship as t1 join captain as t2 on t1 . ship_id = t2 . ship_id where t2 . rank = value intersect select t1 . name from ship as t1 join captain as t2 on t1 . ship_id = t2 . ship_id where t2 . rank = value <n>
( having * having name born_state having value by having | select gdp from city order by regional_population desc limit value <n>
( having * having ) having | select t2 . jan from city as t1 join temperature as t2 on t1 . city_id = t2 . city_id where t1 . city = value <n>
( having * having ) having | select t2 . jan from city as t1 join temperature as t2 on t1 . city_id = t2 . city_id where t1 . city = value <n>
( having * having ) having | select t2 . jan from city as t1 join temperature as t2 on t1 . city_id = t2 . city_id where t1 . city = value <n>
( having * having ) having | select t2 . jan from city as t1 join temperature as t2 on t1 . city_id = t2 . city_id where t1 . city = value <n>
( having * having name born_state having value by having | select gdp from city order by regional_population desc limit value <n>
( having * having ) having head having | select t1 . city from city as t1 join temperature as t2 on t1 . city_id = t2 . city_id where t2 . mar < t2 . jul or t2 . mar < t2 . jul or t2 . mar < t2 . jul <n>
( having * having ) having = ( having * having | select t1 . city from city as t1 join temperature as t2 on t1 . city_id = t2 . city_id where t2 . mar < t2 . dec except select t3 . city from city as t3 join hosting_city as t4 on t3 . city_id = t4 . host_city join city as t4 on t3 . city_id = t4 . host_city <n>
( having * having | select count ( * ) from temperature <n>
( having * having ) having head having | select t1 . city from city as t1 join temperature as t2 on t1 . city_id = t2 . city_id where t2 . mar < t2 . jul or t2 . mar < t2 . jul or t2 . mar < t2 . jul <n>
( having * having name born_state having value by having | select gdp from city order by regional_population desc limit value <n>
( having * having ) having | select t2 . jan from city as t1 join temperature as t2 on t1 . city_id = t2 . city_id where t1 . city = value <n>
( having * having name born_state having | select individual_first_name , individual_middle_name , individual_last_name from individuals order by individual_last_name <n>
( having * having name born_state having value by having | select organization_name from organizations order by date_formed desc limit value <n>
( having * having ) having ( having * having name born_state having by having | select t1 . individual_last_name from organizations as t1 join organization_contact_individuals as t2 on t1 . organization_id = t2 . organization_id join individuals as t3 on t2 . individual_id = t3 . individual_id where t1 . uk_vat_number = ( select max ( uk_vat_number ) from organizations ) order by t2 . date_contact_to asc limit value <n>
( having * having name born_state having | select individual_first_name , individual_middle_name , individual_last_name from individuals order by individual_last_name <n>
( having * having name born_state having value by having | select organization_name from organizations order by date_formed desc limit value <n>
( having * having | select count ( * ) from services <n>
( having * having = ( having * having | select service_name from services except select t1 . service_name from services as t1 join party_services as t2 on t1 . customer_id = t2 . organization_id <n>
( having * having | select count ( * ) from services <n>
( having * having ) having | select t3 . individual_last_name from organizations as t1 join organization_contact_individuals as t2 on t1 . organization_id = t2 . organization_id join individuals as t3 on t2 . individual_id = t3 . individual_id where t1 . organization_name = value <n>
( having group having * having | select count ( distinct payment_method_code ) from parties <n>
( having * having ) having | select organization_name from organizations where line_1_number_building like value <n>
( having * having , born_state having name born_state having value by having | select t1 . organization_name from organizations as t1 join organization_contact_individuals as t2 on t1 . organization_id = t2 . organization_id group by t1 . organization_name order by count ( * ) desc limit value <n>
( having * having | select name from driver <n>
( having * having , born_state having name born_state having value by having | select t2 . party from school_bus as t1 join driver as t2 on t1 . driver_id = t2 . driver_id group by t1 . driver_id order by count ( * ) desc limit value <n>
( having * having ) having ( having * having | select school , type from school where school_id not in ( select school_id from school_bus ) <n>
( having * having ) having | select t2 . name from school_bus as t1 join driver as t2 on t1 . driver_id = t2 . driver_id where t1 . type = value <n>
( having * having ) having head having | select count ( * ) from driver where driver_id = value or driver_id = value <n>
( having * having ) having | select count ( * ) from flight where pilot = value <n>
( having * having ) having | select count ( * ) from flight where pilot = value <n>
( having * having ) having ( having * having | select count ( * ) from airport where id not in ( select airport_id from flight ) <n>
( having * having ) having head having | select name from airport where country = value or country = value <n>
( having * having ) having ! ( having * having ) having | select t1 . name from operate_company as t1 join flight as t2 on t1 . id = t2 . company_id join airport as t3 on t2 . airport_id = t3 . id where t3 . name = value intersect select t1 . name from operate_company as t1 join flight as t2 on t1 . id = t2 . company_id join airport as t3 on t2 . airport_id = t3 . id where t3 . name = value <n>
( having * having , born_state having order having | select t1 . id , t1 . name from operate_company as t1 join flight as t2 on t1 . id = t2 . company_id group by t1 . id having count ( * ) > = value <n>
( having * having | select count ( * ) from documents <n>
( having * having | select count ( * ) from documents <n>
( having * having | select statement_id , statement_details from statements <n>
( having * having , born_state having | select role_code , count ( * ) from employees group by role_code <n>
( having * having | select statement_id , statement_details from statements <n>
( having * having | select document_name , document_name from documents <n>
( having * having ) having | select document_name from documents where document_id = value <n>
( having * having ) having | select document_name from documents where document_id = value <n>
( having * having , born_state having name born_state having by having | select project_id from documents group by project_id order by count ( * ) asc limit value <n>
( having * having , born_state having order having | select document_type_code from documents group by document_type_code having count ( * ) > = value <n>
( having * having , born_state having name born_state having value by having | select statement_id , count ( documents.document_id ) from ref_shipping_agents join documents on documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code group by ref_shipping_agents.shipping_agent_code order by count ( documents.document_id ) desc limit value <n>
( having * having ) having | select document_name from documents where document_id = value <n>
( having * having | select document_name , document_name from documents <n>
( having * having | select statement_id , statement_details from statements <n>
( having * having | select statement_id , statement_details from statements <n>
( having * having , born_state having order having | select document_type_code from documents group by document_type_code having count ( * ) > = value <n>
( having * having | select count ( * ) from documents <n>
( having * having ) having | select document_type_description from ref_document_types where document_type_name = value <n>
( having * having | select count ( * ) from documents <n>
( having * having | select statement_id , statement_details from statements <n>
( having * having , born_state having | select role_code , count ( * ) from employees group by role_code <n>
( having * having , born_state having name born_state having value by having | select statement_id , count ( documents.document_id ) from ref_shipping_agents join documents on documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code group by ref_shipping_agents.shipping_agent_code order by count ( documents.document_id ) desc limit value <n>
( having * having ) having | select document_type_description from ref_document_types where document_type_name = value <n>
( having * having = ( having * having | select project_id from documents except select t1 . project_details from projects as t1 join documents as t2 on t1 . project_id = t2 . project_id <n>
( having * having ) having ! ( having * having ) having | select document_id from documents where document_status_code = value intersect select document_id from documents join ref_shipping_agents on documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code where documents.document_id = value <n>
( having * having | select count ( * ) from projects <n>
( having group having * having | select count ( distinct hours ) from projects <n>
( having group having * having | select count ( distinct hours ) from projects <n>
( having * having name born_state having value | select name from assignedto order by hours desc <n>
( having * having , born_state having name born_state having value by having | select t2 . name from assignedto as t1 join projects as t2 on t1 . project = t2 . code group by t2 . name order by count ( * ) desc limit value <n>
( having * having ) having ( having * having | select name from projects where hours > ( select avg ( hours ) from projects ) <n>
( having * having ) having ! ( having * having ) having | select t2 . name from assignedto as t1 join projects as t2 on t1 . project = t2 . code join scientists as t3 on t1 . scientist = t3 . ssn where t3 . name = value intersect select t3 . name from assignedto as t1 join projects as t2 on t1 . project = t2 . code join scientists as t3 on t1 . scientist = t3 . ssn where t2 . name = value <n>
( having * having name born_state having | select name from projects order by name asc <n>
( having * having , born_state having | select count ( * ) , t1 . name from projects as t1 join assignedto as t2 on t1 . code = t2 . project group by t1 . name <n>
( having * having , born_state having | select count ( * ) , t1 . name from projects as t1 join assignedto as t2 on t1 . code = t2 . project group by t1 . name <n>
( having * having | select t3 . ssn , t2 . hours from assignedto as t1 join projects as t2 on t1 . project = t2 . code join scientists as t3 on t1 . scientist = t3 . ssn <n>
( having * having ) having ( having * having | select name from projects where hours > ( select avg ( hours ) from projects ) <n>
( having * having ) having ( having * having | select count ( * ) from projects where hours > ( select avg ( hours ) from projects ) <n>
( having * having name born_state having | select name from scientists order by name asc <n>
( having * having name born_state having value by having | select t2 . name from assignedto as t1 join projects as t2 on t1 . project = t2 . code join scientists as t3 on t1 . scientist = t3 . ssn order by t3 . hours desc limit value <n>
( having * having name born_state having value by having | select winery from wine order by score desc limit value <n>
( having * having | select area , county from appellations <n>
( having * having | select name , score from wine <n>
( having * having ) having | select t2 . name from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t1 . county = value <n>
( having * having ) having | select t2 . name from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t1 . county = value <n>
( having * having ) having | select t2 . name from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t1 . county = value <n>
( having * having ) having | select count ( * ) from appellations where county = value <n>
( having * having ) having | select t2 . name from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t1 . county = value <n>
( having * having ) having | select t2 . name from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t1 . county = value <n>
( having * having ) having from having | select t2 . name from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t1 . county = value and t2 . price > value <n>
( having * having | select area , county from appellations <n>
( having * having , born_state having | select avg ( price ) , year from wine group by year <n>
( having * having name born_state having | select name from wine order by name asc <n>
( having * having ) having ( having * having | select avg ( price ) from wine where appelation not in ( select appelation from appellations ) <n>
( having * having name born_state having value by having | select winery from wine order by score desc limit value <n>
( having * having ) having from having | select t2 . name from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t1 . county = value and t2 . price > value <n>
( having * having ) having | select t2 . name from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t1 . county = value <n>
( having * having | select area , county from appellations <n>
( having * having , born_state having order having | select winery from wine group by winery having count ( * ) > = value <n>
( having * having ) having | select t2 . name from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t1 . county = value <n>
( having * having = ( having * having ) having | select name from wine except select t2 . name from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t1 . county = value <n>
( having * having ) having from having | select t2 . name from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t1 . county = value and t2 . price > value <n>
( having * having ) having ( having * having ) having | select grape , appelation from wine where score > ( select avg ( price ) from wine where appelation = value ) <n>
( having * having ) having | select avg ( t2 . price ) from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t1 . county = value <n>
( having * having | select count ( * ) from train <n>
( having * having name born_state having value by having | select location from station order by location desc limit value <n>
( having * having , born_state having order having | select location from station group by location having count ( * ) > = value <n>
( having * having | select name , location from station <n>
( having * having , born_state having | select location , count ( * ) from station group by location <n>
( having * having , born_state having order having | select location from station group by location having count ( * ) > = value <n>
( having * having ) having ! ( having * having ) having | select location from station where location = value intersect select location from station where location = value <n>
( having * having | select t2 . first_name , t2 . last_name from addresses as t1 join staff as t2 on t1 . address_id = t2 . address_id <n>
( having * having ) having | select t2 . country from customers as t1 join addresses as t2 on t1 . customer_address_id = t2 . address_id where t1 . first_name = value <n>
( having * having | select first_name , last_name from customers <n>
( having * having ) having | select t2 . country from customers as t1 join addresses as t2 on t1 . customer_address_id = t2 . address_id where t1 . first_name = value <n>
( having * having ) having | select t2 . first_name , t2 . last_name from addresses as t1 join staff as t2 on t1 . address_id = t2 . staff_address_id where t1 . city = value <n>
( having * having ) having | select t2 . country from customers as t1 join addresses as t2 on t1 . customer_address_id = t2 . address_id where t1 . first_name = value <n>
( having * having ) having | select t2 . country from customers as t1 join addresses as t2 on t1 . customer_address_id = t2 . address_id where t1 . first_name = value <n>
( having * having ) having | select t2 . first_name , t2 . last_name from addresses as t1 join staff as t2 on t1 . address_id = t2 . staff_address_id where t1 . city = value <n>
( having * having ) having | select t2 . country from customers as t1 join addresses as t2 on t1 . customer_address_id = t2 . address_id where t1 . first_name = value <n>
( having * having ) having | select t2 . first_name , t2 . last_name from addresses as t1 join staff as t2 on t1 . address_id = t2 . staff_address_id where t1 . city = value <n>
( having * having ) having from having | select t2 . country from customers as t1 join addresses as t2 on t1 . customer_address_id = t2 . address_id where t1 . first_name = value and t1 . last_name = value <n>
( having * having | select first_name , last_name from customers <n>
( having * having ) having | select t2 . country from customers as t1 join addresses as t2 on t1 . customer_address_id = t2 . address_id where t1 . first_name = value <n>
( having * having ) having | select t2 . country from customers as t1 join addresses as t2 on t1 . customer_address_id = t2 . address_id where t1 . first_name = value <n>
( having * having ) having | select t2 . first_name , t2 . last_name from addresses as t1 join staff as t2 on t1 . address_id = t2 . staff_address_id where t1 . city = value <n>
( having * having ) having | select count ( * ) from staff where first_name = value <n>
( having * having ) having from having | select count ( * ) from lessons as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t2 . first_name = value and t2 . last_name = value <n>
( having * having | select first_name , last_name from customers <n>
( having * having ) having | select t2 . first_name , t2 . last_name from addresses as t1 join staff as t2 on t1 . address_id = t2 . staff_address_id where t1 . city = value <n>
( having * having ) having from having | select t2 . first_name , t2 . last_name from staff as t1 join staff as t2 on t1 . staff_id = t2 . staff_id where t1 . first_name = value and t1 . last_name = value <n>
( having * having , born_state having name born_state having value by having | select t2 . city from customers as t1 join addresses as t2 on t1 . customer_address_id = t2 . address_id group by t2 . city order by count ( * ) desc limit value <n>
( having * having ) having ( having * having | select count ( * ) from customers where customer_id not in ( select customer_id from customer_payments ) <n>
( having * having , born_state having | select t2 . product_name , count ( * ) from customer_payments as t1 join customers as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id <n>
( having * having | select count ( * ) from staff <n>
( having * having ) having | select count ( * ) from staff where first_name = value <n>
( having * having ) having from having | select t2 . first_name , t2 . last_name from staff as t1 join staff as t2 on t1 . staff_id = t2 . staff_id where t1 . first_name = value and t1 . last_name = value <n>
( having * having ) having | select t2 . first_name , t2 . last_name from addresses as t1 join staff as t2 on t1 . address_id = t2 . staff_address_id where t1 . city = value <n>
( having * having = ( having * having | select first_name from staff except select t2 . first_name from lessons as t1 join staff as t2 on t1 . staff_id = t2 . staff_id <n>
( having * having | select count ( * ) from activity <n>
( having * having ) having | select facid from faculty where sex = value <n>
( having * having ) having from having | select fname , lname from faculty where fname = value and lname = value <n>
( having * having ) having | select facid from faculty where sex = value <n>
( having * having ) having from having | select t3 . activity_name from faculty as t1 join faculty_participates_in as t2 on t1 . facid = t2 . facid join activity as t3 on t3 . actid = t2 . actid where t1 . fname = value and t3 . lname = value <n>
( having * having | select fname , lname from faculty <n>
( having * having , born_state having | select rank , count ( * ) from faculty group by rank <n>
( having * having , born_state having order having | select t1 . facid from faculty as t1 join student as t2 on t1 . facid = t2 . advisor group by t1 . facid having count ( * ) > = value <n>
( having * having ) having from having | select count ( * ) from faculty where rank = value and building = value <n>
( having * having name born_state having value by having | select facid from faculty order by rank desc limit value <n>
( having * having ) having from having | select fname , lname from faculty where fname = value and lname = value <n>
( having * having ) having from having | select fname , lname from faculty where fname = value and lname = value <n>
( having * having , born_state having | select rank , count ( * ) from faculty group by rank <n>
( having * having , born_state having name born_state having value by having | select t1 . fname , t1 . lname from faculty as t1 join faculty_participates_in as t2 on t1 . facid = t2 . facid group by t1 . facid order by count ( * ) desc limit value <n>
( having * having = ( having * having | select facid from faculty except select facid from faculty_participates_in <n>
( having * having | select rank , lname from faculty <n>
( having * having ) having | select count ( * ) from faculty where rank = value <n>
( having * having ) having from having | select t3 . activity_name from faculty as t1 join faculty_participates_in as t2 on t1 . facid = t2 . facid join activity as t3 on t3 . actid = t2 . actid where t1 . fname = value and t3 . lname = value <n>
( having * having ) having from having | select count ( * ) from faculty where rank = value and building = value <n>
( having * having , born_state having | select t1 . fname , t1 . lname , count ( * ) from faculty as t1 join student as t2 on t1 . facid = t2 . advisor group by t1 . facid <n>
( having * having , born_state having name born_state having value by having | select t1 . fname , t1 . lname from faculty as t1 join faculty_participates_in as t2 on t1 . facid = t2 . facid group by t1 . facid order by count ( * ) desc limit value <n>
( having * having ) having , born_state having name born_state having value by having | select t1 . activity_name from activity as t1 join participates_in as t2 on t1 . actid = t2 . actid where t2 . activity_name = value group by t1 . actid order by count ( * ) desc limit value <n>
( having * having ) having from having | select t3 . activity_name from faculty as t1 join faculty_participates_in as t2 on t1 . facid = t2 . facid join activity as t3 on t3 . actid = t2 . actid where t1 . fname = value and t3 . lname = value <n>
( having * having , born_state having name born_state having value by having | select building from faculty group by building order by count ( * ) desc limit value <n>
( having * having ) having head having | select t1 . fname , t1 . lname from faculty as t1 join faculty_participates_in as t2 on t1 . facid = t2 . facid join activity as t3 on t3 . actid = t2 . actid where t3 . activity_name = value or t3 . activity_name = value <n>
( having * having ) having from having | select fname , lname from faculty where fname = value and lname = value <n>
( having * having ) having | select name from airports where name like value <n>
( having * having ) having | select name from airports where name like value <n>
( having * having ) having | select count ( * ) from routes as t1 join airports as t2 on t1 . dst_apid = t2 . apid join airlines as t3 on t1 . alid = t3 . alid where t2 . country = value <n>
( having * having ) having head having | select name from airports where country = value or country = value <n>
( having * having ) having | select name from airports where name like value <n>
( having * having name born_state having value by having | select name from airlines order by height desc limit value <n>
( having group having * having | select count ( distinct country ) from airlines <n>
( having * having | select count ( * ) from airlines <n>
( having * having name born_state having value by having | select name from airlines order by height desc limit value <n>
( having * having , born_state having name born_state having value by having | select country from airlines group by country order by count ( * ) desc limit value <n>
( having * having name born_state having value by having | select name from airlines order by height desc limit value <n>
( having group having * having | select count ( distinct country ) from airlines <n>
( having * having ) having , born_state having name born_state having value by having | select country from airlines where active = value group by country order by count ( * ) desc limit value <n>
( having * having name born_state having value by having | select count ( * ) from airlines order by elevation desc limit value <n>
( having * having ) having ( having * having ) having | select count ( * ) from routes where dst_apid in ( select apid from routes where country = value ) <n>
( having * having , born_state having order having | select city from airports group by city having count ( * ) > value <n>
( having * having , born_state having order having | select city from airports group by city having count ( * ) > value <n>
( having * having , born_state having | select count ( * ) , t1 . name from airports as t1 join routes as t2 on t1 . apid = t2 . src_apid group by t1 . name <n>
( having * having , born_state having | select count ( * ) , t1 . name from airports as t1 join routes as t2 on t1 . apid = t2 . src_apid group by t1 . name <n>
( having * having , born_state having order having | select city from airports group by city having count ( * ) > value <n>
( having * having ) having | select count ( * ) from routes as t1 join airports as t2 on t1 . dst_apid = t2 . apid join airlines as t3 on t1 . alid = t3 . alid where t2 . country = value <n>
( having * having ) having | select count ( * ) from routes as t1 join airports as t2 on t1 . dst_apid = t2 . apid join airlines as t3 on t1 . alid = t3 . alid where t2 . country = value <n>
( having * having ) having | select count ( * ) from routes as t1 join airports as t2 on t1 . dst_apid = t2 . apid join airlines as t3 on t1 . alid = t3 . alid where t2 . country = value <n>
( having * having , born_state having name born_state having value by having | select country from airlines group by country order by count ( * ) desc limit value <n>
( having * having ) having , born_state having name born_state having value by having | select country from airlines where active = value group by country order by count ( * ) desc limit value <n>
( having * having name born_state having value by having | select order_id from orders order by date_order_placed desc limit value <n>
( having * having ) having | select order_id from shipments where shipment_date > value <n>
( having * having ) having | select t1 . date_order_placed from orders as t1 join order_items as t2 on t1 . order_id = t2 . order_id where t2 . date_order_placed > value <n>
( having * having ) having | select order_id from shipments where shipment_date > value <n>
( having * having , born_state having name born_state having value by having | select t2 . invoice_number , t2 . invoice_date from financial_transactions as t1 join invoices as t2 on t1 . invoice_number = t2 . invoice_number group by t1 . invoice_number order by count ( * ) desc limit value <n>
( having * having ) having | select order_id from shipments where shipment_date > value <n>
( having * having ) having from having | select t1 . customer_name from customers as t1 join orders as t2 on t1 . customer_id = t2 . customer_id where t2 . date_order_placed > = value and t2 . date_order_placed < = value <n>
( having * having ) having ! ( having * having ) having | select t1 . customer_id from customers as t1 join orders as t2 on t1 . customer_id = t2 . customer_id where t2 . order_status = value intersect select t1 . customer_id from customers as t1 join orders as t2 on t1 . customer_id = t2 . customer_id where t2 . order_status = value group by t2 . customer_id <n>
( having * having ) having | select order_id from shipments where shipment_date > value <n>
( having * having ) having | select order_id from shipments where shipment_date > value <n>
( having * having | select t1 . order_id , t2 . organization_details from order_items as t1 join products as t2 on t1 . order_id = t2 . order_id <n>
( having * having , born_state having name born_state having value by having | select t2 . invoice_number , t2 . invoice_date from financial_transactions as t1 join invoices as t2 on t1 . invoice_number = t2 . invoice_number group by t1 . invoice_number order by count ( * ) desc limit value <n>
( having * having name born_state having | select customer_id , customer_name from customers order by customer_id asc <n>
( having * having , born_state having name born_state having value by having | select t2 . invoice_number , t2 . invoice_date from financial_transactions as t1 join invoices as t2 on t1 . invoice_number = t2 . invoice_number group by t1 . invoice_number order by count ( * ) desc limit value <n>
( having * having ) having head having | select invoice_number from invoices where invoice_date < value or invoice_date > value <n>
( having * having ) having head having | select invoice_number from invoices where invoice_date < value or invoice_date > value <n>
( having * having , born_state having order having | select t1 . customer_id , t2 . customer_first_name , t2 . customer_last_name from customers_cards as t1 join customers as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id having count ( * ) > = value <n>
( having * having ) having | select t1 . date_order_placed from orders as t1 join order_items as t2 on t1 . order_id = t2 . order_id where t2 . date_order_placed > value <n>
( having * having name born_state having | select name from mill order by name asc <n>
( having * having ) having | select name from mill where location ! = value <n>
( having * having , born_state having order having | select t1 . id , t1 . name from architect as t1 join mill as t2 on t1 . id = t2 . architect_id group by t1 . id having count ( * ) > = value <n>
( having * having ) having head having | select count ( * ) from architect where id like value or height < value <n>
( having * having , born_state having name born_state having value by having | select t1 . id , t1 . name from architect as t1 join mill as t2 on t1 . id = t2 . architect_id group by t1 . id order by count ( * ) desc limit value <n>
( having * having | select count ( * ) from book_club <n>
( having * having | select book_title , location from book_club <n>
( having * having name born_state having value by having | select title , director from movie order by budget_million desc limit value <n>
( having * having , born_state having name born_state having value by having | select publisher from book_club group by publisher order by count ( * ) desc limit value <n>
( having * having ) having | select book_title , author_or_editor from book_club where year > value <n>
( having * having ) having ! ( having * having ) having | select director from movie where year = value intersect select director from movie where year = value <n>
( having * having name born_state having | select title from movie order by budget_million asc <n>
( having * having ) having head having | select director from movie where year = value or year = value <n>
( having * having ) having ! ( having * having ) having | select publisher from book_club where year = value intersect select publisher from book_club where year = value <n>
( having * having ) having | select avg ( budget_million ) , max ( budget_million ) , min ( budget_million ) from movie where year > value and year < = value <n>
( having * having ) having | select book_title , author_or_editor from book_club where year > value <n>
( having * having ) having | select t2 . company_name from movie as t1 join culture_company as t2 on t1 . movie_id = t2 . movie_id where t1 . year = value <n>
