select avg ( order ) from department <n>
select distinct t2 . name from department_id as t1 join department as t2 on t1 . department_id = t2 . department_id where t1 . department_id = value <n>
select t1 . name , count ( * ) from t2 . name group by t1 . name <n>
select born_state from head group by born_state order by count ( * ) desc limit value <n>
select count ( * ) from farm <n>
select avg ( <n>
select theme from farm_competition order by year desc <n>
select max ( cows ) , min ( cows ) from farm <n>
select count ( distinct status ) from status <n>
select official_name , status from city order by population desc limit value <n>
select t1 . official_name from city as t1 join farm_competition as t2 on t1 . city_id = t2 . host_city_id group by t2 . host_city_id having count ( * ) > value <n>
select t1 . status from city as t1 join farm_competition as t2 on t1 . city_id = t2 . host_city_id group by t1 . city_id order by count ( * ) desc limit value <n>
select status , avg ( population ) from city group by status <n>
select count ( * ) from city <n>
select official_name from city where city_id not in ( select host_city_id from farm_competition ) <n>
select official_name from city where population > value or population < value <n>
select t3 . course_name from students as t1 join student_course_registrations as t2 on t1 . student_id = t2 . student_id join courses as t3 on t2 . course_id = t3 . course_id group by t2 . course_id order by count ( * ) desc limit value <n>
select student_id from student_course_attendance where course_id = value order by date_of_attendance desc limit value <n>
select student_id from student_course_attendance where course_id not in ( select course_id from student_course_attendance ) <n>
select student_id , course_id from student_course_attendance where course_name = value <n>
select count ( * ) from courses as t1 join student_course_attendance as t2 on t1 . course_id = t2 . course_id where t2 . student_id = value <n>
select candidate_id from candidate_assessments where candidate_id = value <n>
select course_id from student_course_registrations group by student_id order by count ( * ) desc limit value <n>
select student_id , count ( * ) from student_course_attendance group by student_id <n>
select candidate_id from candidate_assessments where candidate_id = value <n>
select t3 . cell_mobile_number from candidates as t1 join candidate_assessments as t2 on t1 . candidate_id = t2 . candidate_id join people as t3 on t1 . candidate_id = t3 . person_id where t2 . asessment_outcome_code = value <n>
select student_id from student_course_attendance where course_id = value order by date_of_attendance desc limit value <n>
select distinct t1 . city from addresses as t1 join people_addresses as t2 on t1 . address_id = t2 . address_id join students as t3 on t2 . distinct t3 . distinct t1 . city = t3 . address_id <n>
select course_name from courses order by course_name <n>
select student_id from student_course_attendance where course_id = value union select student_id from student_course_attendance where course_id = value <n>
select student_id from student_course_attendance where course_id = value <n>
select student_id from student_course_attendance where course_id = value order by date_of_attendance desc <n>
select date from weather where max_temperature_f > value <n>
select city , max ( lat ) from station group by city <n>
select start_station_name , end_station_name from trip order by id limit value <n>
select id from trip order by duration limit value <n>
select zip_code , avg ( mean_temperature_f ) from weather group by zip_code <n>
select count ( distinct id ) from count <n>
select count ( * ) from station where city = value <n>
select start_station_name , start_station_id from trip where start_date like value group by start_station_name order by count ( * ) desc limit value <n>
select t1 . id from trip as t1 join weather as t2 on t1 . zip_code = t2 . zip_code group by t2 . zip_code order by count ( * ) desc limit value <n>
select t1 . lat , t1 . long from station as t1 join trip as t2 on t1 . id = t2 . start_station_id order by t2 . duration limit value <n>
select t1 . name , t1 . id from station as t1 join status as t2 on t1 . id = t2 . station_id group by t2 . station_id having avg ( t2 . bikes_available ) > value union select name , id from station where city = value <n>
select cloud_cover from weather where zip_code = value group by cloud_cover order by count ( * ) desc limit value <n>
select avg ( bikes_available ) from status where station_id not in ( select id from station where city = value ) <n>
select date , zip_code from weather where min_dew_point_f < ( select min ( min_dew_point_f ) from weather where zip_code = value ) <n>
select zip_code from weather group by zip_code having avg ( mean_visibility_miles ) < value <n>
select date , zip_code from weather where zip_code = value <n>
select t1 . id from trip as t1 join weather as t2 on t1 . zip_code = t2 . zip_code group by t2 . zip_code order by count ( * ) desc limit value <n>
select count ( * ) from trip as t1 join station as t2 on t1 . end_station_id = t2 . id where t2 . name ! = value <n>
select id from station where lat > value except select station_id from status group by station_id having avg ( bikes_available ) < value <n>
select name , lat , city from station order by lat limit value <n>
select date , mean_temperature_f , mean_humidity from weather order by max_gust_speed_mph desc limit value <n>
select t1 . id , t1 . name from station as t1 join status as t2 on t1 . id = t2 . station_id group by t1 . id having count ( * ) > = value <n>
select city , city from station order by lat limit value <n>
select date , cloud_cover from weather order by cloud_cover desc limit value <n>
select t1 . name , avg ( t2 . duration ) from station as t1 join trip as t2 on t1 . id = t2 . start_station_id where t2 . name = value <n>
select distinct t1 . name from station as t1 join status as t2 on t1 . id = t2 . station_id where t2 . bikes_available = value <n>
select distinct zip_code from weather where zip_code = value <n>
select date from weather where mean_sea_level_pressure_inches between value and value <n>
select t1 . id , t1 . name from station as t1 join status as t2 on t1 . id = t2 . station_id group by t1 . id having count ( * ) > value <n>
select zip_code from weather group by zip_code having avg ( mean_visibility_miles ) < value intersect select zip_code from weather group by zip_code having avg ( mean_sea_level_pressure_inches ) < value <n>
select count ( * ) from station where city = value <n>
select count ( * ) from book <n>
select title from book where where < = value <n>
select distinct publisher from publication where price < value <n>
select publisher from publication group by publisher having count ( * ) > value <n>
select publisher , count ( * ) from publication group by publisher <n>
select title from book where book < value <n>
select price from publication where t2 . price > = value <n>
select name from actor order by musical_id <n>
select character , duration from actor <n>
select character from actor order by age desc <n>
select name from musical where nominee = value <n>
select distinct nominee from musical where award ! = value <n>
select t1 . name from actor as t1 join musical as t2 on t1 . musical_id = t2 . musical_id where t2 . name = value <n>
select t1 . name , count ( * ) from actor as t1 join musical as t2 on t1 . musical_id = t2 . musical_id group by t1 . musical_id <n>
select t1 . name from musical as t1 join musical as t2 on t1 . musical_id = t2 . musical_id group by t2 . musical_id having count ( * ) > = value <n>
select nominee from musical group by nominee order by count ( * ) desc limit value <n>
select nominee from musical group by nominee having count ( * ) > value <n>
select name from musical where musical_id not in ( select musical_id from actor ) <n>
select nominee from musical where award = value or award = value <n>
select count ( * ) from user_profiles <n>
select count ( * ) from user_profiles <n>
select t1 . text from where as t1 join t2 on t1 . text = t2 . text group by t2 . text order by count ( * ) desc limit value <n>
select t1 . name , t1 . email from user_profiles as t1 join follows as t2 on t1 . uid = t2 . uid group by t2 . uid having count ( * ) > value <n>
select t2 . f1 from user_profiles as t1 join follows as t2 on t1 . uid = t2 . f2 where t1 . name = value <n>
select t1 . name , t2 . name from <n>
select t1 . name , t1 . partitionid from user_profiles as t1 join tweets as t2 on t1 . uid = t2 . uid group by t2 . uid having count ( * ) > value <n>
select avg ( t1 . followers ) from user_profiles as t1 join follows as t2 on t1 . uid = t2 . uid where t2 . name = value <n>
select t1 . attribute_definitions from <n>
select attribute_data_type from attribute_definitions where attribute_name = value <n>
select distinct ( catalog_publisher ) from catalogs where catalog_publisher like value <n>
select catalog_level_name , catalog_level_number from catalog_structure where catalog_level_number > value <n>
select t1 . catalog_entry_name from catalog_contents as t1 join catalog_contents_additional_attributes as t2 on t1 . catalog_entry_id = t2 . catalog_entry_id where t2 . catalog_level_number = value <n>
select catalog_level_name from catalog_structure order by catalog_level_number desc limit value <n>
select catalog_entry_name from catalog_contents order by height desc limit value <n>
select catalog_entry_name from catalog_contents order by capacity asc limit value <n>
select t1 . catalog_entry_name from catalog_contents as t1 join catalog_contents_additional_attributes as t2 on t1 . catalog_entry_id = t2 . catalog_entry_id where t2 . catalog_level_number = value <n>
select t1 . attribute_name , t1 . attribute_id from attribute_definitions as t1 join catalog_contents_additional_attributes as t2 on t1 . attribute_id = t2 . attribute_id where t2 . attribute_value = value <n>
select catalog_entry_name , capacity from catalog_contents where price_in_dollars > value <n>
select count ( * ) from catalog_contents <n>
select count ( * ) from aircraft <n>
select name , distance from aircraft <n>
select count ( * ) from aircraft where distance between value and value <n>
select min ( distance ) , avg ( distance ) , max ( distance ) from aircraft <n>
select eid , name from aircraft order by distance desc limit value <n>
select t2 . name from flight as t1 join aircraft as t2 on t1 . aid = t2 . aid group by t2 . name having avg ( t1 . distance ) > value <n>
select name , salary from employee order by salary <n>
select eid from employee where salary > value <n>
select name , salary from employee where eid = value <n>
select eid , name from employee <n>
select t1 . name from employee as t1 join certificate as t2 on t1 . eid = t2 . eid join aircraft as t3 on t3 . aid = t2 . aid where t3 . name = value <n>
select eid , salary from employee where name = value <n>
select flno , origin , destination from flight order by origin <n>
select flno from flight where origin = value <n>
select departure_date , arrival_date from flight where origin = value and destination = value <n>
select avg ( price ) from flight where origin = value <n>
select origin , destination from flight where price > value <n>
select flno from flight order by distance asc limit value <n>
select origin , count ( * ) from flight group by origin <n>
select destination , count ( * ) from flight group by destination <n>
select destination from flight group by destination order by count ( * ) limit value <n>
select flno from flight where distance > value <n>
select t1 . name , count ( * ) from flight as t1 join flight as t2 on t1 . destination = t2 . destination group by t2 . destination <n>
select count ( * ) from employee <n>
select t3 . name from employee as t1 join certificate as t2 on t1 . eid = t2 . eid join aircraft as t3 on t3 . aid = t2 . aid where t1 . name = value <n>
select t1 . name from employee as t1 join certificate as t2 on t1 . eid = t2 . eid join aircraft as t3 on t3 . aid = t2 . aid where t3 . name = value <n>
select name from employee except select t1 . name from employee as t1 join certificate as t2 on t1 . eid = t2 . eid join aircraft as t3 on t3 . aid = t2 . aid where t3 . name = value <n>
select name , distance from aircraft where aid = value <n>
select t1 . name from employee as t1 join certificate as t2 on t1 . eid = t2 . eid join aircraft as t3 on t3 . aid = t2 . aid where t3 . name = value group by t1 . eid order by count ( * ) desc limit value <n>
select count ( * ) from allergy_type <n>
select allergytype from allergy_type where allergy = value <n>
select allergytype , allergytype from allergy_type where allergytype = value <n>
select allergytype from allergy_type where allergy = value <n>
select allergytype , count ( * ) from allergy_type group by allergytype <n>
select allergytype from allergy_type group by allergytype order by count ( * ) desc limit value <n>
select count ( * ) from student <n>
select count ( distinct advisor ) from student <n>
select distinct major from student <n>
select fname , lname , age from student where sex = value <n>
select count ( * ) from age age <n>
select stuid from student where sex = value <n>
select advisor from student where stuid = value group by advisor having count ( * ) > = value <n>
select min ( age ) , avg ( age ) , max ( age ) from student <n>
select lname from student where age = ( select min ( age ) from student ) <n>
select major , count ( * ) from student group by major <n>
select age , count ( * ) from student group by age <n>
select avg ( age ) , sex from student <n>
select advisor , count ( * ) from student group by advisor <n>
select count ( * ) from has_allergy where allergy = value <n>
select stuid from has_allergy group by stuid having count ( * ) > value <n>
select count ( * ) from student where city_code = value or city_code = value <n>
select allergy from has_allergy group by allergy order by count ( * ) desc limit value <n>
select count ( * ) , allergy from student group by allergy <n>
select t1 . lname , t1 . sex from student as t1 join student as t2 on t1 . stuid = t2 . stuid where t2 . age < value <n>
select fname , sex from student where stuid not in ( select stuid from has_allergy where allergy = value ) <n>
select t1 . allergy , t1 . allergytype from allergy_type as t1 join has_allergy as t2 on t1 . allergy = t2 . allergy join student as t3 on t3 . stuid = t2 . stuid where t3 . major = value <n>
select count ( * ) from student where sex = value and stuid in ( select stuid from has_allergy as t1 join allergy_type as t2 on t1 . allergy = t2 . allergy where t2 . allergytype = value ) <n>
select count ( * ) from has_allergy where allergy = value or stuid = value <n>
select fname , major from student where major = value <n>
select billing_country , billing_country from invoices <n>
select t1 . first_name , t1 . last_name from customers as t1 join invoices as t2 on t2 . customer_id = t1 . id order by t2 . invoice_date desc limit value <n>
select t1 . first_name , t1 . last_name , count ( * ) from customers as t1 join invoices as t2 on t2 . customer_id = t1 . id group by t1 . id order by count ( * ) desc limit value <n>
select name , t1 . name from tracks as t1 join playlist_tracks as t2 on t1 . id = t2 . track_id group by t1 . name order by count ( * ) desc limit value <n>
select title from albums order by title <n>
select title from albums where title like value order by title <n>
select sum ( total ) from invoices where billing_city = value and billing_state = value <n>
select billing_state , count ( * ) from invoices where billing_country = value group by billing_state <n>
select state from invoices group by state order by count ( * ) desc limit value <n>
select title from albums <n>
select * from customers <n>
select email , phone from customers where first_name = value <n>
select count ( * ) from customers where state = value <n>
select name from albums where name like value <n>
select count ( * ) from customers where state = value <n>
select first_name , last_name from employees order by hire_date asc limit value <n>
select t1 . first_name , t1 . last_name from employees as t1 join customers as t2 on t1 . id = t2 . support_rep_id order by t2 . invoice_date desc limit value <n>
select count ( * ) from employees where country = value <n>
select first_name , last_name from employees order by hire_date asc limit value <n>
select count ( * ) , city from employees where title = value group by city <n>
select * from employees where first_name like value <n>
select sum ( total ) from invoices where billing_city = value and billing_state = value <n>
select distinct name from media_types <n>
select name from playlists <n>
select unit_price from tracks where name = value <n>
select t1 . title from albums as t1 join tracks as t2 on t1 . id = t2 . album_id group by t1 . id having count ( t1 . id ) > = value <n>
select t2 . name from genres as t1 join tracks as t2 on t1 . id = t2 . genre_id where t1 . name = value <n>
select t2 . name from genres as t1 join tracks as t2 on t1 . id = t2 . genre_id where t1 . name = value intersect select t2 . name from genres as t1 join tracks as t2 on t1 . id = t2 . genre_id where t1 . name = value <n>
select t2 . name from genres as t1 join tracks as t2 on t1 . id = t2 . genre_id join media_types as t3 on t3 . id = t2 . media_type_id where t1 . name = value or t3 . name = value <n>
select t1 . name from tracks as t1 join playlist_tracks as t2 on t1 . id = t2 . track_id join playlists as t3 on t3 . id = t2 . playlist_id where t3 . name = value <n>
select t1 . name from tracks as t1 join invoice_lines as t2 on t1 . id = t2 . track_id join playlists as t3 on t2 . playlist_id = t3 . id where t3 . name = value <n>
select t1 . name from tracks as t1 join playlist_tracks as t2 on t1 . id = t2 . track_id join playlists as t3 on t3 . id = t2 . playlist_id where t3 . name = value except select t1 . name from tracks as t1 join playlist_tracks as t2 on t1 . id = t2 . track_id join playlists as t3 on t3 . id = t2 . playlist_id where t3 . name = value <n>
select t1 . name from tracks as t1 join playlist_tracks as t2 on t1 . id = t2 . track_id join playlists as t3 on t2 . playlist_id = t3 . id where t3 . name = value intersect select t1 . name from tracks as t1 join playlist_tracks as t2 on t1 . id = t2 . track_id join playlists as t3 on t2 . playlist_id = t3 . id where t3 . name = value <n>
select count ( * ) from editor <n>
select name from age where age < value or age < value <n>
select age from editor <n>
select t1 . name , t1 . group , t3 . name from group as t1 join journal_committee as t2 on t1 . editor_id = t2 . editor_id join journal as t3 on t1 . journal_id = t3 . journal_id <n>
select t2 . name from journal_committee as t1 join editor as t2 on t1 . editor_id = t2 . editor_id join journal as t3 on t1 . journal_id = t3 . journal_id where t3 . sales > value <n>
select count ( * ) from ( select * from t1 group by * <n>
select customer_id , customer_first_name , customer_last_name , customer_phone from accounts <n>
select t2 . customer_first_name , t2 . customer_last_name , t2 . customer_phone from accounts as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t1 . account_name = value <n>
select count ( * ) from accounts as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t2 . customer_first_name = value and t2 . customer_last_name = value <n>
select customer_id , count ( * ) from accounts group by customer_id order by count ( * ) desc limit value <n>
select count ( * ) from customers where customer_id not in ( select customer_id from accounts ) <n>
select customer_id , customer_first_name from customers except select t1 . customer_id , t2 . customer_first_name from customers_cards as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where card_type_code = value <n>
select count ( * ) from customers <n>
select customer_id , customer_first_name , customer_last_name , customer_phone from customers order by customer_id <n>
select customer_phone , customer_email from customers where customer_first_name = value and customer_last_name = value <n>
select customer_id , card_type_code , card_type_code , card_type_code , card_type_code , card_type_code , card_type_code , card_type_code from customers_cards <n>
select customer_phone , customer_email , card_type_code from customers where customer_first_name = value <n>
select count ( * ) from customers_cards as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t2 . customer_first_name = value and t2 . customer_last_name = value <n>
select count ( * ) from customers_cards where card_type_code = value <n>
select customer_id , count ( * ) from customers_cards group by customer_id order by count ( * ) desc limit value <n>
select t1 . customer_id , t2 . customer_first_name , t2 . customer_last_name from customers_cards as t1 join customers as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id having count ( * ) > = value <n>
select card_type_code , count ( distinct customer_id ) from customers_cards group by card_type_code <n>
select card_type_code from customers_cards group by card_type_code having count ( * ) > = value <n>
select card_type_code , count ( distinct customer_id ) from customers_cards group by card_type_code <n>
select card_type_code from customers_cards group by card_type_code having count ( * ) > = value <n>
select transaction_type from financial_transactions <n>
select count ( distinct transaction_type ) from financial_transactions <n>
select card_type_code , count ( distinct customer_id ) from financial_transactions group by card_type_code <n>
select transaction_type from financial_transactions group by transaction_type order by sum ( transaction_amount ) desc limit value <n>
select transaction_type , count ( * ) from financial_transactions group by transaction_type <n>
select name , location from track <n>
select name , location , seating from track order by year_opened desc limit value <n>
select min ( seating ) , max ( seating ) , avg ( seating ) from track <n>
select distinct location from track <n>
select distinct class from race <n>
select name , class , date from race <n>
select class from race group by class order by count ( * ) desc limit value <n>
select name from track where name like value <n>
select name from track except select t2 . name from race as t1 join track as t2 on t1 . track_id = t2 . track_id where t1 . class = value <n>
select t2 . name , count ( * ) from race as t1 join track as t2 on t1 . track_id = t2 . track_id group by t1 . track_id <n>
select name , date , name from track order by name <n>
select t2 . name , t2 . location from race as t1 join track as t2 on t1 . track_id = t2 . track_id group by t1 . track_id having count ( * ) > = value <n>
select count ( * ) from member <n>
select , age , address from member order by age desc <n>
select address from member where address = value <n>
select shop_id from address group by shop order by count ( * ) asc limit value <n>
select shop_id , address from shop where score < value <n>
select month from happy_hour group by month having count ( * ) > value <n>
select name from genre <n>
select t1 . firstname , t1 . lastname from customer as t1 join employee as t2 on t1 . supportrepid = t2 . employeeid <n>
select distinct country from artist <n>
select title from album as t1 join artist as t2 on t1 . artistid = t2 . artistid where t2 . name = value <n>
select t2 . name from album as t1 join artist as t2 on t1 . artistid = t2 . artistid where t1 . title = value <n>
select t2 . name from album as t1 join artist as t2 on t1 . artistid = t2 . artistid group by t1 . artistid order by count ( * ) desc limit value <n>
select avg ( unitprice ) from genre as t1 join track as t2 on t1 . genreid = t2 . genreid where t1 . name = value <n>
select t1 . title , t2 . albumid , count ( * ) from album as t1 join track as t2 on t1 . albumid = t2 . albumid group by t2 . albumid <n>
select t1 . name from genre as t1 join track as t2 on t1 . genreid = t2 . genreid group by t2 . genreid order by count ( * ) desc limit value <n>
select t1 . title , t2 . albumid from album as t1 join track as t2 on t1 . albumid = t2 . albumid where t2 . unitprice > value group by t2 . albumid <n>
select avg ( t1 . unitprice ) from genre as t1 join track as t2 on t1 . genreid = t2 . genreid where t1 . name = value <n>
select t1 . firstname , t1 . lastname from customer as t1 join invoice as t2 on t1 . customerid = t2 . customerid where t1 . firstname = value <n>
select firstname , lastname from customer where firstname = value <n>
select count ( distinct city ) from employee <n>
select t2 . invoicedate from customer as t1 join invoice as t2 on t1 . customerid = t2 . customerid where t1 . firstname = value and lastname = value <n>
select firstname from customer group by firstname having count ( * ) < = value <n>
select phone from employee <n>
select count ( * ) from mediatype as t1 join track as t2 on t1 . mediatypeid = t2 . mediatypeid where t1 . name = value <n>
select t1 . firstname , t1 . lastname from customer as t1 join employee as t2 on t1 . supportrepid = t2 . employeeid <n>
select title from title order by title <n>
select name , albumid from artist where country = value or country = value order by name <n>
select avg ( unitprice ) from genre as t1 join track as t2 on t1 . genreid = t2 . genreid where t1 . name = value <n>
select birthdate from employee where city = value <n>
select distinct ( unitprice ) from genre as t1 join track as t2 on t1 . genreid = t2 . genreid where t1 . name = value <n>
select t1 . title from album as t1 join track as t2 on t1 . albumid = t2 . albumid join genre as t3 on t2 . genreid = t3 . genreid where t3 . name = value intersect select t1 . title from album as t1 join track as t2 on t1 . albumid = t2 . albumid join genre as t3 on t2 . genreid = t3 . genreid where t3 . name = value <n>
select customer_phone from available_policies where policy_type_code = ( select policy_type_code from available_policies group by policy_type_code order by count ( * ) desc limit value ) <n>
select policy_type_code from available_policies group by policy_type_code order by count ( * ) desc limit value <n>
select policy_type_code from available_policies group by policy_type_code having count ( * ) > value <n>
select t1 . customer_name from customers as t1 join first_notification_of_loss as t2 on t1 . customer_id = t2 . customer_id join services as t3 on t2 . service_id = t3 . service_id where t3 . service_name = value <n>
select t1 . effective_date from claims as t1 join settlements as t2 on t1 . claim_id = t2 . claim_id group by t1 . claim_id order by sum ( t2 . settlement_amount ) desc limit value <n>
select t1 . customer_name from customers as t1 join customers_policies as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_name order by count ( * ) desc limit value <n>
select distinct t3 . policy_type_code from customers as t1 join customers_policies as t2 on t1 . customer_id = t2 . customer_id join available_policies as t3 on t2 . policy_id = t3 . policy_id where t1 . customer_name = ( select t1 . customer_name from customers as t1 join customers_policies as t2 on t1 . customer_id = t2 . customer_id join available_policies as t3 on t2 . policy_id = t3 . policy_id where t1 . customer_name = ( select t1 . customer_name from customers as t1 join customers_policies as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id order by count ( * ) desc limit value ) <n>
select t1 . customer_name from customers as t1 join first_notification_of_loss as t2 on t1 . customer_id = t2 . customer_id join services as t3 on t2 . service_id = t3 . service_id where t3 . service_name = value <n>
select t1 . customer_name from customers as t1 join first_notification_of_loss as t2 on t1 . customer_id = t2 . customer_id join services as t3 on t2 . service_id = t3 . service_id where t3 . service_name = value <n>
select t1 . customer_name from customers as t1 join first_notification_of_loss as t2 on t1 . customer_id = t2 . customer_id join services as t3 on t2 . service_id = t3 . service_id where t3 . service_name = value intersect select t1 . customer_name from customers as t1 join first_notification_of_loss as t2 on t1 . customer_id = t2 . customer_id join services as t3 on t2 . service_id = t3 . service_id where t3 . service_name = value <n>
select t1 . customer_name from customers as t1 join first_notification_of_loss as t2 on t1 . customer_id = t2 . customer_id join services as t3 on t2 . service_id = t3 . service_id where t3 . service_name = value <n>
select customer_id from customers group by customer_id order by count ( * ) asc <n>
select count ( * ) from enzyme where id not in ( select enzyme_id from medicine_enzyme_interaction ) <n>
select name from enzyme order by name desc <n>
select max ( t1 . enzyme ) from enzyme as t1 join medicine_enzyme_interaction as t2 on t1 . id = t2 . id where t2 . interaction_type = value <n>
select name from enzyme where id not in ( select enzyme_id from medicine_enzyme_interaction ) <n>
select name , trade_name from medicine where fda_approved = value <n>
select t1 . id , t1 . name from enzyme as t1 join medicine_enzyme_interaction as t2 on t1 . id = t2 . enzyme_id where t2 . interaction_type = value group by t1 . id having count ( * ) > = value <n>
select t1 . id , t1 . name from enzyme as t1 join medicine_enzyme_interaction as t2 on t1 . id = t2 . enzyme_id where t2 . interaction_type = value group by t1 . id order by count ( * ) desc limit value <n>
select t1 . interaction_type from medicine_enzyme_interaction as t1 join medicine as t2 on t1 . medicine_id = t2 . id join enzyme as t3 on t1 . enzyme_id = t3 . id where t3 . name = value and t2 . name = value <n>
select count ( * ) from medicine where fda_approved = value <n>
select t1 . id , t1 . trade_name from medicine as t1 join medicine_enzyme_interaction as t2 on t2 . medicine_id = t1 . id group by t1 . id having count ( * ) > = value <n>
select distinct t1 . name , t1 . location , t1 . product from enzyme as t1 join medicine_enzyme_interaction as t2 on t2 . enzyme_id = t1 . id where t2 . interaction_type = value <n>
select name , trade_name from medicine except select t1 . name , t1 . trade_name from medicine as t1 join medicine_enzyme_interaction as t2 on t2 . medicine_id = t1 . id join enzyme as t3 on t3 . id = t2 . enzyme_id where t3 . product = value <n>
select t1 . name from enzyme as t1 join medicine_enzyme_interaction as t2 on t1 . id = t2 . enzyme_id join medicine as t3 on t2 . medicine_id = t3 . id where t3 . name = value and t2 . interaction_type = value <n>
select name , trade_name from medicine <n>
select school , location from university <n>
select founded from university where affiliation ! = value <n>
select count ( * ) from school where school_id not in ( select school_id from basketball_match ) <n>
select t1 . primary_conference from university as t1 join basketball_match as t2 on t1 . school_id = t2 . school_id order by t2 . acc_percent limit value <n>
select t1 . location , t2 . nickname from school as t1 join basketball_match as t2 on t1 . school_id = t2 . school_id <n>
select avg ( enrollment ) from university where founded < value <n>
select sum ( enrollment ) , min ( enrollment ) from school <n>
select count ( * ) from school where school_id not in ( select school_id from basketball_match ) <n>
select school from university where founded > value or affiliation = value <n>
select count ( * ) from school <n>
select count ( * ) , affiliation from university where enrollment > value group by affiliation <n>
select sum ( enrollment ) , affiliation from university where founded > value group by affiliation <n>
select * from basketball_match <n>
select t1 . model_name from chip_model as t1 join phone as t2 on t1 . model_name = t2 . chip_model join screen_mode as t3 on t2 . screen_mode = t3 . graphics_mode where t3 . , = value intersect select t1 . model_name from chip_model as t1 join phone as t2 on t1 . model_name = t2 . chip_model join screen_mode as t3 on t2 . screen_mode = t3 . graphics_mode where t3 . , = value <n>
select count ( distinct company_name ) from phone <n>
select t2 . hardware_model_name , t2 . company_name from screen_mode as t1 join phone as t2 on t1 . graphics_mode = t2 . screen_mode where t1 . type = value <n>
select company_name , count ( * ) from company_name group by company_name order by count ( * ) desc limit value <n>
select company_name from phone group by company_name order by count ( * ) desc limit value <n>
select t2 . hardware_model_name from chip_model as t1 join phone as t2 on t1 . model_name = t2 . chip_model join screen_mode as t3 on t2 . screen_mode = t3 . graphics_mode where t3 . type = value or t1 . ram_mib > value <n>
select accreditation_type , count ( * ) from phone group by accreditation_type <n>
select count ( * ) from chip_model where wifi = value <n>
select avg ( t1 . rom_mib ) from chip_model as t1 join phone as t2 on t1 . model_name = t2 . chip_model where t2 . company_name = value <n>
select count ( * ) from country <n>
select <n>
select distinct position from match_season <n>
select distinct position from match_season where college = value or college = value <n>
select count ( distinct team ) from match_season <n>
select distinct t2 . player , t2 . player , t1 . country_name from country as t1 join match_season as t2 on t1 . country_id = t2 . country <n>
select t1 . name , t1 . position , t1 . country from country as t1 join match_season as t2 on t1 . country_id = t2 . country <n>
select distinct position from match_season where college = value <n>
select t2 . official_native_language from country as t1 join match_season as t2 on t1 . country_id = t2 . country where t1 . country_name = value or college = value <n>
select t2 . player , t1 . player from country as t1 join match_season as t2 on t1 . country_id = t2 . country where t1 . country_name = value <n>
select count ( distinct t1 . college ) from match_season as t1 join team as t2 on t1 . team = t2 . team_id where t2 . name = value <n>
select player , years_played from player <n>
select count ( * ) , country from player <n>
select position from match_season group by position order by count ( * ) desc limit value <n>
select college from match_season group by college order by count ( * ) desc limit value <n>
select college from match_season group by college having count ( * ) > = value <n>
select t1 . country_name from country as t1 join match_season as t2 on t1 . country_id = t2 . country where t2 . position = value intersect select t1 . country_name from country as t1 join match_season as t2 on t1 . country_id = t2 . country where t2 . position = value <n>
select college from match_season where position = value intersect select college from match_season where position = value <n>
select name from climber order by name desc <n>
select max ( t1 . height ) from climber as t1 join mountain as t2 on t1 . mountain_id = t2 . mountain_id where t2 . country = value <n>
select count ( distinct country ) from climber <n>
select country from mountain where height > value <n>
select distinct range from mountain order by prominence desc limit value <n>
select t1 . name , t1 . name from climber as t1 join mountain as t2 on t1 . mountain_id = t2 . mountain_id order by t1 . name <n>
select t1 . height from climber as t1 join mountain as t2 on t1 . mountain_id = t2 . mountain_id order by t2 . height desc limit value <n>
select t1 . time from climber as t1 join mountain as t2 on t1 . mountain_id = t2 . mountain_id where t2 . country = value <n>
select country , count ( * ) from climber group by country <n>
select name from where ! = value <n>
select range from mountain group by range order by count ( * ) desc limit value <n>
select name from mountain where height > value or prominence < value <n>
select avg ( t2 . height ) from body_builder as t1 join people as t2 on t1 . people_id = t2 . people_id <n>
select t2 . name from body_builder as t1 join people as t2 on t1 . people_id = t2 . people_id <n>
select t1 . order , t1 . clean_jerk from body_builder as t1 join people as t2 on t1 . people_id = t2 . people_id order by t2 . height desc limit value <n>
select people , count ( * ) from people group by people <n>
select height , height from people order by height desc <n>
select count ( distinct count ( distinct count ) from <n>
select except ( * ) from people <n>
select date , <n>
select name from representative where representative_id not in ( select representative_id from election ) <n>
select name from representative order by name desc <n>
select count ( * ) from party where party = value <n>
select party from party group by party having count ( * ) > = value <n>
select count ( distinct party ) from party <n>
select booking_start_date , booking_end_date from apartment_bookings <n>
select distinct apartment_buildings from apartment_buildings <n>
select building_address , building_phone from apartment_buildings where building_manager = value <n>
select min ( bathroom_count ) , max ( bathroom_count ) from apartments <n>
select avg ( bedroom_count ) from apartments <n>
select avg ( room_count ) from apartments where apt_type_code = value <n>
select guest_first_name , guest_last_name from guests <n>
select distinct guests from guests where gender_code = value <n>
select t1 . booking_start_date , t1 . booking_start_date from apartment_bookings as t1 join guests as t2 on t1 . guest_id = t2 . guest_id where t2 . apt_type_code = value <n>
select t1 . booking_status_code from apartment_bookings as t1 join apartments as t2 on t1 . apt_id = t2 . apt_id where t2 . apt_number = value <n>
select t2 . apt_number from apartment_bookings as t1 join apartments as t2 on t1 . apt_id = t2 . apt_id where t1 . booking_status_code = value <n>
select booking_start_date , booking_end_date , booking_start_date from apartment_bookings <n>
select guest_first_name , guest_last_name from guests where guest_id = value <n>
select bathroom_count from apartments where bathroom_count > value <n>
select count ( * ) from apartments where apt_id not in ( select apt_id from apartment_buildings ) <n>
select apt_type_code , apt_number from apartments where building_manager = value <n>
select booking_status_code , count ( * ) from apartment_bookings group by booking_status_code <n>
select apt_number from apartments order by bedroom_count desc limit value <n>
select apt_type_code from apartments group by apt_type_code order by avg ( room_count ) desc <n>
select apt_type_code , bathroom_count , bedroom_count from apartments group by apt_type_code order by sum ( room_count ) desc limit value <n>
select apt_type_code from apartments group by apt_type_code order by count ( * ) desc limit value <n>
select gender_code , count ( * ) from guests group by gender_code order by count ( * ) desc <n>
select count ( * ) from apartments where apt_id not in ( select apt_id from apartment_facilities ) <n>
select t2 . apt_number from apartment_bookings as t1 join apartments as t2 on t1 . apt_id = t2 . apt_id where t1 . booking_status_code = value intersect select t2 . apt_number from apartment_bookings as t1 join apartments as t2 on t1 . apt_id = t2 . apt_id where t1 . booking_status_code = value <n>
select t1 . season , t2 . name , t2 . name from game as t1 join stadium as t2 on t1 . stadium_id = t2 . id join injury_accident as t3 on t1 . id = t3 . game_id <n>
select count ( * ) , t1 . name from player as t1 join injury_accident as t2 on t1 . id = t2 . game_id where t1 . name = value <n>
select t1 . id , t1 . name from stadium as t1 join game as t2 on t1 . id = t2 . stadium_id join injury_accident as t3 on t2 . id = t3 . game_id group by t1 . id order by count ( * ) desc limit value <n>
select count ( * ) from game where season > value <n>
select t2 . name , avg ( t1 . date ) from ( ) <n>
select t1 . country , t1 . name from <n>
select max ( t2 . height ) from player as t1 join <n>
select distinct t1 . player_name from player as t1 join player_attributes as t2 on t1 . player_api_id = t2 . player_api_id where t2 . preferred_foot = value and t2 . overall_rating > = value and t2 . overall_rating < = value <n>
select distinct t1 . player_name from player as t1 join player_attributes as t2 on t1 . player_api_id = t2 . player_api_id where t2 . preferred_foot = value and t2 . overall_rating > = value and t2 . overall_rating < = value <n>
select t1 . player_name , t1 . player_name from player as t1 join player_attributes as t2 on t1 . player_api_id = t2 . player_api_id order by t1 . player_name limit value <n>
select date , location from performance <n>
select location , count ( * ) from member group by location <n>
select location from performance group by location having count ( * ) > value <n>
select date from performance where t3 . name = value <n>
select distinct t1 . name from instructor as t1 join teaches as t2 on t1 . id = t2 . id join course as t3 on t2 . course_id = t3 . course_id where t3 . id = value <n>
select dept_name , building from department where budget > ( select avg ( budget ) from department ) <n>
select building , room_number from classroom where capacity between value and value <n>
select t1 . name from student as t1 join advisor as t2 on t1 . id = t2 . s_id group by t2 . s_id order by count ( * ) desc limit value <n>
select count ( distinct advisor ) from student <n>
select count ( * ) from department <n>
select t1 . title from course as t1 join prereq as t2 on t1 . course_id = t2 . course_id group by t2 . course_id having count ( * ) > = value <n>
select count ( * ) from course where course_id not in ( select course_id from prereq ) <n>
select title from course where course_id not in ( select course_id from prereq ) <n>
select sum ( budget ) , dept_name from course group by dept_name <n>
select count ( * ) from classroom where building = value <n>
select dept_name , building from department where budget > ( select avg ( budget ) from department ) <n>
select title from course where dept_name = value intersect select title from course where dept_name = value ) <n>
select id from teaches where semester = value and year = value except select id from teaches where semester = value and year = value ) <n>
select distinct t1 . name from student as t1 join takes as t2 on t1 . id = t2 . id where year = value or year = value <n>
select dept_name from course group by dept_name order by count ( * ) desc limit value <n>
select dept_name from department order by budget limit value <n>
select name , building from department order by budget desc <n>
select * from instructor where salary between ( select min ( salary ) from instructor order by name desc <n>
select name , course_id from instructor order by course_id <n>
select t1 . name from instructor as t1 join advisor as t2 on t1 . id = t2 . i_id group by t2 . i_id having count ( * ) > value <n>
select count ( * ) , building from classroom where capacity > value group by building <n>
select t1 . title from course as t1 join section as t2 on t1 . course_id = t2 . course_id group by t2 . course_id having count ( * ) > value <n>
select count ( * ) , dept_name from department group by dept_name <n>
select count ( * ) , semester , year from section group by semester , year <n>
select semester , year from section group by semester , year order by count ( * ) desc limit value <n>
select t1 . name from department as t1 join course as t2 on t1 . course_id = t2 . course_id group by t2 . course_id order by count ( * ) desc limit value <n>
select year , year from takes order by year desc limit value <n>
select name , salary from instructor where advisor = value <n>
select course_id from course except select course_id from prereq <n>
select title from course where course_id in ( select t1 . course_id from prereq as t1 join course as t2 on t1 . prereq_id = t2 . course_id where t2 . title = value ) <n>
select distinct t1 . name from student as t1 join takes as t2 on t1 . id = t2 . id where year = value <n>
select t1 . title from course as t1 join section as t2 on t1 . course_id = t2 . course_id where building = value and semester = value and year = value <n>
select t2 . name , t2 . salary from advisor as t1 join instructor as t2 on t1 . i_id = t2 . id join student as t3 on t1 . s_id = t3 . id where t3 . dept_name = value <n>
select title from course where course_id in ( select t1 . course_id from prereq as t1 join course as t2 on t1 . prereq_id = t2 . course_id where t2 . title = value ) <n>
select t2 . name from advisor as t1 join instructor as t2 on t1 . i_id = t2 . id join student as t3 on t1 . s_id = t3 . id order by t3 . tot_cred desc limit value <n>
select id from teaches where semester = value and year = value group by id order by count ( * ) limit value <n>
select dept_name from instructor group by dept_name order by avg ( salary ) desc limit value <n>
select count ( * ) , dept_name from instructor group by dept_name order by avg ( salary ) desc limit value <n>
select name from student where id not in ( select course_id from takes ) <n>
select t1 . name from student as t1 join takes as t2 on t1 . id = t2 . id where t2 . course_id in ( select t4 . prereq_id from course as t3 join prereq as t4 on t3 . course_id = t4 . course_id where t3 . title = value ) <n>
select name , salary from instructor where salary < ( select avg ( salary ) from instructor where dept_name = value ) <n>
select t2 . building , t2 . room_number , t2 . semester , t2 . year from course as t1 join section as t2 on t1 . course_id = t2 . course_id where t1 . dept_name = value order by t1 . title <n>
select name from instructor where salary between value and value <n>
select name from instructor where id not in ( select id from teaches where semester = value ) <n>
select name from instructor where name like value <n>
select course_id from section where semester = value and year = value union select course_id from section where semester = value and year = value <n>
select course_id from section where semester = value and year = value intersect select course_id from section where semester = value and year = value <n>
select distinct salary from instructor where salary < ( select max ( salary ) from instructor ) <n>
select dept_name , avg ( salary ) from instructor group by dept_name having avg ( salary ) > value ) <n>
select name from instructor where salary > ( select max ( salary ) from instructor where dept_name = value ) <n>
select date from debate order by num_of_audience desc <n>
select name from people where people = value or people = value <n>
select party from people group by party order by count ( * ) desc limit value <n>
select t2 . name from debate_people as t1 join people as t2 on t1 . people_id = t2 . people_id group by t2 . name having count ( * ) > = value <n>
select name from people where people_id not in ( select people_id from debate_people ) <n>
select policy_type_code from policies as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t2 . customer_details = value <n>
select distinct t1 . policy_type_code from policies as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t1 . policy_type_code = value <n>
select sum ( amount_piad ) , avg ( amount_piad ) from claim_headers <n>
select t3 . customer_details from claim_headers as t1 join policies as t2 on t1 . policy_id = t2 . policy_id join customers as t3 on t2 . customer_id = t3 . customer_id where t1 . amount_piad = ( select min ( amount_piad ) from claim_headers ) <n>
select customer_details from customers except select t2 . customer_details from policies as t1 join customers as t2 on t1 . customer_id = t2 . customer_id join customer_details as t3 on t1 . customer_id = t3 . customer_id where t3 . customer_details = value <n>
select count ( * ) from ( select * from claims_processing_stages where amount_claimed = value <n>
select customer_details from customers where customer_details like value <n>
select t3 . customer_details from claim_headers as t1 join policies as t2 on t1 . policy_id = t2 . policy_id join customers as t3 on t2 . customer_id = t3 . customer_id where t1 . amount_piad = value or t1 . customer_details = value <n>
select customer_details from customers union select staff_details from staff <n>
select t3 . customer_details from claim_headers as t1 join policies as t2 on t1 . policy_id = t2 . policy_id join customers as t3 on t2 . customer_id = t3 . customer_id where t1 . amount_piad = ( select min ( amount_piad ) from claim_headers ) <n>
select count ( distinct claim_outcome_code ) from claims_processing <n>
select customer_id from customers group by customer_id order by count ( * ) desc limit value <n>
select count ( * ) from customers <n>
select t1 . account_id , t1 . other_account_details , t1 . account_name , t1 . other_account_details from accounts as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t2 . account_name = value <n>
select t1 . account_name , t1 . other_account_details from accounts as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t2 . customer_first_name = value and t2 . customer_last_name = value <n>
select count ( * ) from customers where customer_id not in ( select customer_id from accounts ) <n>
select customer_id from customers except select customer_id from accounts <n>
select count ( * ) , customer_id from accounts group by customer_id <n>
select t1 . customer_id , t2 . customer_first_name , t2 . customer_last_name , count ( * ) from accounts as t1 join customers as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id <n>
select count ( * ) from customers <n>
select count ( * ) , gender from customers group by gender <n>
select count ( * ) , account_id from financial_transactions <n>
select avg ( transaction_amount ) , min ( transaction_amount ) , max ( transaction_amount ) , max ( transaction_amount ) from financial_transactions <n>
select transaction_id from financial_transactions where transaction_amount > ( select avg ( transaction_amount ) from financial_transactions ) <n>
select t2 . account_name , count ( * ) from financial_transactions as t1 join accounts as t2 on t1 . account_id = t2 . account_id group by t1 . account_id <n>
select account_id , date_account_opened from financial_transactions group by account_id having count ( * ) > = value <n>
select distinct product_size from products <n>
select invoice_number , count ( * ) from financial_transactions group by invoice_number <n>
select count ( * ) from invoices <n>
select t1 . invoice_date , t1 . order_id , t2 . order_details from invoices as t1 join orders as t2 on t1 . order_id = t2 . order_id group by t1 . order_id order by count ( * ) desc limit value <n>
select order_id , order_details from invoices where order_id = value <n>
select product_name from products <n>
select t1 . product_name , t1 . product_id from products as t1 join order_items as t2 on t1 . product_id = t2 . product_id group by t1 . product_id order by count ( * ) limit value <n>
select product_id , count ( distinct order_id ) from order_items group by product_id <n>
select order_id , count ( * ) from order_items group by order_id <n>
select order_id , sum ( product_quantity ) from order_items group by order_id <n>
select count ( * ) from max where name like value <n>
select or , name from church <n>
select count ( * ) from people where people_id not in ( select people_id from people ) <n>
select name , age from people where age < ( select avg ( age ) from people ) <n>
select name from church group by name having count ( * ) > = value <n>
select name from church where age < value <n>
select count ( * ) from artist <n>
select distinct country from artist <n>
select name , year_join from artist where country ! = value <n>
select avg ( age ) , min ( age ) from artist <n>
select count ( * ) from exhibition where year > = value <n>
select theme , year from exhibition where ticket_price < value <n>
select name , country from artist order by year_join desc limit value <n>
select t1 . theme , t2 . name from exhibition as t1 join artist as t2 on t1 . artist_id = t2 . artist_id where t1 . ticket_price > ( select avg ( ticket_price ) from exhibition ) <n>
select avg ( ticket_price ) , min ( ticket_price ) , max ( ticket_price ) from exhibition <n>
select theme , date , year from exhibition <n>
select theme from exhibition_record where theme between value and value <n>
select count ( * ) from exhibition_record as t1 join exhibition as t2 on t1 . exhibition_id = t2 . exhibition_id where t1 . attendance > value or t2 . ticket_price < value <n>
select title from item where i_id like value <n>
select avg ( rating ) , min ( rating ) from review <n>
select count ( distinct u_id ) from review <n>
select t1 . name from useracct as t1 join review as t2 on t1 . u_id = t2 . u_id where t2 . rating > value <n>
select t1 . title from item as t1 join review as t2 on t1 . i_id = t2 . i_id where t2 . rating > value intersect select t1 . title from item as t1 join review as t2 on t1 . i_id = t2 . i_id where t2 . rating < value <n>
select t1 . name from useracct as t1 join review as t2 on t1 . u_id = t2 . u_id order by t2 . rating desc limit value <n>
select t1 . name , avg ( t2 . desc ) from useracct as t1 join review as t2 on t1 . u_id = t2 . u_id where t2 . u_id = value <n>
select avg ( avg ) , avg ( distinct ( ) , avg ( * ) from useracct where u_id = value <n>
select name from useracct where u_id not in ( select u_id from review ) <n>
select count ( * ) from player <n>
select t1 . or from player as t1 join or as t2 on t1 . player_id = t2 . player_id join player as t3 on t2 . t2 . t2 . player = t3 . player where t3 . or like value <n>
select group from player group by residence order by count ( * ) desc limit value <n>
select t1 . player_name from player as t1 join t3 as t2 on t1 . player_id = t2 . player_id join , as t3 on t2 . t2 . t2 . t2 . t2 . player = t3 . player where t3 . player = value <n>
select t1 . residence from player as t1 join player as t2 on t1 . player_id = t2 . player_id where t2 . player = value intersect select t1 . residence from player as t1 join player as t2 on t1 . player_id = t2 . player_id where t2 . player = value <n>
select count ( * ) from gymnast <n>
select total_points from gymnast order by total_points desc <n>
select avg ( horizontal_bar_points ) from gymnast <n>
select t2 . name from gymnast as t1 join people as t2 on t1 . gymnast_id = t2 . people_id <n>
select t2 . name from gymnast as t1 join people as t2 on t1 . gymnast_id = t2 . people_id where t1 . total_points > value <n>
select name from people order by age limit value <n>
select avg ( t2 . age ) from gymnast as t1 join people as t2 on t1 . gymnast_id = t2 . people_id <n>
select distinct t2 . hometown from gymnast as t1 join people as t2 on t1 . gymnast_id = t2 . people_id where t1 . total_points < value <n>
select t2 . hometown from gymnast as t1 join people as t2 on t1 . gymnast_id = t2 . people_id group by t2 . hometown order by count ( * ) desc limit value <n>
select t2 . name from gymnast as t1 join people as t2 on t1 . gymnast_id = t2 . people_id order by t2 . height desc <n>
select hometown from people where hometown not in ( select hometown from gymnast ) <n>
select count ( distinct hometown ) from people <n>
select sum ( balance ) from savings <n>
select count ( * ) from accounts <n>
select avg ( balance ) from savings <n>
select t1 . name , t2 . balance from accounts as t1 join checking as t2 on t1 . custid = t2 . custid join savings as t3 on t1 . custid = t3 . custid where t3 . balance < ( select max ( balance ) from savings ) <n>
select t2 . balance from accounts as t1 join checking as t2 on t1 . custid = t2 . custid where t1 . name like value <n>
select t1 . name from accounts as t1 join checking as t2 on t1 . custid = t2 . custid join savings as t3 on t1 . custid = t3 . custid order by avg ( t3 . balance ) limit value <n>
select name from desc order by name <n>
select t1 . name from accounts as t1 join checking as t2 on t1 . custid = t2 . custid join savings as t3 on t1 . custid = t3 . custid order by t2 . balance + t3 . balance limit value <n>
select t1 . balance + t2 . balance from checking as t1 join savings as t2 on t1 . custid = t2 . custid join savings as t3 on t1 . custid = t3 . custid order by t3 . balance limit value <n>
select t1 . name from accounts as t1 join checking as t2 on t1 . custid = t2 . custid join savings as t3 on t1 . custid = t3 . custid order by t2 . balance + t3 . balance limit value <n>
select t1 . name from accounts as t1 join checking as t2 on t1 . custid = t2 . custid join savings as t3 on t1 . custid = t3 . custid order by avg ( t3 . balance ) limit value <n>
select sum ( balance ) , max ( balance ) from savings <n>
select t2 . balance , t3 . balance , t1 . name from accounts as t1 join checking as t2 on t1 . custid = t2 . custid join savings as t3 on t1 . custid = t3 . custid order by t2 . balance + t3 . balance limit value <n>
select t2 . balance , t3 . balance , t1 . name from accounts as t1 join checking as t2 on t1 . custid = t2 . custid join savings as t3 on t1 . custid = t3 . custid order by t2 . balance + t3 . balance desc <n>
select t1 . name , t3 . balance + t2 . balance from accounts as t1 join checking as t2 on t1 . custid = t2 . custid join savings as t3 on t1 . custid = t3 . custid where t3 . balance > ( select max ( balance ) from savings ) <n>
select count ( * ) from web_client_accelerator where id not in ( select accelerator_id from accelerator_compatible_browser ) <n>
select desc from , order by < <n>
select id , name from web_client_accelerator where name like value <n>
select count ( * ) from ( select * from t1 group by t1 . name order by count ( * ) desc limit value <n>
select t1 . name from browser as t1 join accelerator_compatible_browser as t2 on t1 . id = t2 . browser_id join web_client_accelerator as t3 on t2 . accelerator_id = t3 . id where t3 . name = value and t2 . compatible_since_year > value <n>
select name from web_client_accelerator order by market_share desc <n>
select name from wrestler order by days_held desc <n>
select t1 . name from wrestler as t1 join wrestler as t2 on t1 . wrestler_id = t2 . wrestler_id group by t2 . wrestler_id order by count ( * ) desc limit value <n>
select name , location from wrestler <n>
select t2 . name , t1 . elimination_move from elimination as t1 join wrestler as t2 on t1 . wrestler_id = t2 . wrestler_id <n>
select t2 . name , t1 . team from elimination as t1 join wrestler as t2 on t1 . wrestler_id = t2 . wrestler_id order by t2 . days_held desc <n>
select time from elimination where eliminated_by = value <n>
select team from elimination group by team having count ( * ) > value <n>
select wrestler , days_held from wrestler <n>
select name from wrestler order by days_held desc limit value <n>
select name from wrestler where wrestler_id not in ( select wrestler_id from elimination ) <n>
select team from elimination intersect select team from elimination where eliminated_by = value <n>
select time from elimination where eliminated_by = value or eliminated_by = value <n>
select school_name from school order by school_name <n>
select avg ( enrollment ) from school <n>
select count ( * ) from school where school_id not in ( select school_id from endowment ) <n>
select school_name from school where school_id not in ( select school_id from endowment ) <n>
select t1 . amount , t1 . <n>
select <n>
select t2 . school_name from endowment as t1 join school as t2 on t1 . school_id = t2 . school_id where t1 . amount > value group by t1 . school_id having count ( * ) > value <n>
select t2 . school_name , t1 . budgeted , t1 . invested from budget as t1 join school as t2 on t1 . school_id = t2 . school_id where t1 . amount > value <n>
select avg ( , ) from building <n>
select t3 . name , t3 . from name <n>
select type from institution where type = value intersect select type from institution where type = value <n>
select t1 . name , t2 . name from building as t1 join institution as t2 on t1 . building_id = t2 . building_id where t1 . building = value group by t1 . building_id having count ( * ) > = value <n>
select count ( * ) from institution where type = value <n>
select count ( * ) from institution as t1 join protein as t2 on t1 . institution_id = t2 . institution_id join building as t3 on t3 . building_id = t1 . building_id where t3 . floors > = value <n>
select count ( * ) from cinema <n>
select location from cinema <n>
select name , location from cinema order by capacity desc limit value <n>
select location from cinema where capacity > value group by location having count ( * ) > = value group by location having count ( * ) > = value <n>
select title , directed_by from film <n>
select directed_by , film from film <n>
select title , film_id , film_id from film <n>
select location from cinema where capacity > value group by location having count ( * ) > value <n>
select count ( * ) from film where title like value <n>
select t1 . where , t1 . coupon_amount from discount_coupons as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t2 . first_name = value <n>
select t1 . join , t2 . t1 , t2 . t1 , t2 . t1 . t1 . t1 . t1 . t1 . t1 . t2 . t1 . t1 . t1 . t1 . t1 . t1 . t1 . t1 . t1 . t1 . t1 . t1 . t1 . t1 . product_description <n>
select t1 . first_name , t1 . customer_id , t2 . customer_id from customers as t1 join customers as t2 on t2 . customer_id = t1 . customer_id <n>
select t2 . product_name from view_product_availability as t1 join products_for_hire as t2 on t1 . product_id = t2 . product_id where t1 . product_name = value <n>
select payments from customers where first_name = value or first_name = value <n>
select name from phone order by name <n>
select t1 . <n>
select carrier from phone where memory_in_g > value intersect select carrier from phone where memory_in_g < value <n>
select t3 . name from phone_market as t1 join market as t2 on t1 . market_id = t2 . market_id join phone as t3 on t2 . phone_id = t3 . phone_id where t1 . name = value <n>
select count ( * ) from gas_station where open_year > value <n>
select rank , rank from company order by sales_billion desc <n>
select company , headquarters from company order by market_value desc <n>
select main_industry from company <n>
select headquarters , count ( * ) from company group by headquarters <n>
select main_industry , count ( * ) from company group by main_industry order by sum ( market_value ) desc limit value <n>
select station_id , location , manager_name from gas_station order by open_year <n>
select count ( * ) from gas_station where open_year between value and value <n>
select headquarters from company where main_industry = value intersect select headquarters from company where main_industry = value <n>
select t3 . manager_name from station_company as t1 join company as t2 on t1 . company_id = t2 . company_id join gas_station as t3 on t1 . station_id = t3 . station_id group by t2 . station_id order by count ( * ) desc limit value <n>
select main_industry from company where main_industry = value intersect select main_industry from company where main_industry = value <n>
select location from gas_station where open_year > value group by location order by count ( * ) desc limit value <n>
select manager_name from gas_station order by open_year <n>
select rank , company , market_value from company where main_industry = value order by sales_billion , profits_billion desc <n>
select count ( * ) from region <n>
select count ( * ) from party <n>
select minister , party_name from party order by took_office desc <n>
select minister from party where took_office ! = value <n>
select minister from party order by took_office desc limit value <n>
select party_name , party_name from member <n>
select t2 . party_name from member as t1 join party as t2 on t1 . party_id = t2 . party_id group by t1 . party_id order by count ( * ) desc limit value <n>
select t2 . party_name from member as t1 join party as t2 on t1 . party_id = t2 . party_id where t1 . party_name ! = value <n>
select t1 . member_name from member as t1 join party as t2 on t1 . party_id = t2 . party_id where t2 . party_name = value <n>
select count ( * ) from party <n>
select t1 . member_name from member as t1 join party_events as t2 on t1 . member_id = t2 . member_in_charge_id where t2 . party_name ! = value <n>
select t2 . party_name from party_events as t1 join party as t2 on t1 . party_id = t2 . party_id group by t1 . party_id having count ( * ) > = value <n>
select > from member group by event_name having count ( * ) > value <n>
select count ( * ) from pilot <n>
select distinct position from pilot where age < value <n>
select nationality , count ( * ) from pilot group by nationality <n>
select t3 . pilot_name , t2 . model from pilot_record as t1 join aircraft as t2 on t1 . aircraft_id = t2 . aircraft_id join pilot as t3 on t1 . pilot_id = t3 . pilot_id order by t1 . pilot_name <n>
select t2 . pilot_name from pilot_record as t1 join aircraft as t2 on t1 . aircraft_id = t2 . aircraft_id join pilot as t3 on t1 . pilot_id = t3 . pilot_id group by t1 . pilot_id having count ( * ) > value <n>
select document_type_description from documents group by document_type_code order by count ( * ) desc limit value <n>
select ref_shipping_agents.shipping_agent_name from ref_shipping_agents join documents on documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code where documents.document_id = value <n>
select count ( * ) from employees <n>
select t1 . role_description , count ( * ) from employees as t1 join roles as t2 on t1 . role_code = t2 . role_code group by t1 . role_code <n>
select document_type_code from documents group by document_type_code order by count ( * ) desc limit value <n>
select count ( * ) from documents group by documents <n>
select document_id from documents where document_id = value <n>
select t1 . role_description from roles as t1 join employees as t2 on t1 . role_code = t2 . role_code where t2 . < = value <n>
select document_id , count ( copy_number ) from draft_copies group by document_id having count ( copy_number ) > value <n>
select t1 . employee_name , count ( * ) from employees as t1 join roles as t2 on t1 . role_code = t2 . role_code group by t1 . employee_id order by count ( * ) desc limit value <n>
select <n>
select <n>
select t1 . participant_id , t1 . participants from participants as t1 join participants_in_events as t2 on t1 . participant_id = t2 . participant_id group by t1 . participant_id having count ( * ) > value <n>
select event_details from services order by services desc <n>
select count ( * ) from participants group by participant_type_code order by count ( * ) desc limit value <n>
select event_id from participants_in_events except select events from events where events not in ( select event_id from participants_in_events ) <n>
select name from races order by date desc limit value <n>
select name , date from races order by date desc limit value <n>
select distinct name from races where year between value and value <n>
select distinct t1 . driverid , t1 . nationality from drivers as t1 join laptimes as t2 on t1 . driverid = t2 . driverid where t2 . milliseconds > value <n>
select t1 . forename , t1 . surname from drivers as t1 join laptimes as t2 on t1 . driverid = t2 . driverid order by t2 . milliseconds desc limit value <n>
select t1 . driverid , t1 . surname , t1 . driverid from drivers as t1 join pitstops as t2 on t1 . driverid = t2 . driverid group by t1 . driverid having count ( * ) = value <n>
select count ( * ) from driverid where year < value <n>
select name , year from races as t1 join results as t2 on t1 . raceid = t2 . raceid where t2 . year = value <n>
select t1 . driverid , t1 . surname from drivers as t1 join results as t2 on t1 . driverid = t2 . driverid join races as t3 on t2 . raceid = t3 . raceid where t3 . year > value <n>
select distinct t1 . forename from drivers as t1 join driverstandings as t2 on t1 . driverid = t2 . driverid where t2 . position = value and t2 . wins = value and t2 . wins = value <n>
select t1 . forename , t1 . surname from drivers as t1 join laptimes as t2 on t1 . driverid = t2 . driverid where t2 . position = value intersect select t1 . forename , t1 . surname from drivers as t1 join laptimes as t2 on t1 . driverid = t2 . driverid where t2 . position = value <n>
select count ( * ) , t1 . name from races as t1 join results as t2 on t1 . raceid = t2 . raceid group by t1 . raceid <n>
select distinct t1 . name from races as t1 join circuits as t2 on t1 . circuitid = t2 . circuitid where t2 . country = value and t1 . year > value <n>
select driverid , count ( * ) from results where driverid in ( select driverid from pitstops group by driverid having count ( * ) > = value ) <n>
select distinct forename from drivers order by forename asc <n>
select name from races where year between value and value <n>
select name from races where year < value or year < value <n>
select t1 . surname , t1 . driverid from drivers as t1 join pitstops as t2 on t1 . driverid = t2 . driverid group by t1 . driverid having count ( * ) = value intersect select t1 . surname , t1 . driverid from drivers as t1 join results as t2 on t1 . driverid = t2 . driverid group by t1 . driverid having count ( * ) = value <n>
select name from circuits where country = value or country = value <n>
select circuitid , location from circuits where country = value or country = value <n>
select avg ( t2 . fastestlapspeed ) from races as t1 join results as t2 on t1 . raceid = t2 . raceid where t1 . year = value and t1 . name = value <n>
select max ( t2 . fastestlapspeed ) , t1 . name , t1 . year from races as t1 join results as t2 on t1 . raceid = t2 . raceid where t1 . year > value group by t1 . name order by t1 . year <n>
select avg ( t2 . fastestlapspeed ) , t1 . name , t1 . year from races as t1 join results as t2 on t1 . raceid = t2 . raceid where t1 . year > value group by t1 . name order by t1 . year <n>
select t1 . driverid , t1 . surname from drivers as t1 join results as t2 on t1 . driverid = t2 . driverid join races as t3 on t2 . raceid = t3 . raceid group by t1 . driverid having count ( * ) = value <n>
select count ( * ) from technician <n>
select name from technician order by age desc <n>
select name from technician where team ! = value <n>
select starting_year from technician order by technician asc limit value <n>
select team , count ( * ) from technician group by team <n>
select team from technician group by team having count ( * ) > = value <n>
select t3 . name from repair_assignment as t1 join machine as t2 on t1 . machine_id = t2 . machine_id join technician as t3 on t1 . technician_id = t3 . technician_id order by t2 . quality_rank <n>
select t3 . name from repair_assignment as t1 join machine as t2 on t1 . machine_id = t2 . machine_id join technician as t3 on t1 . technician_id = t3 . technician_id where t2 . value_points > value <n>
select name from technician where technician_id not in ( select technician_id from repair_assignment ) <n>
select count ( * ) from entrepreneur <n>
select company from entrepreneur order by money_requested desc <n>
select avg ( money_requested ) from entrepreneur <n>
select t2 . name from entrepreneur as t1 join people as t2 on t1 . people_id = t2 . people_id <n>
select t2 . name from entrepreneur as t1 join people as t2 on t1 . people_id = t2 . people_id where t1 . investor ! = value <n>
select name from weight order by weight desc limit value <n>
select t2 . date_of_birth from entrepreneur as t1 join people as t2 on t1 . people_id = t2 . people_id where t1 . investor = value or t1 . investor = value <n>
select t2 . weight from entrepreneur as t1 join people as t2 on t1 . people_id = t2 . people_id order by t1 . money_requested desc <n>
select investor from entrepreneur group by investor order by count ( * ) desc limit value <n>
select t2 . name , t1 . company from entrepreneur as t1 join people as t2 on t1 . people_id = t2 . people_id order by t1 . money_requested desc <n>
select name from people where height > value <n>
select count ( distinct company ) from entrepreneur <n>
select count ( * ) from perpetrator <n>
select name from people order by weight desc limit value <n>
select name from perpetrator <n>
select t1 . name from people as t1 join perpetrator as t2 on t1 . people_id = t2 . people_id where t2 . country = value or t2 . height > value <n>
select country , count ( * ) from perpetrator group by country order by count ( * ) desc limit value <n>
select name from people where height > value <n>
select sum ( t2 . killed ) from people as t1 join perpetrator as t2 on t1 . people_id = t2 . people_id order by t1 . year desc limit value <n>
select campus from campuses where year = value <n>
select campus from campuses where year = value <n>
select campus from campuses where year > = value and year < = value <n>
select t1 . campusfee from csu_fees as t1 join campuses as t2 on t1 . campus = t2 . id where t2 . campus = value and t1 . year = value <n>
select t1 . campusfee from csu_fees as t1 join campuses as t2 on t1 . campus = t2 . id where t2 . campus = value and t1 . year = value <n>
select count ( * ) from csu_fees where campusfee > ( select avg ( campusfee ) from csu_fees ) <n>
select year from degrees group by year order by sum ( degrees ) desc limit value <n>
select t1 . campus from campuses as t1 join faculty as t2 on t1 . id = t2 . campus where t2 . year = value and faculty > ( select max ( faculty ) from campuses as t1 join faculty as t2 on t1 . id = t2 . campus where t2 . year = value and t1 . year = value <n>
select avg ( campusfee ) from csu_fees where year = value <n>
select t1 . campus from campuses as t1 join faculty as t2 on t1 . id = t2 . campus where t2 . year = value and faculty > ( select max ( faculty ) from campuses as t1 join faculty as t2 on t1 . id = t2 . campus where t2 . year = value and t1 . year = value and faculty > ( select max ( faculty ) from campuses as t1 join faculty as t2 on t1 . id = t2 . campus where t2 . year = value and t1 . year = value and faculty > ( select max ( faculty ) from campuses as t1 join faculty as t2 on t1 . id = t2 . campus where t2
select t1 . campus , sum ( t2 . degrees ) from campuses as t1 join degrees as t2 on t1 . id = t2 . campus group by t1 . campus <n>
select t1 . campus , sum ( t2 . degrees ) from campuses as t1 join degrees as t2 on t1 . id = t2 . campus where t1 . county = value and t2 . year > = value <n>
select campus from campuses where county = value <n>
select t1 . campus from campuses as t1 join faculty as t2 on t1 . id = t2 . campus where t2 . year = value and faculty > ( select max ( faculty ) from campuses as t1 join faculty as t2 on t1 . id = t2 . campus where t2 . year = value and t1 . year = value <n>
select sum ( faculty ) , faculty from faculty as t1 join campuses as t2 on t1 . campus = t2 . id where t1 . year = value and t1 . year = value <n>
select faculty from faculty as t1 join campuses as t2 on t1 . campus = t2 . id where t1 . year = value and t2 . campus = value <n>
select campus from campuses where faculty > = value and faculty < value <n>
select t2 . faculty from campuses as t1 join faculty as t2 on t1 . id = t2 . campus join degrees as t3 on t1 . id = t3 . campus and t2 . year = t3 . year where t2 . year = value <n>
select sum ( t1 . undergraduate ) from discipline_enrollments as t1 join campuses as t2 on t1 . campus = t2 . id where t1 . year = value and t2 . campus = value <n>
select t1 . campusfee from csu_fees as t1 join campuses as t2 on t1 . campus = t2 . id where t2 . campus = value and t1 . year = value <n>
select count ( * ) from campuses <n>
select poll_source from candidate group by poll_source order by count ( * ) desc limit value <n>
select poll_source from candidate order by oppose_rate desc limit value <n>
select support_rate , consider_rate , oppose_rate from candidate order by support_rate <n>
select name from people order by weight <n>
select avg ( height ) , avg ( weight ) from people where sex = value <n>
select avg ( weight ) , min ( weight ) from people <n>
select name from candidate order by weight desc limit value <n>
select t1 . sex from people as t1 join candidate as t2 on t1 . people_id = t2 . people_id order by t1 . weight desc limit value <n>
select t1 . name from people as t1 join candidate as t2 on t1 . people_id = t2 . people_id where t2 . support_rate < t2 . oppose_rate <n>
select max ( support_rate ) , min ( support_rate ) from candidate <n>
select name from people order by weight desc <n>
select * from people <n>
select title from movie where year > ( select max ( year ) from movie where director = value ) <n>
select count ( * ) from movie where year < value <n>
select count ( * ) from reviewer <n>
select rid from reviewer where name = value <n>
select count ( * ) from rating <n>
select t1 . year , t1 . year from movie as t1 join movie as t2 on t1 . year = t2 . year where t2 . name = value <n>
select mid , avg ( stars ) from rating group by mid <n>
select title from movie where mid not in ( select mid from rating ) <n>
select max ( stars ) , min ( stars ) from rating <n>
select max ( stars ) , min ( stars ) from rating <n>
select distinct t2 . title from rating as t1 join movie as t2 on t1 . mid = t2 . mid join reviewer as t3 on t1 . rid = t3 . rid where t3 . name = value <n>
select t3 . title , t3 . title , t1 . director , t3 . title from rating as t1 join movie as t2 on t1 . mid = t2 . mid join reviewer as t3 on t1 . rid = t3 . rid order by t3 . name , t2 . title <n>
select distinct t2 . name from rating as t1 join movie as t2 on t1 . mid = t2 . mid where t1 . stars = value <n>
select director from movie where director ! = value group by director having count ( * ) = value <n>
select name , director from movie <n>
select title , director from movie where director ! = value <n>
select t1 . title , t1 . director from movie as t1 join movie as t2 on t1 . director = t2 . director where t1 . title ! = t2 . title order by t1 . director , t1 . title <n>
select director from movie where director ! = value group by director having count ( * ) = value <n>
select t2 . title , avg ( t1 . stars ) from rating as t1 join movie as t2 on t1 . mid = t2 . mid group by t1 . mid order by avg ( t1 . stars ) desc limit value <n>
select t2 . title , avg ( t1 . stars ) from rating as t1 join movie as t2 on t1 . mid = t2 . mid group by t1 . mid <n>
select title , director , director from movie <n>
select title , director from movie where title = value <n>
select title from movie where year = ( select max ( year ) from movie ) <n>
select distinct t1 . name from movie as t1 join rating as t2 on t1 . mid = t2 . mid join reviewer as t3 on t1 . rid = t3 . rid where t3 . name = value <n>
select t2 . title from rating as t1 join movie as t2 on t1 . mid = t2 . mid where t1 . stars ! = value <n>
select t2 . title , avg ( t1 . stars ) from rating as t1 join movie as t2 on t1 . mid = t2 . mid group by t1 . mid having avg ( t1 . stars ) > value <n>
select rid from rating except select rid from rating where stars = value <n>
select distinct t2 . title from rating as t1 join movie as t2 on t1 . mid = t2 . mid join reviewer as t3 on t1 . rid = t3 . rid where t3 . name = value or t2 . year > value <n>
select t2 . name from rating as t1 join reviewer as t2 on t1 . rid = t2 . rid where t1 . stars = value <n>
select count ( * ) from count * ) <n>
select distinct police_force from county_public_safety where location ! = value <n>
select min ( crime_rate ) , max ( crime_rate ) from county_public_safety <n>
select name from city order by population desc limit value <n>
select name from county_public_safety order by population desc limit value <n>
select name from city where county_id = ( select county_id from city order by police_officers desc limit value ) <n>
select t1 . crime_rate , t1 . crime_rate from city as t1 join county_public_safety as t2 on t1 . county_id = t2 . county_id order by t2 . white desc limit value <n>
select city from city where population > value <n>
select crime_rate from county_public_safety where population > value <n>
select location from county_public_safety group by location order by count ( * ) desc limit value <n>
select police_force from county_public_safety where location = value intersect select police_force from county_public_safety where location = value <n>
select name from city where county_id = ( select county_id from county_public_safety order by police_officers desc limit value ) <n>
select roomname from rooms where baseprice < value and beds = value and decor = value <n>
select maxoccupancy from reservations where checkin = value and firstname = value and lastname = value <n>
select kids from reservations where firstname = value and lastname = value <n>
select t2 . roomname , t1 . rate , t1 . checkin , t1 . checkout from reservations as t1 join rooms as t2 on t1 . room = t2 . roomid order by t1 . rate desc limit value <n>
select adults from reservations where checkin = value and firstname = value and lastname = value <n>
select sum ( beds ) from rooms where bedtype = value <n>
select roomname , baseprice from rooms order by baseprice desc limit value <n>
select bedtype , avg ( baseprice ) from rooms group by bedtype <n>
select kids from reservations where firstname = value and lastname = value <n>
select count ( * ) , t2 . roomid from reservations as t1 join rooms as t2 on t1 . room = t2 . roomid group by t1 . roomid <n>
select count ( * ) from rooms <n>
select count ( * ) from rooms where bedtype = value <n>
select roomname from rooms order by maxoccupancy desc limit value <n>
select roomname , bedtype from rooms where baseprice > value <n>
select count ( * ) from rooms where decor = value <n>
select roomname from rooms order by baseprice <n>
select bedtype , avg ( baseprice ) from rooms group by bedtype <n>
select roomname from rooms where bedtype = value or bedtype = value <n>
select roomid , roomname from rooms order by baseprice desc limit value <n>
select count ( * ) from rooms where roomid not in ( select distinct room from reservations ) <n>
select t2 . roomname , count ( * ) from reservations as t1 join rooms as t2 on t1 . room = t2 . roomid group by t1 . room order by count ( * ) desc limit value <n>
select roomname from rooms where baseprice between value and value <n>
select t1 . cmi_cross_ref_id from cmi_cross_references as t1 join council_tax as t2 on t1 . cmi_cross_ref_id = t2 . cmi_cross_ref_id group by t2 . cmi_cross_ref_id having count ( * ) = value <n>
select t1 . source_system_code , t1 . source_system_code from cmi_cross_references as t1 join council_tax as t2 on t1 . cmi_cross_ref_id = t2 . cmi_cross_ref_id group by t1 . cmi_cross_ref_id order by count ( * ) asc limit value <n>
select count ( distinct cmi_cross_ref_id ) from cmi_cross_ref_id <n>
select count ( * ) from t3 . join <n>
select distinct t2 . source_system_code from customer_master_index as t1 join cmi_cross_references as t2 on t1 . master_customer_id = t2 . master_customer_id where t1 . cmi_details = value <n>
select party_theme from party order by number_of_hosts desc limit value <n>
select first_year , last_year from party where party_theme = value or party_theme = value <n>
select avg ( number_of_hosts ) from party <n>
select nationality , count ( * ) from host group by nationality <n>
select nationality from host where host where age > value intersect select nationality from host where age < value <n>
select t3 . party_theme , t2 . name from party_host as t1 join host as t2 on t1 . host_id = t2 . host_id join party as t3 on t1 . party_id = t3 . party_id where t1 . name = value <n>
select location from party where number_of_hosts > value group by party having count ( * ) > = value <n>
select name , nationality from host <n>
select name from host where host_id not in ( select host_id from party_host ) <n>
select region , region_name from region order by region <n>
select t2 . region_name from affected_region as t1 join region as t2 on t1 . region_id = t2 . region_id join storm as t3 on t1 . storm_id = t3 . storm_id order by t3 . number_deaths desc limit value <n>
select count ( * ) from storm where number_deaths > value <n>
select avg ( damage_millions_usd ) , max ( damage_millions_usd ) from storm where max_speed > value <n>
select name , damage_millions_usd from storm order by damage_millions_usd desc <n>
select count ( distinct region_id ) from affected_region <n>
select t1 . region_name , count ( * ) from region as t1 join affected_region as t2 on t1 . region_id = t2 . region_id group by t1 . region_id <n>
select t2 . name , t1 . name from storm as t1 join affected_region as t2 on t1 . storm_id = t2 . storm_id group by t1 . storm_id order by count ( * ) desc limit value <n>
select name from storm where storm_id not in ( select storm_id from affected_region ) <n>
select name from storm where storm_id not in ( select storm_id from affected_region ) <n>
select region_name from region where region_id not in ( select region_id from affected_region ) <n>
select region_name from region where region_id not in ( select region_id from affected_region ) <n>
select t3 . region_name from affected_region as t1 join region as t2 on t1 . region_id = t2 . region_id join storm as t3 on t1 . storm_id = t3 . storm_id where t2 . region_name = value intersect select t3 . region_name from affected_region as t1 join region as t2 on t1 . region_id = t2 . region_id join storm as t3 on t1 . storm_id = t3 . storm_id where t2 . region_name = value <n>
select county_name , population from county <n>
select avg ( population ) from county <n>
select distinct district from election <n>
select delegate from election where district = value <n>
select delegate , committee from election <n>
select comptroller , comptroller from party where party = value <n>
select * from election <n>
select county_name , population from county <n>
select count ( * ) from election where county = value <n>
select t1 . delegate , t2 . party from election as t1 join party as t2 on t1 . party = t2 . party_id <n>
select t2 . comptroller from election as t1 join party as t2 on t1 . party = t2 . party_id where t1 . district = value <n>
select t1 . committee from election as t1 join party as t2 on t1 . party = t2 . party_id where t2 . party = value <n>
select t2 . party , count ( * ) from election as t1 join party as t2 on t1 . party = t2 . party_id group by t1 . party <n>
select county_name from county order by county_name desc <n>
select county_name from county order by population desc limit value <n>
select t1 . county_name from county as t1 join election as t2 on t1 . county_id = t2 . district group by t1 . county_id having count ( * ) > = value <n>
select party from party group by party having count ( * ) > = value <n>
select comptroller from party group by comptroller order by count ( * ) desc limit value <n>
select party from party where party_id not in ( select party from election ) <n>
select t2 . party from election as t1 join party as t2 on t1 . party = t2 . party_id where t1 . committee = value intersect select t2 . party from election as t1 join party as t2 on t1 . party = t2 . party_id where t1 . committee = value <n>
select name from journalist order by age desc <n>
select avg ( years_working ) from journalist where name = value <n>
select nationality from nationality group by nationality order by count ( * ) desc limit value <n>
select t3 . name , t3 . name from news_report as t1 join event as t2 on t1 . event_id = t2 . event_id join journalist as t3 on t1 . journalist_id = t3 . journalist_id <n>
select name from journalist where nationality = value <n>
select t1 . name , t2 . name from <n>
select fname from student <n>
select age from student <n>
select count ( * ) from student <n>
select major , count ( * ) from student group by major order by count ( major ) <n>
select count ( * ) from student <n>
select from where order by < = value <n>
select product_name , product_price from products order by product_price desc limit value <n>
select t2 . * from customers as t1 join customer_addresses as t2 on t1 . customer_id = t2 . customer_id where t1 . = = value <n>
select customer_name , customer_phone from customers order by date_became_customer <n>
select customer_name from customers where payment_method = ( select payment_method from customers group by payment_method order by count ( * ) desc limit value ) <n>
select t1 . customer_name from customers as t1 join order as t2 on t1 . customer_id = t2 . customer_id order by t2 . desc desc limit value <n>
select count ( * ) from authors <n>
select count ( * ) from papers <n>
select distinct t3 . name from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join inst as t3 on t2 . instid = t3 . instid where t1 . fname = value and t1 . lname = value <n>
select count ( * ) from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid where t1 . fname = value and t1 . lname = value <n>
select distinct t3 . name from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join inst as t3 on t2 . instid = t3 . instid where t1 . fname = value and t1 . lname = value <n>
select distinct t1 . fname , t1 . lname from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join inst as t3 on t2 . instid = t3 . instid where t3 . name = value <n>
select t1 . lname from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid where t3 . title = value <n>
select title from papers where title like value <n>
select count ( distinct t1 . title ) from papers as t1 join authorship as t2 on t1 . paperid = t2 . paperid join inst as t3 on t2 . instid = t3 . instid where t3 . name = value <n>
select count ( distinct t1 . title ) from papers as t1 join authorship as t2 on t1 . paperid = t2 . paperid join inst as t3 on t2 . instid = t3 . instid where t3 . name = value <n>
select t3 . title from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid join inst as t4 on t2 . instid = t4 . instid where t4 . country = value and t2 . authorder = value <n>
select t3 . title from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid join inst as t4 on t2 . instid = t4 . instid where t4 . country = value and t2 . authorder = value and t1 . lname = value <n>
select t1 . lname from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid group by t1 . fname , t1 . lname order by count ( * ) desc limit value <n>
select distinct t1 . title from papers as t1 join authorship as t2 on t1 . paperid = t2 . paperid join inst as t3 on t2 . instid = t3 . instid where t3 . name = value <n>
select title from papers where title like value <n>
select distinct t1 . fname from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join inst as t3 on t2 . instid = t3 . instid where t3 . name = value <n>
select t3 . title from authors as t1 join authorship as t2 on t1 . authid = t2 . authid join papers as t3 on t2 . paperid = t3 . paperid group by t3 . title order by count ( * ) desc limit value <n>
select lname from authors where fname = value and lname = value <n>
select fname from authors order by fname <n>
select lname , lname from authors order by lname <n>
select first_name from actor group by first_name order by count ( * ) desc limit value <n>
select first_name , last_name from actor group by first_name , last_name order by count ( * ) desc limit value <n>
select t2 . phone , t1 . email from customer as t1 join address as t2 on t2 . address_id = t1 . address_id where t1 . first_name = value <n>
select count ( * ) from address where district = value <n>
select t1 . title , t1 . film_id from film as t1 join inventory as t2 on t1 . film_id = t2 . film_id group by t1 . film_id <n>
select country , count ( * ) from city group by country <n>
select count ( * ) from customer where email like value <n>
select t1 . title , t2 . inventory_id from film as t1 join inventory as t2 on t1 . film_id = t2 . film_id join rental as t3 on t2 . inventory_id = t3 . inventory_id group by t2 . inventory_id order by t3 . name desc limit value <n>
select t1 . first_name , t1 . last_name , t1 . customer_id from staff as t1 join payment as t2 on t1 . staff_id = t2 . staff_id group by t2 . staff_id order by count ( * ) desc limit value <n>
select t2 . title , t1 . from film as t1 join film as t2 on t1 . film_id = t2 . film_id group by t1 . film_id order by count ( * ) desc limit value <n>
select amount from payment order by amount desc limit value <n>
select t1 . name from category as t1 join film_category as t2 on t1 . category_id = t2 . category_id join film as t3 on t2 . film_id = t3 . film_id where t3 . title = value <n>
select title , film_id from film where rental_rate = value group by title order by count ( * ) desc limit value <n>
select t1 . title , t1 . film_id from film as t1 join inventory as t2 on t1 . film_id = t2 . film_id group by t1 . film_id order by count ( * ) desc limit value <n>
select title from film where special_features like value <n>
select first_name , last_name , staff_id from staff <n>
select t1 . name from category as t1 join film_category as t2 on t1 . category_id = t2 . category_id join film as t3 on t2 . film_id = t3 . film_id where t3 . title = value <n>
select count ( distinct rating ) from film <n>
select count ( * ) from inventory where store_id = value <n>
select payment_date from payment order by payment_date asc limit value <n>
select title from film where length > value or rating = value except select title from film where replacement_cost > value or rating = value <n>
select distinct t1 . first_name , t1 . last_name from staff as t1 join rental as t2 on t1 . staff_id = t2 . staff_id join customer as t3 on t2 . customer_id = t3 . customer_id where t3 . first_name = value and t3 . last_name = value <n>
select store_id from customer group by store_id order by count ( * ) desc limit value <n>
select t2 . address from staff as t1 join address as t2 on t1 . address_id = t2 . address_id where t1 . first_name = value <n>
select count ( * ) from bank <n>
select sum ( no_of_customers ) from bank where city = value <n>
select avg ( no_of_customers ) from bank where state = value <n>
select t1 . city , t1 . state from bank as t1 join loan as t2 on t1 . branch_id = t2 . branch_id group by t1 . branch_id order by count ( * ) desc limit value <n>
select bname from bank where state = value <n>
select t1 . cust_name from customer as t1 join loan as t2 on t1 . cust_id = t2 . cust_id group by t1 . cust_name order by sum ( t2 . amount ) desc limit value <n>
select count ( distinct city ) from bank <n>
select count ( distinct state ) from bank <n>
select cust_name , acc_bal from customer where acc_type = value <n>
select cust_name from customer where acc_type = value intersect select cust_name from customer where acc_type = value <n>
select cust_name from customer except select t1 . cust_name from customer as t1 join loan as t2 on t1 . cust_id = t2 . cust_id where t2 . loan_type = value <n>
select t1 . cust_name from customer as t1 join loan as t2 on t1 . cust_id = t2 . cust_id where t2 . loan_type = value intersect select t1 . cust_name from customer as t1 join loan as t2 on t1 . cust_id = t2 . cust_id where t2 . loan_type = value intersect select t1 . cust_name from customer as t1 join loan as t2 on t1 . cust_id = t2 . cust_id where t2 . loan_type = value intersect select t1 . cust_name from customer as t1 join loan as t2 on t1 . cust_id = t2 . cust_id where t2 . loan_type = value intersect select t1 . cust_name from customer as t1 join loan as t2 on t1 . cust_id = t2 .
select bname from bank order by no_of_customers desc limit value <n>
select cust_name from customer order by credit_score limit value <n>
select sum ( t2 . amount ) from bank as t1 join loan as t2 on t1 . branch_id = t2 . branch_id where t1 . amount > value <n>
select acc_type , avg ( acc_bal ) from customer where acc_type = value group by acc_type <n>
select sum ( acc_bal ) , state from customer where credit_score > value group by state <n>
select t1 . cust_name from customer as t1 join loan as t2 on t1 . cust_id = t2 . cust_id group by t1 . cust_name having sum ( t2 . amount ) > value <n>
select t1 . bname from bank as t1 join loan as t2 on t1 . branch_id = t2 . branch_id group by t1 . bname order by sum ( t2 . amount ) desc limit value <n>
select t1 . bname from bank as t1 join loan as t2 on t1 . branch_id = t2 . branch_id group by t1 . bname order by sum ( t2 . amount ) desc limit value <n>
select distinct t1 . cust_name , t1 . acc_type from customer as t1 join loan as t2 on t1 . cust_id = t2 . cust_id where t1 . cust_id = value <n>
select t1 . city , t1 . city from bank as t1 join loan as t2 on t1 . branch_id = t2 . branch_id where t2 . loan_type = value <n>
select t2 . bname from loan as t1 join bank as t2 on t1 . branch_id = t2 . branch_id join customer as t3 on t1 . cust_id = t3 . cust_id where t3 . credit_score < value <n>
select avg ( credit_score ) from customer where cust_id in ( select cust_id from loan ) <n>
select count ( * ) from addresses <n>
select count ( * ) from distinct <n>
select t2 . cell_mobile_number , intersect from students as t1 join students as t2 on t1 . student_id = t2 . student_id group by t1 . student_id <n>
select last_name from teachers where last_name = value <n>
select first_name from teachers where last_name = value <n>
select * from assessment_notes order by date_of_notes desc <n>
select t1 . student_id , t2 . last_name from assessment_notes as t1 join students as t2 on t1 . student_id = t2 . student_id group by t1 . student_id order by count ( * ) desc limit value <n>
select t1 . student_id , t2 . city from student_addresses as t1 join students as t2 on t1 . student_id = t2 . student_id group by t1 . student_id order by avg ( monthly_rental ) desc limit value <n>
select last_name from teachers where last_name = value <n>
select t1 . student_id , t2 . zip_postcode from addresses as t1 join zip_postcode as t2 on t1 . address_id = t2 . address_id order by t2 . zip_postcode desc limit value <n>
select first_name , last_name from students where last_name = value <n>
select count ( * ) from students where student_id not in ( select student_id from students ) <n>
select t1 . engineer_id , t1 . maintenance_engineers from maintenance_engineers as t1 join engineer_visits as t2 on t1 . engineer_id = t2 . engineer_id group by t1 . engineer_id having count ( * ) > value <n>
select t1 . company_id , t1 . staff_name from staff as t1 join fault_log_parts as t2 on t1 . staff_id = t2 . staff_id group by t2 . staff_id having count ( * ) < = value <n>
select first_name , last_name , engineer_id from maintenance_engineers <n>
select t1 . asset_make , t1 . staff_name from staff as t1 join fault_log as t2 on t1 . staff_id = t2 . staff_id where t2 . first_name = value and t2 . last_name = value <n>
select count ( * ) from t1 as t1 join assets as t2 on t1 . <n>
select t1 . fault_log_entry_id , t1 . fault_description from fault_log as t1 join fault_log_parts as t2 on t1 . fault_log_entry_id = t2 . fault_log_entry_id group by t1 . fault_log_entry_id order by count ( * ) desc limit value <n>
select first_name , last_name from staff <n>
select distinct <n>
select t1 . company_name from third_party_companies as t1 join maintenance_contracts as t2 on t1 . company_id = t2 . company_id order by t2 . contract_start_date desc limit value <n>
select engineer_id from maintenance_engineers except select engineer_id from engineer_visits <n>
select t3 . , , t3 . time from station as t1 join route as t2 on t1 . id = t2 . station_id join train as t3 on t2 . train_id = t3 . id order by t2 . name like value <n>
select t1 . name from station as t1 join route as t2 on t1 . id = t2 . station_id group by t2 . station_id order by count ( * ) desc limit value <n>
select max ( t1 . station ) , t2 . name from max as t1 join station as t2 on t1 . station_id = t2 . station_id group by t2 . station_id having avg ( t1 . id ) > = value <n>
select t2 . id , t2 . local_authority from weekly_weather as t1 join station as t2 on t1 . station_id = t2 . station_id group by t1 . station_id order by avg ( t1 . desc ) desc limit value <n>
select count ( * ) from professor as t1 join department as t2 on t1 . dept_code = t2 . dept_code where dept_name = value <n>
select count ( distinct prof_num ) from class where crs_code = value <n>
select t2 . emp_fname , t1 . prof_office from professor as t1 join employee as t2 on t1 . emp_num = t2 . emp_num <n>
select school_code from department where dept_name = value <n>
select crs_credit , crs_description from course where crs_code = value <n>
select count ( distinct school_code ) from department where school_code = value <n>
select crs_credit , crs_description from course where crs_code = value <n>
select count ( * ) , school_code from department group by school_code <n>
select count ( * ) from course <n>
select count ( * ) from class as t1 join enroll as t2 on t1 . class_code = t2 . class_code where t1 . class = value <n>
select count ( * ) , dept_code from class as t1 join course as t2 on t1 . crs_code = t2 . crs_code group by dept_code <n>
select count ( * ) , t1 . school_code from department as t1 join professor as t2 on t1 . dept_code = t2 . dept_code group by t1 . school_code <n>
select t1 . school_code from department as t1 join professor as t2 on t1 . dept_code = t2 . dept_code group by t1 . school_code order by count ( * ) desc limit value <n>
select count ( * ) , dept_code from professor where prof_high_degree = value group by dept_code <n>
select sum ( t1 . crs_credit ) , t1 . dept_code from course as t1 join class as t2 on t1 . crs_code = t2 . crs_code group by t1 . dept_code <n>
select t2 . dept_name , avg ( t1 . stu_gpa ) from student as t1 join department as t2 on t1 . dept_code = t2 . dept_code group by t1 . dept_code order by avg ( t1 . stu_gpa ) desc limit value <n>
select count ( * ) from department <n>
select count ( * ) from course <n>
select count ( * ) from course where dept_name = value <n>
select count ( distinct class ) from class <n>
select t3 . dept_name from course as t1 join class as t2 on t1 . crs_code = t2 . crs_code join department as t3 on t1 . dept_code = t3 . dept_code group by t1 . dept_code order by sum ( t1 . crs_credit ) desc limit value <n>
select t1 . stu_fname , t1 . stu_lname , t4 . crs_description from student as t1 join enroll as t2 on t1 . stu_num = t2 . stu_num join class as t3 on t2 . class_code = t3 . class_code join course as t4 on t3 . crs_code = t4 . crs_code <n>
select t1 . stu_fname from student as t1 join enroll as t2 on t1 . stu_num = t2 . stu_num join class as t3 on t2 . class_code = t3 . class_code join course as t4 on t3 . crs_code = t4 . crs_code join department as t5 on t5 . dept_code = t4 . dept_code where t5 . dept_name = value intersect select t1 . stu_fname from student as t1 join enroll as t2 on t1 . stu_num = t2 . stu_num join class as t3 on t2 . class_code = t3 . class_code join course as t4 on t3 . crs_code = t4 . crs_code join department as t5 on t5 . dept_code = t4 . dept_code where t5 . dept_name = value intersect select
select count ( * ) from professor as t1 join department as t2 on t1 . dept_code = t2 . dept_code where t2 . dept_name = value <n>
select t2 . dept_name from student as t1 join department as t2 on t1 . dept_code = t2 . dept_code group by t1 . dept_code order by count ( * ) desc limit value <n>
select dept_name from department order by dept_name <n>
select emp_fname from employee where emp_jobcode = value order by emp_dob <n>
select emp_fname , emp_lname from employee <n>
select t1 . stu_fname , t1 . stu_lname , t4 . crs_description from student as t1 join enroll as t2 on t1 . stu_num = t2 . stu_num join class as t3 on t2 . class_code = t3 . class_code join course as t4 on t3 . crs_code = t4 . crs_code join department as t5 on t5 . dept_code = t4 . dept_code where t4 . dept_name = value <n>
select t2 . dept_name from professor as t1 join department as t2 on t1 . dept_code = t2 . dept_code group by t1 . dept_code order by count ( * ) desc limit value <n>
select t1 . emp_fname from employee as t1 join class as t2 on t1 . emp_num = t2 . prof_num where crs_code = value except select t1 . emp_fname from employee as t1 join class as t2 on t1 . emp_num = t2 . prof_num where crs_code = value <n>
select emp_fname from employee where emp_jobcode = value except select t1 . emp_fname from employee as t1 join class as t2 on t1 . emp_num = t2 . prof_num where crs_code = value <n>
select t2 . dept_name , t1 . dept_code from professor as t1 join department as t2 on t1 . dept_code = t2 . dept_code where t1 . emp_lname = value <n>
select t3 . stu_fname from class as t1 join enroll as t2 on t1 . class_code = t2 . class_code join student as t3 on t2 . stu_num = t3 . stu_num where t1 . crs_code = value <n>
select t3 . stu_fname from class as t1 join enroll as t2 on t1 . class_code = t2 . class_code join student as t3 on t2 . stu_num = t3 . stu_num where t1 . crs_code = value <n>
select count ( * ) from professor where prof_high_degree = value or prof_high_degree = value <n>
select t1 . stu_fname from student as t1 join enroll as t2 on t1 . stu_num = t2 . stu_num where t2 . enroll_grade = value and t2 . enroll_grade = value and t2 . enroll_grade = value <n>
select avg ( stu_gpa ) from student <n>
select t2 . dept_name from student as t1 join department as t2 on t1 . dept_code = t2 . dept_code order by stu_gpa limit value <n>
select t2 . dept_name , t2 . dept_address from student as t1 join department as t2 on t1 . dept_code = t2 . dept_code group by t1 . dept_code order by count ( * ) desc limit value <n>
select t2 . dept_name , t2 . dept_address , count ( * ) from student as t1 join department as t2 on t1 . dept_code = t2 . dept_code group by t1 . dept_code order by count ( * ) desc limit value <n>
select t2 . emp_fname , t3 . crs_description from class as t1 join employee as t2 on t1 . prof_num = t2 . emp_num join course as t3 on t1 . crs_code = t3 . crs_code <n>
select t2 . emp_fname , t1 . prof_office from professor as t1 join employee as t2 on t1 . emp_num = t2 . emp_num join department as t3 on t1 . dept_code = t3 . dept_code where t3 . dept_name = value <n>
select t1 . emp_fname , t2 . prof_office , t3 . dept_name from employee as t1 join professor as t2 on t1 . emp_num = t2 . emp_num join department as t3 on t3 . dept_code = t2 . dept_code where t3 . dept_name = value <n>
select t1 . stu_fname , t1 . stu_lname , t4 . crs_description from student as t1 join enroll as t2 on t1 . stu_num = t2 . stu_num join class as t3 on t2 . class_code = t3 . class_code join course as t4 on t3 . crs_code = t4 . crs_code join department as t5 on t5 . dept_code = t4 . dept_code where t4 . dept_name = value <n>
select t2 . emp_fname , t1 . prof_office from professor as t1 join employee as t2 on t1 . emp_num = t2 . emp_num join department as t3 on t1 . dept_code = t3 . dept_code where t3 . dept_name = value <n>
select t1 . stu_lname from student as t1 join enroll as t2 on t1 . stu_num = t2 . stu_num where t2 . enroll_grade = value and t2 . class_code = value <n>
select t1 . emp_fname from employee as t1 join class as t2 on t1 . emp_num = t2 . prof_num where crs_code = value <n>
select t4 . dept_name from class as t1 join enroll as t2 on t1 . class_code = t2 . class_code join course as t3 on t1 . crs_code = t3 . crs_code join department as t4 on t3 . dept_code = t4 . dept_code where t4 . dept_name = value <n>
select t3 . stu_fname from class as t1 join enroll as t2 on t1 . class_code = t2 . class_code join student as t3 on t2 . stu_num = t3 . stu_num where t1 . crs_code = value and t2 . enroll_grade = value <n>
select distinct region from club order by region asc <n>
select competition_type , country from competition <n>
select distinct year from competition where competition_type ! = value <n>
select count ( * ) from club <n>
select name from club order by name desc <n>
select name , player from club <n>
select avg ( t2 . points ) from club as t1 join player as t2 on t1 . club_id = t2 . club_id where t1 . name = value <n>
select position from player group by position having avg ( points ) > = value <n>
select competition_type , count ( * ) from competition group by competition_type <n>
select competition_type from competition group by competition_type having count ( * ) > = value <n>
select position from player where points > value intersect select position from player where points < value <n>
select count ( * ) from player <n>
select name from player where points > ( select avg ( points ) from player ) <n>
select country from competition where competition_type = value group by country order by count ( * ) desc limit value <n>
select country from competition where competition_type = value intersect select competition_type from competition where competition_type = value <n>
select count ( * ) from sum where <n>
select t1 . name , t2 . name from furniture as t1 join furniture_manufacte as t2 on t1 . furniture_id = t2 . furniture_id <n>
select t3 . name from furniture as t1 join furniture_manufacte as t2 on t1 . furniture_id = t2 . furniture_id join manufacturer as t3 on t2 . manufacturer_id = t3 . manufacturer_id where t1 . num_of_component < value <n>
select count ( * ) from furniture where manufacturer_id not in ( select manufacturer_id from furniture_manufacte ) <n>
select t1 . name , t3 . name from furniture as t1 join furniture_manufacte as t2 on t1 . furniture_id = t2 . furniture_id join manufacturer as t3 on t2 . manufacturer_id = t3 . manufacturer_id where t3 . name = value <n>
select first_name , department_id from employees order by department_id <n>
select t1 . first_name , t1 . last_name , t1 . department_id , t1 . department_id from employees as t1 join departments as t2 on t1 . department_id = t2 . department_id join locations as t3 on t2 . location_id = t3 . location_id join countries as t4 on t3 . country_id = t4 . country_id where t3 . last_name = value <n>
select * from departments where department_name = value <n>
select hire_date from employees where first_name not like value <n>
select first_name , last_name , hire_date , salary , department_id from employees where first_name not like value order by department_id having hire_date <n>
select * from employees where department_id not in ( select department_id from departments where manager_id between value and value ) <n>
select first_name , last_name , salary from employees as t1 join departments as t2 on t1 . department_id = t2 . department_id join locations as t3 on t2 . location_id = t3 . location_id join countries as t4 on t3 . country_id = t4 . country_id <n>
select job_id , hire_date from employees where hire_date between value and value <n>
select salary , manager_id from employees where manager_id ! = value <n>
select * from employees where hire_date < value <n>
select * from employees where hire_date < value <n>
select job_id , hire_date from employees where salary between value and value <n>
select * from employees where department_id = value <n>
select distinct department_id from employees group by department_id , manager_id having count ( employee_id ) > = value <n>
select department_id , avg ( salary ) from employees group by department_id <n>
select country_id , count ( * ) from locations group by country_id <n>
select employee_id from job_history group by employee_id having count ( * ) > = value <n>
select department_name , count ( * ) from employees as t1 join departments as t2 on t1 . department_id = t2 . department_id group by department_name <n>
select job_id from employees group by job_id having count ( * ) > = value <n>
select first_name , last_name from employees where salary between value and value <n>
select t1 . first_name , t2 . last_name , t2 . department_name from employees as t1 join departments as t2 on t1 . department_id = t2 . department_id join locations as t3 on t2 . location_id = t3 . location_id where t3 . city = value order by t1 . salary having count ( * ) > = value <n>
select employee_id from employees where employee_id > ( select avg ( salary ) from employees ) <n>
select distinct t2 . department_name from employees as t1 join departments as t2 on t1 . department_id = t2 . department_id where t1 . department_name = value or t1 . department_id = value <n>
select * from departments where department_name = value <n>
select employee_id from job_history group by employee_id having count ( * ) > = value <n>
select job_id from employees group by job_id having avg ( salary ) > value <n>
select t1 . first_name , t2 . job_id from employees as t1 join departments as t2 on t1 . department_id = t2 . department_id where t1 . department_id = value <n>
select * from employees where salary between value and value <n>
select employee_id , first_name , last_name , hire_date from employees where first_name = value <n>
select employee_id , first_name , last_name from employees where department_id in ( select department_id from employees where first_name like value ) <n>
select employee_id , first_name , last_name , salary from employees where salary > ( select avg ( salary ) from employees ) <n>
select employee_id , first_name , last_name , job_id from employees where salary > ( select max ( salary ) from employees where job_id = value ) <n>
select * from employees where employee_id not in ( select employee_id from job_history ) <n>
select department_id , first_name , last_name , salary from employees as t1 join departments as t2 on t1 . department_id = t2 . department_id join locations as t3 on t2 . location_id = t3 . location_id join countries as t4 on t3 . country_id = t4 . country_id <n>
select first_name , last_name , hire_date from employees where department_id = ( select department_id from employees where first_name = value ) and first_name = value ) <n>
select t1 . first_name , t1 . last_name from employees as t1 join departments as t2 on t1 . department_id = t2 . department_id join locations as t3 on t2 . location_id = t3 . location_id join countries as t4 on t3 . country_id = t4 . country_id where t3 . employees = value <n>
select department_name , count ( * ) from employees as t1 join departments as t2 on t1 . department_id = t2 . department_id group by department_name <n>
select song_name , releasedate from song order by releasedate desc limit value <n>
select song_name from song where languages = value <n>
select f_id from files order by duration desc limit value <n>
select distinct t1 . file_size , t1 . formats from files as t1 join song as t2 on t1 . f_id = t2 . f_id where t2 . resolution < value <n>
select t1 . artist_name , t1 . country from artist as t1 join song as t2 on t1 . artist_name = t2 . artist_name order by t2 . resolution limit value <n>
select count ( * ) from song where languages = value <n>
select avg ( f_id ) from song where languages = value <n>
select distinct artist_name from artist where country = value except select distinct artist_name from song where languages = value <n>
select max ( t1 . duration ) , t2 . languages from files as t1 join song as t2 on t1 . f_id = t2 . f_id group by t2 . genre_is order by t2 . genre_is <n>
select avg ( t1 . duration ) from files as t1 join song as t2 on t1 . f_id = t2 . f_id where t1 . formats = value and t2 . resolution < value <n>
select avg ( rating ) , languages from song group by languages <n>
select t1 . gender , t1 . artist_name from artist as t1 join song as t2 on t1 . artist_name = t2 . artist_name order by t2 . resolution limit value <n>
select distinct song_name from song where resolution > ( select min ( resolution ) from song where languages = value ) <n>
select t1 . artist_name , t1 . country from artist as t1 join song as t2 on t1 . artist_name = t2 . artist_name where t2 . resolution > value group by t2 . artist_name order by count ( * ) desc limit value <n>
select t1 . artist_name , t1 . gender from artist as t1 join song as t2 on t1 . artist_name = t2 . artist_name where t2 . languages = value group by t2 . artist_name order by count ( * ) desc limit value <n>
select t2 . song_name from files as t1 join song as t2 on t1 . f_id = t2 . f_id order by t1 . duration desc limit value <n>
select song_name from song where genre_is = value or languages = value <n>
select languages from song group by languages order by count ( * ) desc limit value <n>
select artist_name from artist where country = value intersect select artist_name from song where languages = value <n>
select t1 . artist_name , t1 . country from artist as t1 join song as t2 on t1 . artist_name = t2 . artist_name where t2 . resolution > value intersect select t1 . artist_name from artist as t1 join song as t2 on t1 . artist_name = t2 . artist_name where t2 . languages = value <n>
select artist_name from song where resolution > value intersect select artist_name from song where languages = value <n>
select max ( t2 . resolution ) , min ( t2 . resolution ) from files as t1 join song as t2 on t1 . f_id = t2 . f_id where t1 . duration like value <n>
select t1 . duration , t1 . file_size from files as t1 join song as t2 on t1 . f_id = t2 . f_id where t2 . genre_is = value <n>
select t1 . artist_name , count ( * ) from artist as t1 join song as t2 on t1 . artist_name = t2 . artist_name where t2 . languages = value group by t2 . artist_name having count ( * ) > = value <n>
select t1 . artist_name , count ( * ) from artist as t1 join song as t2 on t1 . artist_name = t2 . artist_name where t2 . languages = value group by t2 . artist_name order by count ( * ) desc limit value <n>
select song_name from song where rating < ( select max ( rating ) from song where languages = value ) <n>
select f_id from song where resolution > ( select max ( resolution ) from song where rating < value ) <n>
select artist_name from song where resolution > value group by languages order by count ( * ) desc limit value <n>
select t1 . duration , t1 . file_size , t1 . formats from files as t1 join song as t2 on t1 . f_id = t2 . f_id where t2 . genre_is = value order by t2 . song_name <n>
select distinct artist_name from song where languages = value except select distinct artist_name from song where rating > value <n>
select t1 . name_full , t1 . college_id from college as t1 join player_college as t2 on t1 . college_id = t2 . college_id group by t1 . college_id order by count ( * ) desc limit value <n>
select t1 . name_first , t1 . name_last from player as t1 join player_award as t2 where t2 . year = value <n>
select t1 . name_first , t1 . name_last , t1 . player_id from player as t1 join player_award as t2 on t1 . player_id = t2 . player_id group by t1 . player_id order by count ( * ) desc limit value <n>
select year , avg ( attendance ) from home_game group by year <n>
select t1 . name_first , t1 . name_last , t1 . player_id from player as t1 join player_award as t2 on t1 . player_id = t2 . player_id group by t1 . player_id order by count ( * ) desc limit value <n>
select count ( * ) from park where state = value <n>
select birth_country from player group by birth_country order by count ( * ) desc limit value <n>
select count ( * ) from player where birth_country = value and bats = value <n>
select avg ( t1 . height ) from player as t1 join player_college as t2 on t1 . player_id = t2 . player_id join college as t3 on t3 . college_id = t2 . college_id where t3 . name_full = value <n>
select t1 . name , t1 . team_id from team as t1 join salary as t2 on t1 . team_id = t2 . team_id group by t1 . team_id <n>
select name_first , name_last from player where death_year = value or player > value <n>
select max ( t1 . wins ) from postseason as t1 join team as t2 on t1 . team_id_winner = t2 . team_id_br where t2 . name = value <n>
select t2 . name , t1 . team_id_winner from postseason as t1 join team as t2 on t1 . team_id_winner = t2 . team_id_br where t1 . year = value group by t1 . team_id_winner order by count ( * ) desc limit value <n>
select sum ( t1 . games ) from home_game as t1 join team as t2 on t1 . team_id = t2 . team_id_br where t2 . name = value and t1 . year between value and value <n>
select count ( * ) from postseason as t1 join team as t2 on t1 . team_id_loser = t2 . team_id_br where t2 . name = value and t1 . year = value <n>
select count ( * ) from player where team = value <n>
select salary from salary where year = value union select salary from salary where year = value <n>
select yearid from hall_of_fame group by yearid order by count ( * ) asc limit value <n>
select count ( * ) from home_game as t1 join park as t2 on t1 . park_id = t2 . park_id where t1 . year = value and t2 . park_name = value <n>
select sum ( t1 . games ) from home_game as t1 join team as t2 on t1 . team_id = t2 . team_id_br where t2 . name = value and t1 . year between value and value <n>
select sum ( t1 . salary ) from salary as t1 join player as t2 on t1 . player_id = t2 . player_id where t2 . name_first = value and t2 . name_last = value <n>
select sum ( t1 . games ) from home_game as t1 join team as t2 on t1 . team_id = t2 . team_id_br where t2 . name = value and t1 . year between value and value <n>
select state from park group by state having count ( * ) > value <n>
select count ( * ) from postseason as t1 join team as t2 on t1 . team_id_loser = t2 . team_id_br where t2 . name = value and t1 . year = value <n>
select t2 . park_name from home_game as t1 join park as t2 on t1 . park_id = t2 . park_id where t1 . year = value order by t1 . attendance desc limit value <n>
select t1 . id , t1 . name , t1 . name from <n>
select name , height from mountain where height > value <n>
select t1 . name from mountain as t1 join photos as t2 on t1 . id = t2 . mountain_id join camera_lens as t3 on t2 . camera_lens_id = t3 . id where t3 . name = value <n>
select count ( distinct brand ) from camera_lens <n>
select t1 . name from camera_lens as t1 join photos as t2 on t2 . camera_lens_id = t1 . id where t1 . name = value <n>
select name from channel where owner ! = value <n>
select owner from channel order by rating_in_percent desc limit value <n>
select t1 . name , t1 . name , t1 . name from program as t1 join broadcast as t2 on t1 . program_id = t2 . program_id order by t2 . name limit value <n>
select name , origin , owner from program <n>
select sum ( share_in_percent ) from channel <n>
select t1 . name from channel as t1 join broadcast as t2 on t1 . channel_id = t2 . channel_id where t2 . time_of_day = value intersect select t1 . name from channel as t1 join broadcast as t2 on t1 . channel_id = t2 . channel_id where t2 . time_of_day = value <n>
select count ( * ) , t1 . name from program as t1 join broadcast as t2 on t1 . program_id = t2 . program_id group by t1 . owner <n>
select name from program where origin ! = value <n>
select name from program order by launch <n>
select count ( distinct owner ) from channel <n>
select name from channel where owner = value or owner = value <n>
select name from program order by launch desc limit value <n>
select count ( * ) from courses <n>
select t1 . address_line_1 from course_authors_and_tutors as t1 join courses as t2 on t1 . author_id = t2 . author_id where t2 . course_name = value or t2 . course_name = value <n>
select login_name , family_name from course_authors_and_tutors <n>
select date_of_enrolment , date_of_completion from student_course_enrolment <n>
select count ( * ) from courses <n>
select count ( * ) from student_tests_taken where test_result = value <n>
select login_name from students where family_name = value <n>
select count ( * ) from students where personal_name = value <n>
select * from course_authors_and_tutors order by personal_name <n>
select personal_name , family_name from students order by family_name <n>
select t1 . course_name from courses as t1 join course_authors_and_tutors as t2 on t1 . course_id = t2 . course_id where t2 . course_name = value <n>
select t1 . personal_name , t1 . family_name , t2 . author_id from course_authors_and_tutors as t1 join courses as t2 on t1 . author_id = t2 . author_id group by t2 . author_id order by count ( * ) desc limit value <n>
select t1 . address_line_1 , t2 . author_id from course_authors_and_tutors as t1 join courses as t2 on t1 . author_id = t2 . author_id group by t2 . author_id having count ( * ) > = value <n>
select t1 . course_name , t1 . course_description from courses as t1 join subjects as t2 on t1 . subject_id = t2 . subject_id where t1 . course_description like value <n>
select t1 . subject_id , t2 . subject_name , count ( * ) from courses as t1 join subjects as t2 on t1 . subject_id = t2 . subject_id group by t1 . subject_id order by count ( * ) desc <n>
select t1 . date_of_enrolment from student_course_enrolment as t1 join student_tests_taken as t2 on t1 . registration_id = t2 . registration_id where t2 . test_result = value <n>
select t1 . course_name from courses as t1 join student_course_enrolment as t2 on t1 . course_id = t2 . course_id group by t1 . course_name having count ( * ) > = value <n>
select t1 . course_name , count ( * ) from courses as t1 join student_course_enrolment as t2 on t1 . course_id = t2 . course_id group by t1 . course_name <n>
select t1 . date_of_enrolment from student_course_enrolment as t1 join student_tests_taken as t2 on t1 . registration_id = t2 . registration_id where t2 . test_result = value <n>
select t1 . date_of_enrolment from student_course_enrolment as t1 join students as t2 on t1 . student_id = t2 . student_id where t2 . family_name = value and t2 . personal_name = value <n>
select t1 . student_id , t2 . middle_name from student_course_enrolment as t1 join students as t2 on t1 . student_id = t2 . student_id group by t1 . student_id order by count ( * ) desc limit value <n>
select t1 . student_id , t2 . personal_name from student_course_enrolment as t1 join students as t2 on t1 . student_id = t2 . student_id group by t1 . student_id having count ( * ) < = value <n>
select personal_name from students except select t1 . personal_name from students as t1 join student_course_enrolment as t2 on t1 . student_id = t2 . student_id where t2 . family_name = value <n>
select t1 . login_name from course_authors_and_tutors as t1 join courses as t2 on t1 . author_id = t2 . author_id intersect select t1 . login_name from course_authors_and_tutors as t1 join courses as t2 on t1 . author_id = t2 . author_id where t2 . course_name = value <n>
select personal_name from course_authors_and_tutors intersect select personal_name from students <n>
select t1 . customer_details , t1 . customer_id from customers as t1 join customer_policies as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id having count ( * ) > = value <n>
select amount_settled , amount_claimed from claims order by amount_settled desc limit value <n>
select amount_settled , amount_claimed from claims order by amount_settled asc limit value <n>
select date_claim_made from claims where amount_settled < = ( select avg ( amount_settled ) from claims ) <n>
select t1 . claim_id , t1 . date_claim_made , count ( * ) from claims as t1 join settlements as t2 on t1 . claim_id = t2 . claim_id group by t1 . claim_id order by count ( * ) desc limit value <n>
select t1 . claim_id , t1 . date_claim_made , count ( * ) from claims as t1 join settlements as t2 on t1 . claim_id = t2 . claim_id group by t1 . claim_id order by count ( * ) desc limit value <n>
select sum ( amount_settled ) from settlements <n>
select date_claim_made , date_claim_settled from claims <n>
select payment_method_code from payments group by payment_method_code order by count ( * ) desc limit value <n>
select sum ( amount_payment ) from payments <n>
select policy_type_code from customer_policies group by policy_type_code order by count ( * ) desc limit value <n>
select count ( * ) from count ( select sum ( count ( * ) from amount_settled <n>
select customer_details from customers except select t1 . customer_details from customers as t1 join customer_policies as t2 on t1 . customer_id = t2 . customer_id where t2 . customer_id = value <n>
select sum ( amount_claimed ) from claims <n>
select department from department group by department order by count ( * ) desc limit value <n>
select t1 . name , t1 . position from department as t1 join departmentid as t2 on t1 . ssn = t2 . departmentid group by t2 . departmentid order by count ( * ) desc limit value <n>
select t1 . name , t2 . name from appointment as t1 join patient as t2 on t1 . patient = t2 . ssn join name as t3 on t2 . ssn = t3 . name where t3 . name = value <n>
select appointmentid from appointment order by start desc limit value <n>
select name from physician except select t2 . name from appointment as t1 join physician as t2 on t1 . physician = t2 . employeeid <n>
select t1 . name from patient as t1 join appointment as t2 on t1 . ssn = t2 . patient order by t2 . start desc limit value <n>
select count ( patient ) from stay where room = value <n>
select patient from stay where room = value <n>
select t1 . name from physician as t1 join patient as t2 on t1 . employeeid = t2 . pcp order by t2 . desc desc limit value <n>
select t1 . name , count ( * ) from physician as t1 join patient as t2 on t1 . employeeid = t2 . pcp group by t1 . employeeid <n>
select count ( * ) , t1 . blockcode from block as t1 join room as t2 on t1 . blockfloor = t2 . blockfloor and t1 . blockcode = t2 . blockcode group by t1 . blockcode <n>
select distinct blockcode from room where unavailable = value <n>
select count ( * ) from distinct <n>
select distinct t1 . name , t1 . position from physician as t1 join prescribes as t2 on t1 . employeeid = t2 . physician join medication as t3 on t3 . code = t2 . medication where t3 . name = value <n>
select t1 . name from physician as t1 join affiliated_with as t2 on t1 . employeeid = t2 . physician join department as t3 on t2 . department = t3 . departmentid where t3 . name = value <n>
select patient from undergoes order by dateundergoes limit value <n>
select distinct name from nurse order by name <n>
select distinct name from nurse order by name <n>
select t1 . name from physician as t1 join patient as t2 on t1 . employeeid = t2 . pcp order by t2 . dose desc limit value <n>
select t1 . name from department as t1 join physician as t2 on t1 . physician = t2 . department join department as t3 on t2 . department = t3 . departmentid where t3 . name = value <n>
select max ( cost ) , min ( cost ) , avg ( cost ) from cost <n>
select name , name from procedures order by cost desc <n>
select t1 . name from physician as t1 join trained_in as t2 on t1 . employeeid = t2 . physician join procedures as t3 on t3 . code = t2 . treatment where t3 . cost > value <n>
select avg ( t3 . cost ) from physician as t1 join trained_in as t2 on t1 . employeeid = t2 . physician join procedures as t3 on t3 . code = t2 . treatment where t1 . name = value <n>
select name from procedures order by cost limit value <n>
select name from procedures where cost > value except select t3 . name from physician as t1 join trained_in as t2 on t1 . employeeid = t2 . physician join procedures as t3 on t3 . code = t2 . treatment where t1 . name = value <n>
select t1 . name from physician as t1 join affiliated_with as t2 on t1 . employeeid = t2 . physician join department as t3 on t2 . department = t3 . departmentid where t3 . name = value intersect select t1 . name from physician as t1 join affiliated_with as t2 on t1 . employeeid = t2 . physician join department as t3 on t2 . department = t3 . departmentid where t3 . name = value <n>
select t1 . name from physician as t1 join affiliated_with as t2 on t1 . employeeid = t2 . physician join department as t3 on t2 . department = t3 . departmentid where t3 . name = value or t3 . name = value <n>
select count ( * ) from patient where ssn not in ( select t1 . patient from prescribes as t1 join medication as t2 on t1 . medication = t2 . code where t2 . name = value ) <n>
select nurse from on_call where blockfloor = value <n>
select count ( * ) from ship <n>
select type , nationality from ship <n>
select name from ship where nationality = value or nationality = value <n>
select name from ship where nationality = value <n>
select type from ship group by type order by count ( * ) desc limit value <n>
select type , avg ( tonnage ) from ship group by type <n>
select t1 . code , t1 . name , t1 . name from ship as t1 join ship as t2 on t1 . ship_id = t2 . ship_id order by t2 . name limit value <n>
select distinct t1 . fate from mission as t1 join ship as t2 on t1 . ship_id = t2 . ship_id where t2 . nationality = value <n>
select type from ship where tonnage > value intersect select type from ship where tonnage < value <n>
select count ( * ) from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t2 . firstname = value and t2 . lastname = value <n>
select firstname from list where classroom = value <n>
select classroom , count ( * ) from list where grade = value group by classroom <n>
select distinct grade from list where classroom = value <n>
select distinct grade from list where classroom = value <n>
select distinct t1 . lastname from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t1 . grade = value and t2 . firstname = value and t2 . lastname = value <n>
select distinct t2 . firstname from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t1 . grade = value <n>
select lastname from teachers where classroom = value <n>
select firstname , lastname from list <n>
select t1 . firstname , t1 . lastname from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t2 . firstname = value and t2 . lastname = value <n>
select t1 . firstname , t1 . lastname from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t2 . firstname = value and t2 . lastname = value <n>
select count ( * ) from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t2 . firstname = value and t2 . lastname = value <n>
select count ( * ) from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t1 . firstname = value and t1 . lastname = value <n>
select count ( * ) from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t1 . firstname = value and t1 . lastname = value <n>
select distinct t1 . firstname , t1 . lastname from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t1 . grade = value <n>
select distinct t1 . lastname from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t1 . grade = value and t2 . firstname ! = value and t2 . lastname ! = value <n>
select classroom , count ( distinct grade ) from list group by classroom <n>
select classroom , count ( * ) from list where grade = value group by classroom <n>
select classroom , count ( * ) from list where grade = value group by classroom <n>
select t1 . firstname , t1 . lastname from list as t1 join teachers as t2 on t1 . classroom = t2 . classroom where t2 . firstname = value and t2 . lastname = value <n>
select count ( * ) from company <n>
select t3 . name from company as t1 join company as t2 on t1 . people_id = t2 . people_id join company as t3 on t2 . people_id = t3 . people_id where t1 . company = value <n>
select headquarters from company group by headquarters order by count ( * ) desc limit value <n>
select t3 . name , t2 . name from employment as t1 join people as t2 on t1 . people_id = t2 . people_id join company as t3 on t1 . company_id = t3 . company_id <n>
select t3 . name , count ( * ) from employment as t1 join people as t2 on t1 . people_id = t2 . people_id join company as t3 on t2 . people_id = t3 . people_id group by t3 . name <n>
select count ( * ) from film <n>
select avg ( gross_in_dollar ) from film <n>
select t1 . title , t2 . director from film as t1 join film_market_estimation as t2 on t1 . film_id = t2 . film_id <n>
select max ( number_cities ) , min ( number_cities ) from market <n>
select country from market order by country asc <n>
select country from market order by number_cities desc <n>
select distinct t1 . director from film as t1 join film_market_estimation as t2 on t1 . film_id = t2 . film_id where t2 . director = value <n>
select t2 . country , t1 . year from film_market_estimation as t1 join market as t2 on t1 . market_id = t2 . market_id <n>
select year from film_market_estimation order by year desc <n>
select studio from film group by studio order by count ( * ) desc limit value <n>
select title from film where film_id not in ( select film_id from film_market_estimation ) <n>
select studio from film where director = value intersect select studio from film where director = value <n>
select studio from film except select studio from film where director = value <n>
select title from film where film_id in ( select film_id from film_market_estimation ) <n>
select title , director from film where film_id not in ( select film_id from film_market_estimation ) <n>
select t1 . except , t2 . employee_name from employees as t1 join roles as t2 on t1 . role_code = t2 . role_code <n>
select document_type_code , document_type_name from ref_document_types <n>
select document_type_name , document_type_description from ref_document_types where document_type_code = value <n>
select count ( * ) from all_documents where document_type_code = value <n>
select t2 . < , t1 . date_stored from all_documents as t1 join ref_calendar as t2 on t1 . document_id = t2 . document_id <n>
select t2 . document_type_name from all_documents as t1 join ref_document_types as t2 on t1 . document_type_code = t2 . document_type_code where t1 . document_name = value <n>
select location_code , location_name from ref_locations <n>
select location_code from ref_locations where location_name = value <n>
select count ( * ) from ref_locations <n>
select role_name , role_description from roles where role_code = value <n>
select count ( * ) from employees <n>
select employee_name , role_code , date_of_birth from employees where role_code = value <n>
select t1 . employee_name from employees as t1 join roles as t2 on t1 . role_code = t2 . role_code where t2 . role_name = value <n>
select role_code from employees group by role_code order by count ( * ) asc limit value <n>
select role_code from employees group by role_code having count ( * ) > = value <n>
select t2 . role_name , t2 . role_description from employees as t1 join roles as t2 on t1 . role_code = t2 . role_code where t1 . employee_name = value <n>
select t1 . employee_id from employees as t1 join roles as t2 on t1 . role_code = t2 . role_code where t2 . role_name = value or t2 . role_name = value <n>
select distinct location_code from document_locations <n>
select location_code , date_in_location_from , date_in_locaton_to from document_locations <n>
select location_code , count ( * ) from document_locations group by location_code <n>
select location_code from document_locations group by location_code order by count ( * ) desc limit value <n>
select location_code , date_in_location_from from document_locations group by location_code order by count ( * ) desc limit value <n>
select destruction_authorised_by_employee_id , count ( * ) from documents_to_be_destroyed group by destruction_authorised_by_employee_id <n>
select destruction_authorised_by_employee_id , count ( * ) from documents_to_be_destroyed group by destruction_authorised_by_employee_id <n>
select employee_id from employees where employee_name = value <n>
select employee_id from employees except select destruction_authorised_by_employee_id from documents_to_be_destroyed <n>
select destroyed_by_employee_id from documents_to_be_destroyed union select destruction_authorised_by_employee_id from documents_to_be_destroyed <n>
select clubname from club <n>
select fname from student where major = value <n>
select t3 . lname from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value <n>
select t3 . age from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value <n>
select count ( * ) from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value <n>
select count ( * ) from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value and t3 . major = value <n>
select t3 . fname , t3 . lname from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value <n>
select t1 . clubname from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t3 . major = value group by t1 . clubname order by count ( * ) desc limit value <n>
select t1 . clubname from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t3 . major = value group by t1 . clubname order by count ( * ) desc limit value <n>
select clubdesc from club where clubname = value <n>
select clublocation from club where clubname = value <n>
select clublocation from club where clubname = value <n>
select count ( * ) from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t3 . major = value and t3 . lname = value <n>
select t3 . fname , t3 . lname from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value <n>
select count ( distinct position ) from club <n>
select count ( * ) from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t3 . major = value and t3 . lname = value <n>
select distinct t1 . clubname from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t3 . city_code = value <n>
select count ( * ) from student where city_code = value <n>
select distinct t1 . clubname from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t3 . advisor = value or t3 . major = value <n>
select avg ( t3 . age ) from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value <n>
select avg ( t3 . age ) from club as t1 join member_of_club as t2 on t1 . clubid = t2 . clubid join student as t3 on t2 . stuid = t3 . stuid where t1 . clubname = value <n>
select t1 . project_details from projects as t1 join project_outcomes as t2 on t1 . project_id = t2 . project_id join research_outcomes as t3 on t2 . outcome_code = t3 . outcome_code where t3 . outcome_description < value <n>
select date_from , date_to from project_staff where project_id in ( select project_id from project_staff group by project_id order by count ( * ) desc limit value ) union select date_from , date_to from project_staff where role_code = value <n>
select t1 . organisation_id , t1 . organisation_type from organisations as t1 join research_staff as t2 on t1 . organisation_id = t2 . employer_organisation_id group by t1 . organisation_id having count ( * ) > value <n>
select t1 . organisation_type from organisations as t1 join research_staff as t2 on t1 . organisation_id = t2 . employer_organisation_id group by t1 . organisation_type order by count ( * ) desc limit value <n>
select t1 . sent_date from documents as t1 join grants as t2 on t1 . grant_id = t2 . grant_id join organisations as t3 on t2 . organisation_id = t3 . organisation_id join organisation_types as t4 on t3 . organisation_type = t4 . organisation_type where t2 . grant_amount > value or t1 . document_type_code = value <n>
select project_details from projects where project_id not in ( select project_id from project_staff where role_code = value ) <n>
select date_from , date_to from project_staff where role_code = value <n>
select sum ( grant_amount ) , organisation_id from grants group by organisation_id order by sum ( organisation_id ) desc limit value <n>
select t1 . project_details from projects as t1 join project_outcomes as t2 on t1 . project_id = t2 . project_id join research_outcomes as t3 on t2 . outcome_code = t3 . outcome_code where t3 . outcome_description like value <n>
select role_description from staff_roles where role_code = value <n>
select t1 . project_details , t1 . project_id from projects as t1 join project_outcomes as t2 on t1 . project_id = t2 . project_id group by t1 . project_id order by count ( * ) desc limit value <n>
select project_details from projects where project_id not in ( select project_id from project_staff ) <n>
select t1 . project_id , t1 . date_from , t1 . project_id from project_staff as t1 join projects as t2 on t1 . project_id = t2 . project_id group by t1 . project_id order by count ( * ) desc limit value <n>
select t1 . grant_start_date from grants as t1 join documents as t2 on t1 . grant_id = t2 . grant_id join document_types as t3 on t2 . document_type_code = t3 . document_type_code where t3 . document_description = value intersect select t1 . grant_start_date from grants as t1 join documents as t2 on t1 . grant_id = t2 . grant_id join document_types as t3 on t2 . document_type_code = t3 . document_type_code where t3 . document_description = value <n>
select grant_id , count ( * ) from documents group by grant_id order by count ( * ) desc limit value <n>
select organisation_details from organisations as t1 join organisation_types as t2 on t1 . organisation_type = t2 . organisation_type where t2 . organisation_type_description = value intersect select organisation_details from organisations as t1 join organisation_types as t2 on t1 . organisation_type = t2 . organisation_type where t2 . organisation_type_description = value <n>
select count ( * ) from project_staff where role_code = value or date_from < value <n>
select date_to from project_staff order by date_from desc limit value <n>
select t1 . organisation_id , count ( * ) from projects as t1 join project_outcomes as t2 on t1 . project_id = t2 . project_id group by t1 . organisation_id order by count ( * ) desc limit value <n>
select date_from , date_to from project_staff order by project_staff <n>
select count ( * ) from tasks <n>
select t1 . from > as t1 join project_staff as t2 on t1 . role_code = t2 . role_code where t2 . < = value intersect select t1 . date_from from project_staff as t1 join project_staff as t2 on t1 . role_code = t2 . role_code where t2 . < = value <n>
select role_code from project_staff group by role_code order by count ( * ) desc limit value <n>
select count ( * ) from person where gender = value <n>
select avg ( age ) from person <n>
select count ( * ) from person where gender = value <n>
select name from person where age = ( select max ( age ) from person ) <n>
select name from person where job = value and age = ( select max ( age ) from person where job = value ) <n>
select name from person where age > ( select min ( age ) from person where job = value ) order by age desc limit value ) <n>
select count ( * ) from * where name < value <n>
select avg ( age ) , job from person where gender = value group by job <n>
select min ( age ) , job from person group by job <n>
select count ( * ) , gender from person where age < value group by gender <n>
select count ( * ) from person where age > value and age < value <n>
select name from person order by age desc <n>
select name from person where age = ( select max ( age ) from person ) <n>
select distinct t1 . name , t1 . age from person as t1 join personfriend as t2 on t1 . name = t2 . name where t2 . friend = value or t2 . friend = value <n>
select t1 . name from person as t1 join personfriend as t2 on t1 . name = t2 . name where t2 . friend in ( select name from person where age > value ) except select t1 . name from person as t1 join personfriend as t2 on t1 . name = t2 . name where t2 . friend in ( select name from person where age < value ) <n>
select name from person where job = value and age = ( select max ( age ) from person where job = value ) <n>
select name from person where gender = value <n>
select t1 . name from person as t1 join personfriend as t2 on t1 . name = t2 . name where t2 . friend = value and t1 . gender = value <n>
select distinct t1 . name from person as t1 join personfriend as t2 on t1 . name = t2 . name where t2 . friend = value and t1 . gender = value <n>
select name from person where age = ( select max ( age ) from person ) <n>
select t1 . age from person as t1 join personfriend as t2 on t1 . name = t2 . friend where t2 . name = value and t2 . age < ( select avg ( age ) from person ) <n>
select t1 . name from person as t1 join personfriend as t2 on t1 . name = t2 . name where t2 . friend = value and t1 . gender = value <n>
select t1 . name from person as t1 join personfriend as t2 on t1 . name = t2 . name where t2 . friend = value and t1 . gender = value <n>
select name from person where job = value and age = ( select max ( age ) from person where job = value ) <n>
select t1 . name , avg ( t2 . age ) from person as t1 join personfriend as t2 on t1 . name = t2 . name where t2 . friend = value and t1 . age < = value <n>
select t1 . name from person as t1 join personfriend as t2 on t1 . name = t2 . name where t2 . friend = value <n>
select name , country from member <n>
select country from member group by country order by count ( * ) desc limit value <n>
select t1 . name , t2 . name from member as t1 join round as t2 on t1 . member_id = t2 . member_id order by t2 . name asc <n>
select name from member where t1 . member_id = value <n>
select document_name , access_count from documents order by access_count desc <n>
select document_type_code from documents group by document_type_code having count ( * ) < value <n>
select sum ( access_count ) from documents group by document_type_code order by count ( * ) desc limit value <n>
select t1 . access_count from documents as t1 join document_sections as t2 on t1 . document_code = t2 . document_code group by t1 . document_code order by count ( * ) desc limit value <n>
select t1 . <n>
select document_type_code from documents group by document_type_code having count ( * ) < value <n>
select document_name from documents where document_code not in ( select document_code from document_sections ) <n>
select avg ( t1 . access_count ) from documents as t1 join document_functional_areas as t2 on t1 . document_code = t2 . document_code join functional_areas as t3 on t2 . functional_area_code = t3 . functional_area_code where t3 . functional_area_description = value <n>
select document_name from documents where document_code not in ( select document_code from document_sections ) <n>
select document_name from documents where document_name like value <n>
select role_description from roles where role_code = ( select role_code from users where user_login = value group by role_code order by count ( * ) desc limit value ) <n>
select avg ( access_count ) from documents group by document_structure_code order by count ( * ) desc limit value <n>
select count ( * ) , role_code from users group by role_code <n>
select count ( * ) from companies <n>
select industry from companies group by industry order by count ( * ) desc <n>
select name , assets_billion from companies order by name <n>
select max ( sales_billion ) , min ( sales_billion ) from companies where industry ! = value <n>
select count ( distinct id ) from count <n>
select stories from buildings order by height desc limit value <n>
select name from buildings group by name having count ( * ) > value <n>
select t2 . name from office_locations as t1 join buildings as t2 on t1 . building_id = t2 . id join companies as t3 on t1 . company_id = t3 . id group by t1 . building_id order by count ( * ) desc limit value <n>
select industry , count ( * ) from companies group by industry <n>
select industry from companies group by industry order by count ( * ) desc limit value <n>
select name from buildings where status ! = value <n>
select count ( * ) from companies where headquarters = value or industry = value <n>
select count ( * ) from products <n>
select product_price from products where t1 . product_price = value or product_price < value <n>
select product_type_code , count ( * ) from products group by product_type_code <n>
select t1 . product_name , count ( * ) from products as t1 join products_in_events as t2 on t1 . product_id = t2 . product_id group by t1 . product_name <n>
select product_name from products order by product_price desc <n>
select name from artwork order by name asc <n>
select location from num_of_audience group by location order by count ( * ) desc limit value <n>
select festival_name from festival_detail order by festival_name desc limit value <n>
select festival_name from festival_detail order by year desc <n>
select type , count ( * ) from type group by type order by count ( * ) desc limit value <n>
select name from artwork where num_of_audience ! = value <n>
select t1 . year from festival_detail as t1 join t1 as t2 on t1 . year = t2 . year join t2 . year where t2 . name = value and t2 . year = value <n>
select t2 . premises_type , count ( * ) from customer_addresses as t1 join premises as t2 on t1 . premise_id = t2 . premise_id group by t1 . premise_id <n>
select customer_name , customer_phone from customers where outcome_code = value <n>
select customer_name from customers where payment_method = ( select payment_method from customers group by payment_method order by count ( * ) desc limit value ) <n>
select t1 . customer_name , t1 . customer_phone from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id where t2 . order_status_code = value union select t1 . customer_name , t1 . customer_phone from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id where t2 . order_status_code = value <n>
select count ( * ) from course <n>
select cname from course where credits = value <n>
select count ( * ) from department where building = value <n>
select dphone from department where room = value <n>
select distinct gradepoint , join ( gradepoint ) from max <n>
select fname , lname from faculty where sex = value <n>
select t1 . room from faculty as t1 join faculty as t2 on t1 . facid = t2 . facid join t2 . faculty where t2 . faculty > = value and t2 . faculty > = value <n>
select * from course order by credits <n>
select fname from student order by age desc <n>
select lname from student where age < value order by age desc <n>
select fname from faculty where rank = value order by rank asc <n>
select dname from department except select t1 . dname from department as t1 join minor_in as t2 on t1 . dno = t2 . dno where t2 . dno = value <n>
select t1 . dname from department as t1 join member_of as t2 on t1 . dno = t2 . dno group by t2 . dno order by count ( * ) desc limit value <n>
select t2 . fname , t2 . lname from course as t1 join faculty as t2 on t1 . instructor = t2 . facid group by t1 . instructor order by count ( * ) desc limit value <n>
select t1 . cname from course as t1 join enrolled_in as t2 on t1 . cid = t2 . cid group by t2 . cid having count ( * ) > = value <n>
select t1 . fname , t1 . lname from faculty as t1 join member_of as t2 on t1 . facid = t2 . facid where t2 . dno = value <n>
select distinct t2 . distinct t3 . fname , t2 . lname , t3 . fname from enrolled_in as t1 join gradeconversion as t2 join student as t3 on t1 . grade = t2 . lettergrade and t1 . stuid = t3 . stuid <n>
select t3 . fname , t3 . lname from department as t1 join faculty as t2 on t1 . dno = t3 . dno join member_of as t3 on t2 . facid = t3 . facid where t1 . department = value <n>
select fname , lname from student <n>
select avg ( t2 . gradepoint ) from enrolled_in as t1 join gradeconversion as t2 join student as t3 on t1 . grade = t2 . lettergrade and t1 . stuid = t3 . stuid where t3 . lname = value <n>
select cname from course where credits = value union select cname from course where credits = value <n>
select dname from department where building = value union select dname from department where division = value and building = value <n>
select product_id from product_suppliers order by total_amount_purchased desc limit value <n>
select count ( distinct product_type_code ) from product_type_code <n>
select customer_id from customers where customer_id = value <n>
select payment_method_code , count ( * ) from customers group by payment_method_code <n>
select t1 . customer_name , t1 . customer_phone , t1 . customer_email from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id order by count ( * ) desc limit value <n>
select product_type_code , avg ( product_price ) from products group by product_type_code <n>
select t1 . staff_name , t1 . job_title_code from staff as t1 join staff_department_assignments as t2 on t1 . staff_id = t2 . staff_id order by date_assigned_to - date_assigned_from limit value <n>
select distinct customer_id from customer_orders where order_date > ( select min ( order_date ) from customer_orders where order_status_code = value ) <n>
select t1 . customer_name , t1 . customer_address from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id where t2 . order_status_code = value intersect select t1 . customer_name , t1 . customer_address from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id where t2 . order_status_code = value ) <n>
select t1 . department_id , t1 . department_name from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id join t2 . order_id group by t1 . department_id order by count ( * ) asc limit value <n>
select department_id from staff_department_assignments group by department_id order by count ( * ) limit value <n>
select max ( product_price ) , min ( product_price ) , product_type_code from products group by product_type_code <n>
select t1 . staff_id , t1 . staff_name from staff as t1 join staff_department_assignments as t2 on t1 . staff_id = t2 . staff_id order by date_assigned_to - date_assigned_from limit value <n>
select distinct customer_id from customer_orders where order_date > ( select min ( order_date ) from customer_orders where order_status_code = value ) <n>
select staff_id from staff_department_assignments where date_assigned_to < ( select max ( date_assigned_to ) from staff_department_assignments where job_title_code = value ) <n>
select t1 . staff_name , t1 . staff_gender from staff as t1 join staff_department_assignments as t2 on t1 . staff_id = t2 . staff_id where t2 . job_title_code = value <n>
select customer_name , customer_phone from customers order by product_price <n>
select customer_phone from customers union select supplier_phone from suppliers <n>
select product_id , product_name from products where product_price < value or product_price > value <n>
select avg ( total_amount_purchased ) , avg ( total_value_purchased ) from product_suppliers where supplier_id = ( select supplier_id from product_suppliers group by supplier_id order by count ( * ) desc limit value ) <n>
select max ( customer_code ) , min ( customer_code ) from customers <n>
select distinct t1 . supplier_name , t1 . supplier_phone from suppliers as t1 join product_suppliers as t2 on t1 . supplier_id = t2 . supplier_id join products as t3 on t2 . product_id = t3 . product_id where t3 . product_name = value <n>
select order_id , customer_id from customer_orders where order_status_code = value order by order_date desc <n>
select distinct t3 . product_name from customer_orders as t1 join order_items as t2 on t1 . order_id = t2 . order_id join products as t3 on t2 . product_id = t3 . product_id group by t3 . product_id having count ( distinct t1 . customer_id ) > = value <n>
select t1 . staff_name , t1 . staff_gender from staff as t1 join staff_department_assignments as t2 on t1 . staff_id = t2 . staff_id where t2 . job_title_code = value except select t1 . staff_name , t1 . staff_gender from staff as t1 join staff_department_assignments as t2 on t1 . staff_id = t2 . staff_id where t2 . job_title_code = value <n>
select avg ( product_price ) from products <n>
select product_name from products order by product_price desc limit value <n>
select description from aircraft <n>
select count ( * ) , t1 . avg ( t1 . name ) from t1 as t1 join * as t2 on t1 . name = t2 . name where t1 . name = value <n>
select count ( * ) from aircraft <n>
select name from pilot where age < value or age < value <n>
select name from pilot where age < = value order by name desc <n>
select t1 . aircraft from aircraft as t1 join airport_aircraft as t2 on t1 . aircraft_id = t2 . aircraft_id join airport as t3 on t2 . airport_id = t3 . airport_id where t3 . airport_name = value <n>
select avg ( t3 . total_passengers ) from aircraft as t1 join airport_aircraft as t2 on t1 . aircraft_id = t2 . aircraft_id join airport as t3 on t2 . airport_id = t3 . airport_id where t1 . aircraft = value <n>
select t1 . aircraft from aircraft as t1 join match as t2 on t1 . aircraft_id = t2 . winning_aircraft group by t2 . winning_aircraft order by count ( * ) desc limit value <n>
select t1 . aircraft , count ( * ) from aircraft as t1 join match as t2 on t1 . aircraft_id = t2 . winning_aircraft group by t1 . aircraft_id order by count ( * ) desc limit value <n>
select aircraft from aircraft where aircraft_id not in ( select winning_aircraft from match ) <n>
select t3 . name from aircraft as t1 join airport_aircraft as t2 on t1 . aircraft_id = t2 . aircraft_id join airport as t3 on t2 . airport_id = t3 . airport_id where t1 . aircraft = value <n>
select * from airport order by international_passengers desc limit value <n>
select name , age from pilot <n>
select t2 . count ( * ) , t1 . customer_id from services as t1 join customers as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id <n>
select t1 . customer_event_id , t1 . property_id , count ( * ) from residents as t1 join customers as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id <n>
select * from customers where customer_id = value <n>
select count ( * ) from customers <n>
select t1 . customer_details from customers as t1 join customer_events as t2 on t1 . customer_id = t2 . customer_id where t2 . customer_details = value <n>
select distinct t1 . ( t1 . ( ) from ( select t1 . distinct t1 . ( t2 . distinct t1 . ( ) from ( ) desc limit value <n>
select location from school order by enrollment desc <n>
select denomination from school where founded ! = value <n>
select avg ( enrollment ) from school <n>
select count ( distinct position ) from player <n>
select team from player order by age desc limit value <n>
select t1 . team , t2 . location from player as t1 join school as t2 on t1 . school_id = t2 . school_id <n>
select t1 . team from player as t1 join school as t2 on t1 . school_id = t2 . school_id order by t2 . enrollment desc limit value <n>
select denomination , count ( * ) from school group by denomination <n>
select denomination , count ( * ) from school group by denomination order by count ( * ) desc <n>
select location from player except select location from player where denomination = value <n>
select nickname from school_details where division ! = value <n>
select denomination from school group by denomination having count ( * ) > value <n>
select max_page_size from product group by max_page_size having count ( * ) > value <n>
select district_name from district where city_area > value or city_population > value <n>
select district_name from district order by city_population desc limit value <n>
select sum ( city_population ) from district order by city_area desc limit value <n>
select t1 . store_name from store as t1 join store_district as t2 on t1 . store_id = t2 . store_id where t2 . store_name = value <n>
select t1 . store_name from store as t1 join store_district as t2 on t1 . store_id = t2 . store_id where t2 . store_name = value order by t1 . district_name desc limit value <n>
select t3 . headquartered_city , count ( * ) from store as t1 join store_district as t2 on t1 . store_id = t2 . store_id join district as t3 on t2 . district_id = t3 . district_id group by t3 . headquartered_city <n>
select avg ( pages_per_minute_color ) from product <n>
select t1 . product from product as t1 join store_product as t2 on t1 . product_id = t2 . product_id join store as t3 on t2 . store_id = t3 . store_id where t3 . store_name = value <n>
select product from product where max_page_size = value or pages_per_minute_color < value <n>
select district_name from district order by city_population desc limit value <n>
select product from product where product ! = ( select max_page_size from product group by max_page_size order by count ( * ) desc limit value ) <n>
select t3 . district_name from store as t1 join store_district as t2 on t1 . store_id = t2 . store_id join district as t3 on t2 . district_id = t3 . district_id where t1 . type = value intersect select t3 . district_name from store as t1 join store_district as t2 on t1 . store_id = t2 . store_id join district as t3 on t2 . district_id = t3 . district_id where t1 . type = value <n>
select avg ( enr ) from college <n>
select count ( distinct cname ) from tryout <n>
select count ( * ) from college where enr > value <n>
select pname , hs from player where hs < value <n>
select count ( distinct cname ) from tryout <n>
select count ( * ) from tryout where ppos = value <n>
select max ( hs ) , avg ( hs ) , min ( hs ) from player <n>
select avg ( enr ) from college <n>
select distinct pname from player where pname like value <n>
select * from college order by enr <n>
select cname from college where enr > ( select max ( enr ) from college where state = value ) <n>
select distinct cname from college order by enr <n>
select count ( * ) , cname from tryout group by cname order by count ( * ) desc <n>
select min ( t1 . hs ) , ppos from player as t1 join tryout as t2 on t1 . pid = t2 . pid where t1 . hs > value group by t2 . ppos <n>
select cname from college where enr < value <n>
select t1 . state from college as t1 join tryout as t2 on t1 . cname = t2 . cname where t2 . ppos = value except select t1 . state from college as t1 join tryout as t2 on t1 . cname = t2 . cname where t2 . ppos = value <n>
select t1 . pname from player as t1 join tryout as t2 on t1 . pid = t2 . pid where t2 . decision = value and t2 . ppos = value <n>
select t1 . pname , t1 . hs from player as t1 join tryout as t2 on t1 . pid = t2 . pid where t2 . decision = value <n>
select t1 . pname from player as t1 join tryout as t2 on t1 . pid = t2 . pid where t2 . ppos = value intersect select t1 . pname from player as t1 join tryout as t2 on t1 . pid = t2 . pid where t2 . ppos = value <n>
select state from college where enr < value <n>
select avg ( t1 . hs ) from player as t1 join tryout as t2 on t1 . pid = t2 . pid where t2 . decision = value <n>
select distinct cname from tryout where ppos = value except select distinct cname from tryout where ppos = value <n>
select t1 . cname from tryout as t1 join player as t2 on t1 . pid = t2 . pid where t2 . decision = value <n>
select sum ( enr ) from college <n>
select t1 . cname from tryout as t1 join player as t2 on t1 . pid = t2 . pid where t2 . ppos = value intersect select t1 . cname from tryout as t1 join player as t2 on t1 . pid = t2 . pid where t2 . ppos = value <n>
select t1 . state from college as t1 join tryout as t2 on t1 . cname = t2 . cname where t2 . ppos = value intersect select t1 . state from college as t1 join tryout as t2 on t1 . cname = t2 . cname where t2 . ppos = value <n>
select cname from tryout where ppos = value except select cname from tryout where ppos = value ) <n>
select count ( * ) from ( select t1 . state from college as t1 join tryout as t2 on t1 . cname = t2 . cname where t2 . ppos = value except select t1 . state from college as t1 join tryout as t2 on t1 . cname = t2 . cname where t2 . ppos = value <n>
select state from college where enr > value group by state order by count ( * ) desc limit value <n>
select distinct cname from college where enr > ( select min ( enr ) from college where state = value ) <n>
select count ( distinct state ) from college where enr > ( select avg ( enr ) from college ) <n>
select count ( * ) from state where state = value <n>
select software_platform from device group by software_platform order by count ( * ) desc <n>
select shop_name from shop order by open_year asc <n>
select avg ( quantity ) from stock <n>
select count ( distinct software_platform ) from device <n>
select shop_name from shop order by open_year desc limit value <n>
select t3 . shop_name , t2 . carrier from stock as t1 join device as t2 on t1 . device_id = t2 . device_id join shop as t3 on t1 . shop_id = t3 . shop_id <n>
select t2 . shop_name from stock as t1 join shop as t2 on t1 . shop_id = t2 . shop_id group by t1 . shop_id order by count ( * ) desc limit value <n>
select software_platform , count ( * ) from device group by software_platform <n>
select software_platform from device group by software_platform order by count ( * ) desc <n>
select shop_name from shop where shop_id not in ( select shop_id from stock ) <n>
select carrier from device where device_id not in ( select device_id from stock ) <n>
select carrier from device group by carrier having count ( * ) > value <n>
select order_date from bookings group by order_date order by count ( * ) asc limit value <n>
select count ( * ) from customers <n>
select customer_phone , customer_email_address from customers where customer_name = value <n>
select min ( order_quantity ) , avg ( order_quantity ) , max ( order_quantity ) from invoices <n>
select marketing_region_descriptrion from marketing_regions where marketing_region_name = value <n>
select distinct product_name from products where product_price > ( select avg ( product_price ) from products ) <n>
select product_name from products order by product_price desc <n>
select payment_method_code , count ( * ) from bookings group by payment_method_code <n>
select t1 . payment_method_code from group as t1 join customers as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id order by count ( * ) desc limit value <n>
select t1 . state_county from addresses as t1 join stores as t2 on t1 . address_id = t2 . address_id where t2 . marketing_region_code = value <n>
select t1 . service_type_description from ref_service_types as t1 join services as t2 on t1 . service_type_code = t2 . service_type_code where t2 . product_price > value <n>
select t1 . service_type_description , count ( * ) from ref_service_types as t1 join services as t2 on t1 . service_type_code = t2 . service_type_code group by t1 . service_type_code <n>
select t1 . customer_phone , t1 . customer_name from customers as t1 join services as t2 on t1 . customer_id = t2 . customer_id join addresses as t3 on t2 . address_id = t3 . address_id order by t3 . desc desc limit value <n>
select avg ( product_price ) , product_price from products <n>
select product_name from products where product_price > = value <n>
select t1 . other_item_details from order_items as t1 join products as t2 on t1 . product_id = t2 . product_id where t2 . product_price > value <n>
select t1 . order_date from customer_orders as t1 join order_items as t2 on t1 . order_id = t2 . order_id join products as t3 on t2 . product_id = t3 . product_id where t3 . product_price > value <n>
select count ( distinct currency_code ) from drama_workshop_groups <n>
select t2 . store_email_address from addresses as t1 join drama_workshop_groups as t2 on t1 . address_id = t2 . address_id where t1 . state_county = value <n>
select marketing_region_code from drama_workshop_groups group by marketing_region_code order by count ( * ) desc limit value <n>
select t1 . city_town from addresses as t1 join customers as t2 on t1 . address_id = t2 . address_id where t2 . customers = value <n>
select t2 . store_name from bookings as t1 join drama_workshop_groups as t2 on t1 . workshop_group_id = t2 . workshop_group_id where t1 . status_code = value <n>
select avg ( order_quantity ) from invoices where payment_method_code = value <n>
select product_id from invoices group by product_id order by count ( * ) desc limit value <n>
select count ( * ) from vocals as t1 join songs as t2 on t1 . songid = t2 . songid where title = value <n>
select title from albums <n>
select distinct t1 . stageposition from performance as t1 join band as t2 on t1 . bandmate = t2 . id where firstname = value <n>
select t3 . title from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid where t2 . lastname = value <n>
select t3 . title from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid where t2 . firstname = value and lastname = value <n>
select t1 . firstname , t1 . lastname from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid <n>
select distinct label from albums <n>
select t2 . lastname from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid group by lastname order by count ( * ) desc limit value <n>
select t2 . lastname from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid group by lastname order by count ( * ) desc limit value <n>
select distinct instrument from instruments <n>
select instrument from instruments group by instrument order by count ( * ) desc limit value <n>
select count ( * ) from vocals as t1 join songs as t2 on t1 . songid = t2 . songid where title = value <n>
select count ( distinct instrument ) from instruments as t1 join songs as t2 on t1 . songid = t2 . songid where title = value <n>
select instrument from instruments as t1 join songs as t2 on t1 . songid = t2 . songid where lastname = value <n>
select title from vocals as t1 join songs as t2 on t1 . songid = t2 . songid group by t1 . songid order by count ( * ) desc limit value <n>
select type from vocals as t1 join band as t2 on t1 . bandmate = t2 . id where lastname = value group by type order by count ( * ) desc limit value <n>
select count ( * ) from vocals as t1 join songs as t2 on t1 . songid = t2 . songid where title = value <n>
select count ( * ) from vocals as t1 join songs as t2 on t1 . songid = t2 . songid where type = value <n>
select distinct title from vocals as t1 join songs as t2 on t1 . songid = t2 . songid except select t2 . title from vocals as t1 join songs as t2 on t1 . songid = t2 . songid where type = value <n>
select label from albums where year = value <n>
select t1 . firstname , t1 . lastname from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid <n>
select instrument from instruments as t1 join songs as t2 on t1 . songid = t2 . songid where title = value <n>
select type from vocals as t1 join songs as t2 on t1 . songid = t2 . songid where title = value <n>
select count ( * ) from vocals as t1 join songs as t2 on t1 . songid = t2 . songid where title = value <n>
select distinct title from vocals as t1 join songs as t2 on t1 . songid = t2 . songid except select t2 . title from vocals as t1 join songs as t2 on t1 . songid = t2 . songid where type = value <n>
select type from vocals as t1 join songs as t2 on t1 . songid = t2 . songid where title = value <n>
select t2 . firstname , t2 . lastname from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid where t3 . title = value <n>
select t1 . firstname , t1 . lastname from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid join instruments as t4 on t4 . songid = t3 . songid where t3 . title = value <n>
select t3 . title from albums as t1 join tracklists as t2 on t1 . aid = t2 . albumid join songs as t3 on t2 . songid = t3 . songid where t1 . title = value <n>
select t3 . title from performance as t1 join band as t2 on t1 . bandmate = t2 . id join songs as t3 on t3 . songid = t1 . songid where t2 . lastname = value <n>
select founder from manufacturers where name = value <n>
select name , headquarter from manufacturers order by revenue desc <n>
select avg ( revenue ) , max ( revenue ) , sum ( revenue ) from manufacturers <n>
select sum ( revenue ) from manufacturers where revenue > ( select min ( revenue ) from manufacturers where headquarter = value ) <n>
select count ( * ) from * where name like value <n>
select name from manufacturers where revenue < ( select min ( revenue ) from manufacturers where headquarter = value ) <n>
select sum ( revenue ) from manufacturers where revenue > ( select min ( revenue ) from manufacturers where headquarter = value ) <n>
select name , headquarter , revenue from manufacturers order by revenue desc limit value <n>
select name , headquarter , revenue from manufacturers order by revenue desc <n>
select name from manufacturers where revenue < ( select min ( revenue ) from manufacturers where revenue < ( select min ( revenue ) from manufacturers where headquarter = value ) <n>
select sum ( revenue ) , name from manufacturers group by name <n>
select name , max ( revenue ) , headquarter from manufacturers group by headquarter <n>
select avg ( price ) , manufacturer from products group by manufacturer <n>
select count ( * ) from products where price > = value <n>
select name from manufacturers except select t2 . name from products as t1 join manufacturers as t2 on t1 . manufacturer = t2 . code where t1 . name = value <n>
select name from products <n>
select name from products where price < = value <n>
select * from products as t1 join manufacturers as t2 on t1 . manufacturer = t2 . code where t2 . name = value intersect select t2 . name from products as t1 join manufacturers as t2 on t1 . manufacturer = t2 . code where t1 . name = value <n>
select avg ( price ) from products <n>
select name , price from products where price > = value order by price desc , name <n>
select * from products <n>
select avg ( price ) , manufacturer from products group by manufacturer <n>
select name , price from products <n>
select name , price from products order by price desc limit value <n>
select problem_log_id from problem_log order by log_entry_date desc limit value <n>
select problem_log_id , log_entry_date from problem_log where problem_id = value <n>
select problem_log_id , problem_id from problem_log <n>
select distinct t2 . problem_id , t2 . problem_log_id from staff as t1 join problem_log as t2 on t1 . staff_id = t2 . assigned_to_staff_id where t1 . staff_first_name = value and t1 . staff_last_name = value <n>
select count ( * ) , t1 . product_name from product as t1 join problems as t2 on t1 . product_id = t2 . product_id group by t1 . product_name order by count ( * ) desc limit value <n>
select t1 . problem_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where date_problem_reported like ( select max ( date_problem_reported ) from problems as t3 join staff as t4 on t3 . reported_by_staff_id = t4 . staff_id where t4 . staff_first_name = value and t4 . staff_last_name = value ) <n>
select product_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where t2 . staff_first_name = value and t2 . staff_last_name = value <n>
select t2 . product_name , count ( * ) from problems as t1 join product as t2 on t1 . product_id = t2 . product_id group by t2 . product_id <n>
select product_id , count ( distinct product_id ) from problems as t1 join staff as t2 on t1 . product_id = t2 . product_id group by t1 . product_id <n>
select distinct product_name from product order by product_id limit value <n>
select t1 . product_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where t2 . staff_first_name = value and t2 . staff_last_name = value <n>
select product_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where t2 . staff_first_name = value and t2 . staff_last_name = value union select product_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where t2 . staff_first_name = value and t2 . staff_last_name = value <n>
select product from product order by product desc limit value <n>
select t3 . staff_first_name , t3 . staff_last_name from problems as t1 join product as t2 join staff as t3 on t1 . product_id = t2 . product_id and t1 . reported_by_staff_id = t3 . staff_id where t2 . product_name = value <n>
select t1 . product_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where t2 . staff_first_name = value and t2 . staff_last_name = value intersect select product_id from problems as t1 join staff as t2 on t1 . reported_by_staff_id = t2 . staff_id where t2 . staff_first_name = value and t2 . staff_last_name = value <n>
select name , address_road , city from branch order by open_year <n>
select distinct city from branch where membership_amount > = value <n>
select open_year from branch group by open_year having count ( * ) > = value <n>
select city , count ( * ) from branch where open_year < value group by city <n>
select card_number , name , hometown from member order by level desc <n>
select level from member group by level order by count ( * ) desc limit value <n>
select t3 . name , t2 . name from membership_register_branch as t1 join branch as t2 on t1 . branch_id = t2 . branch_id join member as t3 on t1 . member_id = t3 . member_id order by t1 . register_year <n>
select name , address_road from member <n>
select t2 . name , t2 . open_year from membership_register_branch as t1 join branch as t2 on t1 . branch_id = t2 . branch_id join member as t3 on t1 . member_id = t3 . member_id order by t3 . register_year desc limit value <n>
select city from branch where membership_amount > value intersect select city from branch where membership_amount > value <n>
select sum ( total_pounds ) from purchase as t1 join branch as t2 on t1 . branch_id = t2 . branch_id where t2 . city = value <n>
select sum ( level ) from member <n>
select card_number from member group by card_number order by count ( * ) desc limit value <n>
select count ( * ) from voting_record <n>
select count ( distinct president_vote ) from voting_record <n>
select lname from student where major = value <n>
select major from student where sex = value <n>
select avg ( age ) from student <n>
select advisor from student where city_code = value <n>
select distinct secretary_vote from voting_record <n>
select distinct registration_date , election_cycle from voting_record <n>
select distinct t1 . lname from student as t1 join voting_record as t2 on t1 . stuid = t2 . secretary_vote where t2 . election_cycle = value <n>
select distinct t1 . age from student as t1 join voting_record as t2 on t1 . stuid = t2 . secretary_vote where t2 . election_cycle = value <n>
select advisor from student where stuid = value group by advisor having count ( * ) > = value <n>
select distinct t1 . fname , t1 . lname from student as t1 join voting_record as t2 on t1 . stuid = t2 . secretary_vote where t1 . age = value <n>
select count ( * ) from student as t1 join voting_record as t2 on t1 . stuid = class_senator_vote where t1 . sex = value and t2 . election_cycle = value <n>
select city_code from student where city_code = value intersect select city_code from student where city_code = value <n>
select avg ( t1 . age ) from student as t1 join voting_record as t2 on t1 . stuid = secretary_vote where t1 . city_code = value and t2 . election_cycle = value <n>
select distinct t1 . lname from student as t1 join voting_record as t2 on t1 . stuid = president_vote intersect select distinct lname from student where advisor = value <n>
select distinct t1 . lname from student as t1 join voting_record as t2 on t1 . stuid = t2 . secretary_vote where t2 . election_cycle = value and t2 . election_cycle = value <n>
select advisor from student group by advisor having count ( * ) > value <n>
select election_cycle , count ( * ) from voting_record group by election_cycle <n>
select major from student group by major order by count ( * ) desc limit value <n>
select city_code from student group by city_code order by count ( * ) desc limit value <n>
select count ( * ) from products <n>
select count ( * ) from characteristics <n>
select product_name , typical_buying_price from products <n>
select product_name from products <n>
select product_name from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id join ref_colors as t4 on t1 . color_code = t4 . color_code where t4 . color_description = value <n>
select count ( * ) from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id join ref_colors as t4 on t1 . color_code = t4 . color_code where t4 . color_description = value and t3 . characteristic_name = value <n>
select product_category_code , typical_buying_price from products where product_name = value <n>
select t1 . product_category_description from ref_product_categories as t1 join products as t2 on t1 . product_category_code = t2 . product_category_code where t2 . product_name = value <n>
select t1 . product_category_description from ref_product_categories as t1 join products as t2 on t1 . product_category_code = t2 . product_category_code where t2 . product_name = value <n>
select t1 . color_code , t2 . color_description from products as t1 join ref_colors as t2 on t1 . color_code = t2 . color_code where t1 . product_name = value <n>
select t1 . product_id , t2 . color_description from products as t1 join ref_colors as t2 on t1 . color_code = t2 . color_code join product_characteristics as t3 on t1 . product_id = t3 . product_id where t3 . characteristic_name = value or t3 . characteristic_name = value <n>
select t1 . product_name , t1 . typical_buying_price , t1 . typical_selling_price from products as t1 join ref_colors as t2 on t1 . color_code = t2 . color_code where t2 . color_description = value <n>
select count ( distinct t3 . characteristic_name ) from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id where t1 . product_name = value <n>
select t3 . characteristic_name from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id group by t3 . characteristic_name order by count ( * ) desc limit value <n>
select t3 . characteristic_name from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id group by t3 . characteristic_name having count ( * ) > = value <n>
select count ( * ) from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id join ref_colors as t4 on t1 . color_code = t4 . color_code where t4 . color_description = value and t3 . characteristic_name = value <n>
select t1 . product_name from products as t1 join ref_colors as t2 on t1 . color_code = t2 . color_code where t2 . color_description = value intersect select t1 . product_name from products as t1 join ref_colors as t2 on t1 . color_code = t2 . color_code where t2 . color_description = value <n>
select t1 . product_name from products as t1 join ref_colors as t2 on t1 . color_code = t2 . color_code group by t1 . product_name order by count ( * ) desc limit value <n>
select product_name from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id join ref_colors as t4 on t1 . color_code = t4 . color_code where t4 . color_description = value or t3 . characteristic_name = value <n>
select t2 . unit_of_measure from products as t1 join ref_product_categories as t2 on t1 . product_category_code = t2 . product_category_code where t1 . product_name = value <n>
select product_category_description , unit_of_measure from ref_product_categories where product_category_code = value <n>
select t2 . unit_of_measure , t2 . product_category_code from products as t1 join ref_product_categories as t2 on t1 . product_category_code = t2 . product_category_code where t1 . product_name = value <n>
select t1 . product_name from products as t1 join ref_colors as t2 on t1 . color_code = t2 . color_code where t2 . color_description ! = value intersect select t1 . product_name from products as t1 join ref_colors as t2 on t1 . color_code = t2 . color_code where t2 . color_description ! = value <n>
select t2 . color_description from products as t1 join ref_colors as t2 on t1 . color_code = t2 . color_code group by t2 . color_description order by count ( * ) desc limit value <n>
select characteristic_name , other_characteristic_details , characteristic_data_type from characteristics except select t1 . characteristic_name , t1 . other_characteristic_details , t1 . characteristic_data_type from characteristics as t1 join product_characteristics as t2 on t1 . characteristic_id = t2 . characteristic_id <n>
select t3 . characteristic_name from products as t1 join product_characteristics as t2 on t1 . product_id = t2 . product_id join characteristics as t3 on t2 . characteristic_id = t3 . characteristic_id group by t3 . characteristic_name having count ( * ) > = value <n>
select name from event group by name order by count ( * ) desc limit value <n>
select t1 . name from stadium as t1 join event as t2 on t1 . id = t2 . stadium_id group by t2 . stadium_id order by count ( * ) desc limit value <n>
select country from stadium group by country order by count ( * ) desc limit value <n>
select country from stadium where capacity > value except select country from stadium where capacity < value <n>
select count ( distinct country ) from * <n>
select t1 . name from swimmer as t1 join record as t2 on t1 . id = t2 . swimmer_id where result = value <n>
select t1 . name from swimmer as t1 join record as t2 on t1 . id = t2 . swimmer_id group by t2 . swimmer_id order by count ( * ) desc limit value <n>
select t1 . name from swimmer as t1 join record as t2 on t1 . id = t2 . swimmer_id where result = value <n>
select t4 . name from swimmer as t1 join record as t2 on t1 . id = t2 . swimmer_id join event as t3 on t2 . event_id = t3 . id join stadium as t4 on t4 . id = t3 . stadium_id where t1 . capacity = value <n>
select <n>
select count ( * ) from age where age < = value <n>
select name from max order by max ( age ) limit value <n>
select t2 . railway_id , t1 . builder from railway as t1 join train as t2 on t1 . railway_id = t2 . railway_id <n>
select location , count ( * ) from railway group by location <n>
select country from manager where age between value and value <n>
select count ( * ) from addresses where state_province_county = value <n>
select t1 . customer_name , t1 . customer_phone from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id having count ( * ) > = value <n>
select t1 . customer_name from customers as t1 join distinct as t2 on t1 . customer_id = t2 . customer_id join addresses as t3 on t2 . address_id = t3 . address_id where t3 . state_province_county = value <n>
select count ( * ) from products where product_price > ( select avg ( product_price ) from products ) <n>
select customer_name , customer_phone from customers order by product_price desc limit value <n>
select t1 . dorm_name from dorm as t1 join has_amenity as t2 on t1 . dormid = t2 . dormid join dorm_amenity as t3 on t2 . amenid = t3 . amenid where t3 . amenity_name = value <n>
select count ( * ) from student as t1 join lives_in as t2 on t1 . stuid = t2 . stuid join dorm as t3 on t3 . dormid = t2 . dormid where t3 . dorm_name = value and t1 . sex = value <n>
select t1 . fname from student as t1 join lives_in as t2 on t1 . stuid = t2 . stuid where t2 . dormid in ( select t2 . dormid from dorm as t3 join has_amenity as t4 on t3 . dormid = t4 . dormid join dorm_amenity as t5 on t4 . amenid = t5 . amenid where t3 . amenity_name = value and t1 . amenity_name = value and t1 . age < value <n>
select count ( distinct dormid ) from has_amenity <n>
select sum ( student_capacity ) from dorm <n>
select avg ( age ) , city_code from student group by city_code <n>
select avg ( student_capacity ) , sum ( student_capacity ) from dorm <n>
select dorm_name from dorm where dormid not in ( select dormid from has_amenity ) <n>
select dorm_name , gender from dorm where dorm_name like value <n>
select dorm_name , student_capacity from dorm where student_capacity > value or student_capacity < value <n>
select t1 . dorm_name from dorm as t1 join has_amenity as t2 on t1 . dormid = t2 . dormid join dorm_amenity as t3 on t2 . amenid = t3 . amenid where t3 . amenity_name = value intersect select t1 . dorm_name from dorm as t1 join has_amenity as t2 on t1 . dormid = t2 . dormid join dorm_amenity as t3 on t2 . amenid = t3 . amenid where t3 . amenity_name = value <n>
select lname from student where sex = value and city_code = value and city_code = value <n>
select dorm_name from dorm order by student_capacity desc limit value <n>
select city_code from student group by city_code order by count ( * ) desc limit value <n>
select fname , lname from student where city_code ! = ( select major from student group by city_code order by count ( * ) desc limit value ) <n>
select t1 . amenity_name from dorm_amenity as t1 join has_amenity as t2 on t1 . amenid = t2 . amenid where t2 . amenity_name = value <n>
select avg ( age ) , max ( age ) , sex from student group by sex <n>
select count ( * ) , avg ( age ) , city_code from student group by city_code <n>
select avg ( age ) , city_code from student group by city_code <n>
select fname , lname from student where major ! = ( select major from student group by major order by count ( * ) desc limit value ) <n>
select avg ( t3 . age ) , t3 . dorm_name from student as t1 join lives_in as t2 on t1 . stuid = t2 . stuid join dorm as t3 on t3 . dormid = t2 . dormid join dorm_amenity as t4 on t3 . amenid = t4 . amenid group by t3 . dormid <n>
select count ( * ) , t3 . dorm_name from student as t1 join lives_in as t2 on t1 . stuid = t2 . stuid join dorm as t3 on t3 . dormid = t2 . dormid where t1 . age > value group by t3 . dorm_name <n>
select fname from student where major = value <n>
select count ( * ) from student as t1 join lives_in as t2 on t1 . stuid = t2 . stuid join dorm as t3 on t3 . dormid = t2 . dormid where t3 . dorm_name = value and t1 . sex = value <n>
select count ( * ) from student as t1 join lives_in as t2 on t1 . stuid = t2 . stuid join dorm as t3 on t3 . dormid = t2 . dormid where t3 . dorm_name = value and t1 . sex = value <n>
select amenity_name from dorm_amenity order by amenity_name <n>
select t1 . fname from student as t1 join lives_in as t2 on t1 . stuid = t2 . stuid where t2 . dormid in ( select t2 . dormid from dorm as t3 join has_amenity as t4 on t3 . dormid = t4 . dormid join dorm_amenity as t5 on t4 . amenid = t5 . amenid group by t3 . dormid order by count ( * ) desc limit value ) <n>
select t1 . dorm_name , t1 . student_capacity from dorm as t1 join has_amenity as t2 on t1 . dormid = t2 . dormid join dorm_amenity as t3 on t2 . amenid = t3 . amenid group by t2 . dormid order by count ( * ) limit value <n>
select t1 . fname , t1 . lname from student as t1 join lives_in as t2 on t1 . stuid = t2 . stuid where t2 . dormid not in ( select t3 . dormid from has_amenity as t3 join dorm_amenity as t4 on t3 . amenid = t4 . amenid where t4 . amenity_name = value ) <n>
select t3 . amenity_name from dorm as t1 join has_amenity as t2 on t1 . dormid = t2 . dormid join dorm_amenity as t3 on t2 . amenid = t3 . amenid join lives_in as t4 on t4 . dormid = t1 . dormid join student as t5 on t5 . stuid = t4 . stuid where t5 . lname = value <n>
select count ( * ) from customers <n>
select customer_id from customers where customer_type_code = value <n>
select t1 . email_address from customers as t1 join complaints as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id order by count ( * ) desc limit value <n>
select distinct t1 . product_name from products as t1 join complaints as t2 on t1 . product_id = t2 . product_id join customers as t3 group by t3 . customer_id order by count ( * ) limit value <n>
select email_address , phone_number from customers where customer_id not in ( select customer_id from complaints ) <n>
select product_description from products where product_name = value <n>
select product_name , product_category_code from products order by product_price desc limit value <n>
select avg ( product_price ) , product_category_code from products group by product_category_code <n>
select except ( * ) from t1 as t1 join <n>
select last_name from staff where email_address like value group by last_name order by count ( * ) desc limit value <n>
select t1 . last_name from staff as t1 join complaints as t2 on t1 . staff_id = t2 . staff_id join products as t3 on t2 . product_id = t3 . product_id order by t3 . product_price limit value <n>
select address_line_1 , address_line_2 from customers where email_address = value <n>
select complaint_status_code , count ( * ) from complaints where complaint_type_code = value group by complaint_status_code <n>
select state from customers group by state order by count ( * ) desc limit value <n>
select author from submission order by scores desc <n>
select author , college , college from submission <n>
select avg ( scores ) from submission <n>
select college , count ( * ) from submission group by college <n>
select college from submission group by college order by count ( * ) desc limit value <n>
select t1 . result , t1 . result , t1 . result from acceptance as t1 join submission as t2 on t1 . submission_id = t2 . submission_id <n>
select t2 . author , count ( distinct t1 . workshop_id ) from acceptance as t1 join submission as t2 on t1 . submission_id = t2 . submission_id group by t2 . author <n>
select t1 . author from acceptance as t1 join submission as t2 on t1 . submission_id = t2 . submission_id group by t2 . author having count ( * ) > value <n>
select author from submission where submission_id not in ( select submission_id from acceptance ) <n>
select distinct investor_details from investors <n>
select share_count from transactions <n>
select transaction_type_description from transactions where transaction_type_code = value <n>
select date_of_transaction from transactions where share_count > = value or amount_of_transaction > = value <n>
select transaction_type_code from transactions group by transaction_type_code order by count ( * ) asc limit value <n>
select t1 . where , t2 . date_of_transaction from transactions as t1 join transactions_lots as t2 on t1 . transaction_id = t2 . transaction_id join transactions as t3 on t2 . transaction_id = t3 . transaction_id where t3 . share_count < value <n>
select investor_id , avg ( share_count ) from transactions group by transactions <n>
select investor_id , avg ( share_count ) from transactions group by investor_id <n>
select share_count from transactions where transaction_type_code = value <n>
select transaction_type_code from transactions group by transaction_type_code order by count ( * ) desc limit value <n>
select t2 . investor_id , t1 . investor_details from investors as t1 join transactions as t2 on t1 . investor_id = t2 . investor_id group by t2 . investor_id order by count ( * ) desc limit value <n>
select <n>
select count ( * ) from hotels <n>
select distinct location_name from locations <n>
select t1 . <n>
select price_range from hotels <n>
select address from locations where location_name = value <n>
select location_name from locations where location_name like value <n>
select count ( distinct name ) from photos <n>
select t2 . name from locations as t1 join tourist_attractions as t2 on t1 . location_id = t2 . location_id where t1 . address = value <n>
select price_range from hotels where star_rating_code = value <n>
select t1 . tourist_details , t2 . name from photos as t1 join tourist_attractions as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id <n>
select t1 . name , t1 . description from photos as t1 join tourist_attractions as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id <n>
select t1 . market_details from street_markets as t1 join tourist_attractions as t2 on t1 . market_id = t2 . tourist_attraction_id where t2 . how_to_get_there = value <n>
select t1 . name from staff as t1 join tourist_attractions as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id where t1 . name = value <n>
select t2 . visit_date , t2 . visit_details from visitors as t1 join visits as t2 on t1 . tourist_id = t2 . tourist_id where t1 . tourist_details = value <n>
select t1 . name from tourist_attractions as t1 join tourist_attraction_features as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id join features as t3 on t2 . t2 . t2 . t2 . t1 = t3 . t1 . name where t3 . name = value union select t1 . name from tourist_attractions as t1 join tourist_attraction_features as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id join features as t3 on t2 . t2 . t2 . t2 . t2 . t2 . t2 . name = t3 . name <n>
select star_rating_code , avg ( price_range ) from hotels group by star_rating_code <n>
select hotel_id , star_rating_code from hotels order by price_range asc <n>
select other_hotel_details , star_rating_code from hotels <n>
select how_to_get_there from tourist_attractions group by how_to_get_there order by count ( * ) desc limit value <n>
select t1 . royal_family_details , t2 . how_to_get_there from royal_family as t1 join tourist_attractions as t2 on t1 . royal_family_id = t2 . tourist_attraction_id <n>
select t1 . name , t2 . tourist_attraction_id from tourist_attractions as t1 join visits as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id <n>
select t1 . name , t2 . tourist_attraction_id from tourist_attractions as t1 join visits as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id <n>
select t2 . name from locations as t1 join tourist_attractions as t2 on t1 . location_id = t2 . location_id where t1 . address = value or t2 . how_to_get_there = value <n>
select t1 . name from tourist_attractions as t1 join visitors as t2 join visits as t3 on t1 . tourist_attraction_id = t3 . tourist_attraction_id and t2 . tourist_id = t3 . tourist_id where t2 . tourist_details = value intersect select t1 . name from tourist_attractions as t1 join visitors as t2 join visits as t3 on t1 . tourist_attraction_id = t3 . tourist_attraction_id and t2 . tourist_id = t3 . tourist_id where t2 . tourist_details = value <n>
select t1 . name from tourist_attractions as t1 join visits as t2 on t1 . tourist_attraction_id = t2 . tourist_attraction_id join visitors as t3 on t2 . tourist_id = t3 . tourist_id where t3 . tourist_details = value <n>
select count ( * ) from video_games <n>
select gname from video_games <n>
select gname , gtype from video_games order by gname <n>
select gtype from video_games where gname = value <n>
select gname , gtype from video_games <n>
select gtype from video_games group by gtype order by count ( * ) desc limit value <n>
select stuid from student where city_code = value <n>
select fname from student where major = value <n>
select major , avg ( age ) , min ( age ) , max ( age ) from student group by major <n>
select count ( * ) from sportsinfo <n>
select stuid from student where sex = value intersect select stuid from sportsinfo where sportname = value <n>
select lname from student where sex = value <n>
select sum ( gamesplayed ) from sportsinfo <n>
select stuid , sum ( hours_played ) from plays_games group by stuid <n>
select stuid from sportsinfo group by stuid having sum ( hoursperweek ) > value <n>
select stuid from student group by stuid order by sum ( hoursperweek ) desc limit value <n>
select stuid from student where major = value intersect select stuid from sportsinfo where onscholarship = value <n>
select stuid from student where sex = value <n>
select sum ( hoursperweek ) , sum ( gamesplayed ) from sportsinfo as t1 join student as t2 on t1 . stuid = t2 . stuid where t2 . age < value <n>
select count ( * ) from student <n>
select stuid from student where sex = value except select stuid from sportsinfo where sportname = value <n>
select stuid , sum ( hours_played ) from plays_games group by stuid <n>
select gname from plays_games as t1 join video_games as t2 on t1 . gameid = t2 . gameid group by t1 . gameid order by sum ( hours_played ) desc limit value <n>
select gname from plays_games as t1 join video_games as t2 on t1 . gameid = t2 . gameid join student as t3 on t3 . stuid = t1 . stuid where t3 . lname = value and t3 . fname = value and t3 . lname = value <n>
select lname , fname from student where fname = value or lname = value <n>
select lname , sex from student where stuid in ( select t1 . stuid from plays_games as t1 join video_games as t2 on t1 . gameid = t2 . gameid where t2 . gname = value intersect select t1 . stuid from plays_games as t1 join video_games as t2 on t1 . gameid = t2 . gameid where t2 . gname = value <n>
select customer_name from customers where payment_method = ( select payment_method from customers group by payment_method order by count ( * ) desc limit value ) <n>
select avg ( order_quantity ) , count ( distinct order_id ) from order_items <n>
select date_became_customer from customers where customer_id between value and value <n>
select payment_method from customers group by payment_method order by count ( * ) desc limit value <n>
select payment_method from customers group by payment_method order by count ( * ) asc limit value <n>
select customer_name from customers where customer_name like value <n>
select product_details from products where product_details like value or product_details like value <n>
select count ( * ) from customers where city = value <n>
select city from addresses where city not in ( select distinct t3 . city from customers as t1 join customer_addresses as t2 on t1 . customer_id = t2 . customer_id join addresses as t3 on t2 . address_id = t3 . address_id where t1 . city = value <n>
select t3 . city from customers as t1 join customer_addresses as t2 on t1 . customer_id = t2 . customer_id join addresses as t3 on t2 . address_id = t3 . address_id group by t3 . city order by count ( * ) desc limit value <n>
select city from city where zip_postcode = value <n>
select country from addresses group by country having count ( address_id ) > value <n>
select distinct channel_code from customers as t1 join customer_contact_channels as t2 on t1 . customer_id = t2 . customer_id where t1 . channel_code = value <n>
select max ( active_to_date - active_from_date ) from customer_contact_channels where customer_contact_channels < value <n>
select channel_code , contact_number from customer_contact_channels order by channel_code desc limit value <n>
select t1 . customer_name , t2 . active_from_date from customers as t1 join customer_contact_channels as t2 on t1 . customer_id = t2 . customer_id where t2 . channel_code = value <n>
select t1 . customer_name from customers as t1 join customer_addresses as t2 on t1 . customer_id = t2 . customer_id join addresses as t3 on t2 . address_id = t3 . address_id group by t1 . customer_name order by count ( * ) desc limit value <n>
select count ( * ) from products where product_id not in ( select product_id from order_items ) <n>
select sum ( t3 . order_quantity ) from customers as t1 join order_items as t2 on t1 . customer_id = t2 . customer_id join order_items as t3 on t2 . order_id = t3 . order_id where t1 . customer_name = value <n>
select count ( * ) from customers where t2 . customer_name = value <n>
select count ( * ) from products where product_id not in ( select product_id from order_items ) <n>
select sum ( t2 . order_quantity ) from customer_orders as t1 join order_items as t2 on t1 . order_id = t2 . order_id where t1 . order_date < value <n>
select product_id from order_items group by product_id order by count ( * ) desc limit value <n>
select address_content from addresses where city = value and state_province_county = value union select address_content from addresses where city = value and state_province_county = value <n>
select customer_name from customers where payment_method ! = value <n>
select customer_name from customers except select t1 . customer_name from customers as t1 join customer_orders as t2 on t1 . customer_id = t2 . customer_id join order_items as t3 on t2 . order_id = t3 . order_id join products as t4 on t3 . product_id = t4 . product_id where t4 . product_details = value <n>
select count ( * ) from artist <n>
select age from artist <n>
select famous_title from artist where artist = value <n>
select date_of_ceremony , result from music_festival <n>
select category from music_festival where result = value <n>
select song from volume where weeks_on_top > value <n>
select count ( distinct artist_id ) from volume <n>
select date_of_ceremony from music_festival where category = value <n>
select issue_date from artist as t1 join volume as t2 on t1 . artist_id = t2 . artist_id where t1 . age < = value <n>
select avg ( t2 . weeks_on_top ) from artist as t1 join volume as t2 on t1 . artist_id = t2 . artist_id where t1 . age < = value <n>
select t1 . famous_title from artist as t1 join volume as t2 on t1 . artist_id = t2 . artist_id where t2 . weeks_on_top > value <n>
select famous_release_date from artist order by age desc limit value <n>
select result from music_festival group by result order by count ( * ) desc limit value <n>
select category from music_festival group by category having count ( * ) > value <n>
select famous_title from artist where artist_id not in ( select artist_id from volume ) <n>
select date_of_ceremony from music_festival where category = value and result = value <n>
select issue_date from volume order by weeks_on_top desc limit value <n>
select category , count ( * ) from music_festival group by category <n>
select count ( * ) from roller_coaster <n>
select name from country where country_id not in ( select country_id from country ) <n>
select avg ( roller_coaster ) from status <n>
select status from roller_coaster order by roller_coaster desc limit value <n>
select country , status from country <n>
select t1 . country , t1 . name , t1 . country from roller_coaster as t1 join roller_coaster as t2 on t1 . country_id = t2 . country_id order by t1 . name <n>
select count ( * ) , rank from captain group by rank <n>
select t1 . name from ship as t1 join captain as t2 on t1 . ship_id = t2 . ship_id order by t2 . age limit value <n>
select name , class , rank from captain <n>
select class from captain group by class having count ( * ) > value <n>
select avg ( age ) , min ( age ) , class from captain group by class <n>
select rank from captain where class = value intersect select rank from captain where class = value <n>
select name from captain order by age limit value <n>
select name , type , flag from ship order by built_year desc limit value <n>
select count ( * ) , flag from ship group by flag <n>
select name from ship order by built_year , class <n>
select built_year from ship group by built_year order by count ( * ) desc limit value <n>
select name from ship group by name having count ( * ) > value <n>
select t1 . name from ship as t1 join captain as t2 on t1 . ship_id = t2 . ship_id order by t2 . age limit value <n>
select t1 . name from ship as t1 join captain as t2 on t1 . ship_id = t2 . ship_id where t2 . rank = value intersect select t1 . name from ship as t1 join captain as t2 on t1 . ship_id = t2 . ship_id where t2 . rank = value <n>
select t1 . city from city as t1 join hosting_city as t2 on t1 . city_id = t2 . host_city group by t2 . host_city order by count ( * ) desc limit value <n>
select t1 . city from city as t1 join temperature as t2 on t1 . city_id = t2 . city_id where t2 . mar < t2 . jul <n>
select t3 . venue from city as t1 join hosting_city as t2 on t1 . city_id = t2 . host_city join match as t3 on t2 . match_id = t3 . match_id where t1 . city = value <n>
select t1 . gdp from city as t1 join hosting_city as t2 on t1 . city_id = t2 . host_city where t2 . city = value <n>
select city from city where regional_population > value <n>
select t1 . city from city as t1 join temperature as t2 on t1 . city_id = t2 . city_id order by t2 . feb desc limit value <n>
select t1 . city from city as t1 join temperature as t2 on t1 . city_id = t2 . city_id where t2 . mar < t2 . jul or t2 . mar < t2 . jul or t2 . mar < t2 . oct where t2 . oct = value <n>
select t1 . city from city as t1 join temperature as t2 on t1 . city_id = t2 . city_id where t2 . mar < t2 . jul intersect select t3 . city from city as t3 join hosting_city as t4 on t3 . city_id = t4 . host_city where t1 . city = value and t3 . city = value <n>
select city from city where regional_population > value <n>
select city from city where regional_population > value union select city from city where regional_population < value <n>
select ( from group order by < desc <n>
select t1 . gdp , t1 . regional_population from city as t1 join hosting_city as t2 on t1 . city_id = t2 . host_city where t2 . city = value <n>
select individual_last_name , individual_middle_name , individual_last_name from individuals order by individual_last_name <n>
select t1 . party_email from parties as t1 join party_forms as t2 on t1 . party_id = t2 . party_id group by t1 . party_email order by count ( * ) desc limit value <n>
select t1 . party_email from parties as t1 join party_forms as t2 on t1 . party_id = t2 . party_id group by t1 . party_email order by count ( * ) desc limit value <n>
select organization_name , organization_name from organizations order by date_formed desc <n>
select t3 . individual_last_name from organizations as t1 join organization_contact_individuals as t2 on t1 . organization_id = t2 . organization_id join individuals as t3 on t2 . individual_id = t3 . individual_id where t1 . uk_vat_number = value order by t2 . date_contact_to desc limit value <n>
select count ( * ) from services <n>
select service_name from services where services like value <n>
select count ( * ) from addresses where state_province_county = value <n>
select organization_name from organizations where organization_name like value <n>
select count ( distinct payment_method_code ) from parties <n>
select count ( * ) from ( select * from t1 as t1 join services as t2 on t1 . except = t2 . service_id where t1 . services = value <n>
select t3 . individual_last_name from organizations as t1 join organization_contact_individuals as t2 on t1 . organization_id = t2 . organization_id join individuals as t3 on t2 . individual_id = t3 . individual_id where t1 . uk_vat_number = value order by t2 . date_contact_to asc limit value <n>
select name , home_city , age from driver <n>
select home_city from driver group by home_city order by count ( * ) desc limit value <n>
select distinct home_city from driver where age > value <n>
select school , name from school <n>
select count ( * ) from driver where home_city = value and age < value <n>
select count ( * ) from flight where flight < value <n>
select avg ( id ) from id <n>
select distinct t1 . type from name as t1 join flight as t2 on t1 . id = t2 . company_id join company_id as t3 on t2 . company_id = t3 . id where t3 . name = value <n>
select distinct t1 . name from airport as t1 join airport as t2 on t1 . id = t2 . company_id where t2 . country = value <n>
select t1 . name from pilot as t1 join t3 as t2 on t1 . id = t2 . company_id join airport as t3 on t2 . airport_id = t3 . airport_id where t3 . name = value <n>
select country from date group by country having count ( * ) > value <n>
select count ( * ) from accounts <n>
select count ( * ) from statements <n>
select t1 . statement_id , t2 . statement_details , t1 . account_details from accounts as t1 join statements as t2 on t1 . statement_id = t2 . statement_id <n>
select statement_id , count ( * ) from accounts group by statement_id <n>
select count ( * ) from documents <n>
select document_id , document_name from documents <n>
select document_name , document_id from documents where document_type_code = value <n>
select document_name , document_id from documents where document_name = value <n>
select project_id from documents group by project_id order by count ( * ) asc limit value <n>
select project_id from documents group by project_id having count ( * ) > = value <n>
select document_type_code from documents group by document_type_code order by count ( * ) desc limit value <n>
select t1 . t1 . t1 . statement_details , t2 . document_name from statements as t1 join documents as t2 on t1 . statement_id = t2 . document_id where t1 . statement_details = value <n>
select t1 . document_type_name , t1 . document_type_description , t2 . document_name , t2 . document_type_code from ref_document_types as t1 join documents as t2 on t1 . document_type_code = t2 . document_type_code <n>
select t1 . document_type_name , t1 . document_type_description from ref_document_types as t1 join documents as t2 on t1 . document_type_code = t2 . document_type_code where t2 . document_name = value <n>
select project_id , project_details from projects <n>
select t1 . project_id , t1 . project_details from projects as t1 join documents as t2 on t1 . project_id = t2 . project_id group by t1 . project_id having count ( * ) > value <n>
select count ( * ) from ref_budget_codes <n>
select budget_type_description from ref_budget_codes where budget_type_code = value <n>
select count ( * ) from documents_with_expenses <n>
select budget_type_code , budget_type_description from ref_budget_codes <n>
select budget_type_code , count ( * ) from documents_with_expenses group by budget_type_code <n>
select budget_type_code from documents_with_expenses group by budget_type_code order by count ( * ) desc limit value <n>
select document_id from documents_with_expenses where budget_type_code = value <n>
select count ( * ) from documents_with_expenses where document_type_code not in ( select document_type_code from documents_with_expenses ) <n>
select t1 . documents_with_expenses from documents as t1 join documents_with_expenses as t2 on t1 . document_id = t2 . document_id where t2 . budget_type_code = value intersect select t1 . documents_with_expenses from documents_with_expenses as t1 join ref_budget_codes as t2 on t1 . budget_type_code = t2 . budget_type_code where t2 . budget_type_code = value <n>
select count ( * ) from scientists <n>
select count ( distinct scientist ) from assignedto <n>
select count ( distinct hours ) from projects <n>
select t1 . name from projects as t1 join assignedto as t2 on t1 . code = t2 . project order by t2 . name desc limit value <n>
select t1 . name , t3 . name from assignedto as t1 join projects as t2 on t1 . project = t2 . code join scientists as t3 on t1 . scientist = t3 . ssn where t2 . hours = ( select max ( hours ) from projects ) <n>
select t1 . name from projects as t1 join assignedto as t2 on t1 . code = t2 . project where t1 . name = value <n>
select name from projects where hours between value and value <n>
select name from scientists order by name <n>
select count ( * ) , t1 . name from projects as t1 join assignedto as t2 on t1 . code = t2 . project group by t1 . code <n>
select t2 . name , count ( * ) from assignedto as t1 join projects as t2 on t1 . project = t2 . code group by t1 . project <n>
select t3 . name from assignedto as t1 join projects as t2 on t1 . project = t2 . code join scientists as t3 on t1 . scientist = t3 . ssn where t2 . name = value <n>
select name from projects where code not in ( select project from assignedto ) <n>
select count ( * ) from scientists where ssn not in ( select scientist from assignedto ) <n>
select t3 . name , t3 . name from assignedto as t1 join projects as t2 on t1 . project = t2 . code join scientists as t3 on t1 . scientist = t3 . ssn order by t1 . name <n>
select t1 . name , t3 . name from assignedto as t1 join projects as t2 on t1 . project = t2 . code join scientists as t3 on t1 . scientist = t3 . ssn where t2 . hours = ( select max ( hours ) from projects ) <n>
select winery from wine order by score limit value <n>
select grape , appelation from wine <n>
select name , score from wine <n>
select price from wine where year < value <n>
select distinct t2 . name from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t1 . area = value <n>
select distinct t2 . name from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t1 . area = value <n>
select count ( * ) from appellations where county = value <n>
select t2 . name , t2 . score from grapes as t1 join wine as t2 on t1 . grape = t2 . grape where t1 . color = value <n>
select max ( price ) from wine where appelation not in ( select t1 . appelation from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t1 . area > value <n>
select grape from wine where price between value and value <n>
select count ( * ) , grape from wine group by winery <n>
select avg ( price ) from wine <n>
select distinct name from wine order by name <n>
select t1 . area from appellations as t1 join wine as t2 on t1 . appelation = t2 . appelation where t2 . score > value group by t1 . area order by count ( * ) desc limit value <n>
select t1 . color from grapes as t1 join wine as t2 on t1 . grape = t2 . grape where t2 . score > ( select avg ( price ) from grapes ) <n>
select distinct winery from wine where price between value and value <n>
select max ( price ) , max ( score ) from wine <n>
select max ( price ) , max ( score ) from wine <n>
select winery from wine group by winery having count ( * ) > = value <n>
select name from wine where year < ( select min ( year ) from wine where winery = value ) <n>
select name from wine where price > ( select max ( price ) from wine where winery = value ) <n>
select grape , winery , year from wine where price > value order by name <n>
select name from wine where year < ( select min ( year ) from wine where winery = value ) <n>
select avg ( price ) from wine where appelation not in ( select appelation from appellations where county = value ) <n>
select count ( * ) from station <n>
select t3 . name , t2 . name from train_station as t1 join station as t2 on t1 . station_id = t2 . station_id join train as t3 on t1 . train_id = t3 . station order by t1 . name <n>
select location from station group by location having count ( * ) > = value <n>
select name , <n>
select t1 . name , t2 . name , t1 . name from train as t1 join ( as t2 on t1 . name = t2 . name <n>
select t2 . name from train_station as t1 join station as t2 on t1 . station_id = t2 . station_id group by t1 . station_id having count ( * ) > = value <n>
select t1 . t3 from station as t1 join station as t2 on t1 . station_id = t2 . station_id join station as t3 on t1 . station_id = t3 . station_id where t2 . station = value <n>
select vehicles from vehicles <n>
select vehicle_details from vehicles where vehicle_id = value <n>
select t1 . first_name , t1 . last_name , t2 . last_name , t2 . first_name , t2 . last_name from last_name as t1 join staff as t2 on t1 . address_id = t2 . staff_id <n>
select date_left_staff from staff where first_name = value and last_name = value <n>
select count ( * ) from staff where first_name = value <n>
select distinct t1 . zip_postcode from city as t1 join staff as t2 on t1 . staff_id = t2 . staff_id where t2 . first_name = value and t2 . last_name = value <n>
select city from addresses where zip_postcode = value <n>
select sum ( t1 . amount_payment ) from customer_payments as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t2 . first_name = value and t2 . last_name = value and t2 . last_name = value <n>
select t1 . zip_postcode from addresses as t1 join staff as t2 on t1 . address_id = t2 . staff_address_id where t2 . first_name = value and t2 . last_name = value <n>
select t2 . city , t1 . city from addresses as t1 join staff as t2 on t1 . address_id = t2 . staff_address_id where t1 . city = value <n>
select t1 . state_province_county from addresses as t1 join staff as t2 on t1 . address_id = t2 . staff_address_id group by t1 . state_province_county order by count ( * ) desc limit value <n>
select first_name , last_name from customers <n>
select phone_number , email_address from customers where amount_outstanding > value <n>
select t1 . * from lessons as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t2 . first_name = value and t2 . last_name = value and last_name = value <n>
select date_became_customer from customers where first_name = value and last_name = value <n>
select customer_status_code , count ( * ) from customers group by customer_status_code <n>
select count ( * ) from lessons as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t2 . first_name = value and t2 . last_name = value and t1 . lesson_status_code = value <n>
select max ( amount_outstanding ) , min ( amount_outstanding ) , avg ( amount_outstanding ) from customers <n>
select t1 . first_name , t1 . last_name from customers as t1 join addresses as t2 on t1 . customer_address_id = t2 . address_id where t1 . first_name = value and t2 . last_name = value <n>
select zip_postcode from customers where first_name = value and last_name = value <n>
select city from customers group by city order by count ( * ) desc limit value <n>
select count ( * ) from customers where customer_id not in ( select customer_id from customer_payments ) <n>
select payment_method_code , count ( * ) from customer_payments group by payment_method_code <n>
select count ( * ) from lessons as t1 join staff as t2 on t1 . staff_id = t2 . staff_id where t2 . first_name = value <n>
select count ( * ) from lessons as t1 join staff as t2 on t1 . staff_id = t2 . staff_id where first_name = value <n>
select avg ( first_name ) from staff where first_name = value and last_name = value <n>
select count ( * ) from lessons as t1 join customers as t2 on t1 . customer_id = t2 . customer_id where t2 . first_name = value and t2 . last_name = value and t1 . lesson_status_code = value <n>
select first_name from staff except select t2 . first_name from lessons as t1 join staff as t2 on t1 . staff_id = t2 . staff_id where t2 . first_name = value <n>
select count ( * ) from faculty where rank = value and rank = value <n>
select distinct building from faculty <n>
select fname , lname , phone from faculty where sex = value <n>
select facid from faculty where sex = value <n>
select phone , room , building from faculty where fname = value and lname = value <n>
select fname , lname from faculty where rank = value <n>
select t1 . activity_name from activity as t1 join faculty_participates_in as t2 on t1 . actid = t2 . actid group by t1 . actid order by count ( * ) desc limit value <n>
select building from faculty group by building having count ( * ) > = value <n>
select rank , count ( * ) from faculty group by rank <n>
select rank from faculty group by rank order by count ( * ) asc limit value <n>
select fname , lname from faculty where advisor = value <n>
select fname , lname from student <n>
select t1 . facid , count ( * ) from faculty as t1 join student as t2 on t1 . facid = t2 . advisor group by t1 . facid <n>
select t1 . fname , t1 . lname from faculty as t1 join student as t2 on t1 . facid = t2 . advisor where t2 . fname = value and t2 . lname = value <n>
select facid from faculty except select advisor from student <n>
select activity_name from activity <n>
select count ( distinct facid ) from faculty_participates_in <n>
select facid from faculty where sex = value intersect select advisor from student where sex = value <n>
select count ( * ) from activity <n>
select t1 . fname , t1 . lname from faculty as t1 join faculty_participates_in as t2 on t1 . facid = t2 . facid group by t1 . facid order by count ( * ) desc limit value <n>
select t1 . fname , t1 . lname from faculty as t1 join faculty_participates_in as t2 on t1 . facid = t2 . facid group by t1 . facid order by count ( * ) desc limit value <n>
select t1 . activity_name from activity as t1 join faculty_participates_in as t2 on t1 . actid = t2 . actid group by t1 . actid order by count ( * ) desc limit value <n>
select t1 . stuid from participates_in as t1 join activity as t2 on t2 . actid = t2 . actid where t2 . activity_name = value intersect select t1 . stuid from participates_in as t1 join activity as t2 on t2 . actid = t2 . actid where t2 . activity_name = value <n>
select t1 . activity_name from activity as t1 join participates_in as t2 on t1 . actid = t2 . actid group by t1 . actid order by count ( * ) desc limit value <n>
select t1 . fname from faculty as t1 join faculty_participates_in as t2 on t1 . facid = t2 . facid join activity as t3 on t3 . actid = t2 . actid where t3 . activity_name = value or t3 . activity_name = value <n>
select t1 . lname from faculty as t1 join faculty_participates_in as t2 on t1 . facid = t2 . facid join activity as t3 on t2 . actid = t2 . actid where t3 . activity_name = value intersect select t1 . lname from faculty as t1 join faculty_participates_in as t2 on t1 . facid = t2 . facid join activity as t3 on t2 . actid = t2 . actid where t3 . activity_name = value <n>
select name from airports where city = value <n>
select name , city , country , elevation from airports where city = value <n>
select count ( * ) from airlines where country = value <n>
select name from airports where elevation > value or elevation < value <n>
select country from airlines where active = value <n>
select country from airports order by elevation desc limit value <n>
select count ( distinct city ) from airports where country = value <n>
select count ( * ) from airports as t1 join routes as t2 on t1 . apid = t2 . dst_apid where country = value <n>
select name , city , country from airports order by elevation limit value <n>
select t1 . name , t1 . city , t2 . src_apid from airports as t1 join routes as t2 on t1 . apid = t2 . src_apid group by t2 . src_apid order by count ( * ) desc limit value <n>
select t1 . name , t1 . name from airports as t1 join routes as t2 on t1 . apid = t2 . src_apid group by t1 . name order by count ( * ) desc limit value <n>
select count ( * ) from airports as t1 join routes as t2 on t1 . apid = t2 . dst_apid where country = value <n>
select country from airlines where active = value group by country order by count ( * ) desc limit value <n>
select country , count ( * ) from airlines group by country order by count ( * ) desc <n>
select count ( * ) from airports as t1 join routes as t2 on t1 . apid = t2 . dst_apid where country = value <n>
select count ( * ) from ( select city from airports group by city having count ( * ) > value ) <n>
select count ( * ) from ( select city from airports group by name having count ( * ) > value <n>
select count ( * ) , t1 . name from airports as t1 join routes as t2 on t1 . apid = t2 . src_apid group by t1 . name <n>
select avg ( elevation ) , country from airports group by country <n>
select city from airports group by city having count ( * ) > value <n>
select count ( * ) from airports as t1 join routes as t2 on t1 . apid = t2 . dst_apid where country = value <n>
select count ( * ) from airports as t1 join routes as t2 on t1 . apid = t2 . dst_apid where country = value <n>
select count ( * ) from airports as t1 join routes as t2 on t1 . apid = t2 . dst_apid where country = value <n>
select t1 . name from airports as t1 join routes as t2 on t1 . apid = t2 . src_apid group by t1 . name order by count ( * ) desc limit value <n>
select t1 . name from airports as t1 join routes as t2 on t1 . apid = t2 . src_apid where t1 . country = value group by t1 . name order by count ( * ) desc limit value <n>
select order_id from shipments order by shipment_date desc limit value <n>
select order_id from shipments where shipment_tracking_number = value <n>
select distinct t1 . customer_name from customers as t1 join orders as t2 on t1 . customer_id = t2 . customer_id where t2 . order_status = value <n>
select distinct t1 . customer_details from customers as t1 join orders as t2 on t1 . customer_id = t2 . customer_id where t2 . order_status = value <n>
select customer_id from customers group by customer_id order by count ( * ) desc limit value <n>
select t2 . date_order_placed from customers as t1 join orders as t2 on t1 . customer_id = t2 . customer_id where t1 . customer_name = value <n>
select t1 . customer_name from customers as t1 join orders as t2 on t1 . customer_id = t2 . customer_id where t2 . customers = value intersect select t1 . customer_name from customers as t1 join orders as t2 on t1 . customer_id = t2 . customer_id where t2 . customers = value <n>
select t1 . customer_name from customers as t1 join orders as t2 on t1 . customer_id = t2 . customer_id where t2 . order_status = value intersect select t1 . customer_name from customers as t1 join orders as t2 on t1 . customer_id = t2 . customer_id where t2 . order_status = value <n>
select t1 . date_order_placed from orders as t1 join shipments as t2 on t1 . order_id = t2 . order_id where t2 . shipment_tracking_number = value <n>
select t1 . date_order_placed from orders as t1 join shipments as t2 on t1 . order_id = t2 . order_id where t2 . shipment_tracking_number = value <n>
select product_name , count ( * ) from products group by product_name <n>
select order_id from shipments where shipment_date = ( select max ( shipment_date ) from shipments ) <n>
select distinct product_name from products order by product_name <n>
select order_id from orders order by date_order_placed desc limit value <n>
select invoice_number from invoices where invoice_date < value or invoice_date > value <n>
select distinct invoice_details from invoices where invoice_date < value or invoice_date > value <n>
select t1 . customer_name from customers as t1 join orders as t2 on t1 . customer_id = t2 . customer_id group by t1 . customer_id having count ( * ) > = value <n>
select t1 . customer_name from customers as t1 join orders as t2 join order_items as t3 join products as t4 on t1 . customer_id = t2 . customer_id and t2 . order_id = t3 . order_id and t3 . product_id = t4 . product_id where t4 . product_name = value <n>
select name , nationality , id from mill order by name desc <n>
select t1 . name , t2 . name from mill as t1 join architect as t2 on t1 . name = t2 . name join mill as t3 on t2 . name = t3 . name where t3 . name = value <n>
select t1 . id , t1 . name from mill as t1 join mill as t2 on t1 . id = t2 . architect_id group by t1 . id having count ( * ) > = value <n>
select location from mill where name = value <n>
select type , count ( * ) from mill group by type order by count ( * ) desc limit value <n>
select count ( * ) from book_club <n>
select distinct publisher from book_club <n>
select book_title , author_or_editor , book_club from book_club order by year desc <n>
select publisher from book_club group by publisher order by count ( * ) desc limit value <n>
select category from book_club where year > value group by category having count ( * ) > = value <n>
select publisher from book_club where year = value intersect select publisher from book_club where year = value <n>
select title , year , director from movie order by budget_million desc <n>
select title , director from movie where year < = value <n>
select director from movie where year = value intersect select director from movie where year = value <n>
select avg ( budget_million ) , max ( budget_million ) , min ( budget_million ) from movie where year < value <n>
select t1 . title , t3 . book_title from movie as t1 join culture_company as t2 on t1 . movie_id = t2 . movie_id join book_club as t3 on t3 . movie_id = t2 . movie_id where t3 . book_title = value <n>
select t2 . company_name from movie as t1 join culture_company as t2 on t1 . movie_id = t2 . movie_id where t1 . year = value <n>
